### YamlMime:XRefMap
sorted: true
references:
- uid: StringAlgorithms
  name: StringAlgorithms
  href: api/StringAlgorithms.html
  commentId: N:StringAlgorithms
  fullName: StringAlgorithms
  nameWithType: StringAlgorithms
- uid: StringAlgorithms.StringUtilities
  name: StringUtilities
  href: api/StringAlgorithms.StringUtilities.html
  commentId: T:StringAlgorithms.StringUtilities
  fullName: StringAlgorithms.StringUtilities
  nameWithType: StringUtilities
- uid: StringAlgorithms.StringUtilities.LongestPrefixInCommon(System.String,System.String)
  name: LongestPrefixInCommon(String, String)
  href: api/StringAlgorithms.StringUtilities.html#StringAlgorithms_StringUtilities_LongestPrefixInCommon_System_String_System_String_
  commentId: M:StringAlgorithms.StringUtilities.LongestPrefixInCommon(System.String,System.String)
  fullName: StringAlgorithms.StringUtilities.LongestPrefixInCommon(System.String, System.String)
  nameWithType: StringUtilities.LongestPrefixInCommon(String, String)
- uid: StringAlgorithms.StringUtilities.LongestPrefixInCommon*
  name: LongestPrefixInCommon
  href: api/StringAlgorithms.StringUtilities.html#StringAlgorithms_StringUtilities_LongestPrefixInCommon_
  commentId: Overload:StringAlgorithms.StringUtilities.LongestPrefixInCommon
  isSpec: "True"
  fullName: StringAlgorithms.StringUtilities.LongestPrefixInCommon
  nameWithType: StringUtilities.LongestPrefixInCommon
- uid: StringAlgorithms.SuffixStructures
  name: StringAlgorithms.SuffixStructures
  href: api/StringAlgorithms.SuffixStructures.html
  commentId: N:StringAlgorithms.SuffixStructures
  fullName: StringAlgorithms.SuffixStructures
  nameWithType: StringAlgorithms.SuffixStructures
- uid: StringAlgorithms.SuffixStructures.AdjacencyOrder
  name: AdjacencyOrder
  href: api/StringAlgorithms.SuffixStructures.AdjacencyOrder.html
  commentId: T:StringAlgorithms.SuffixStructures.AdjacencyOrder
  fullName: StringAlgorithms.SuffixStructures.AdjacencyOrder
  nameWithType: AdjacencyOrder
- uid: StringAlgorithms.SuffixStructures.AdjacencyOrder.After
  name: After
  href: api/StringAlgorithms.SuffixStructures.AdjacencyOrder.html#StringAlgorithms_SuffixStructures_AdjacencyOrder_After
  commentId: F:StringAlgorithms.SuffixStructures.AdjacencyOrder.After
  fullName: StringAlgorithms.SuffixStructures.AdjacencyOrder.After
  nameWithType: AdjacencyOrder.After
- uid: StringAlgorithms.SuffixStructures.AdjacencyOrder.Before
  name: Before
  href: api/StringAlgorithms.SuffixStructures.AdjacencyOrder.html#StringAlgorithms_SuffixStructures_AdjacencyOrder_Before
  commentId: F:StringAlgorithms.SuffixStructures.AdjacencyOrder.Before
  fullName: StringAlgorithms.SuffixStructures.AdjacencyOrder.Before
  nameWithType: AdjacencyOrder.Before
- uid: StringAlgorithms.SuffixStructures.AdjacencyOrder.BeforeOrAfter
  name: BeforeOrAfter
  href: api/StringAlgorithms.SuffixStructures.AdjacencyOrder.html#StringAlgorithms_SuffixStructures_AdjacencyOrder_BeforeOrAfter
  commentId: F:StringAlgorithms.SuffixStructures.AdjacencyOrder.BeforeOrAfter
  fullName: StringAlgorithms.SuffixStructures.AdjacencyOrder.BeforeOrAfter
  nameWithType: AdjacencyOrder.BeforeOrAfter
- uid: StringAlgorithms.SuffixStructures.AdjacencyOrder.None
  name: None
  href: api/StringAlgorithms.SuffixStructures.AdjacencyOrder.html#StringAlgorithms_SuffixStructures_AdjacencyOrder_None
  commentId: F:StringAlgorithms.SuffixStructures.AdjacencyOrder.None
  fullName: StringAlgorithms.SuffixStructures.AdjacencyOrder.None
  nameWithType: AdjacencyOrder.None
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4
  name: ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureBuilder-4.html
  commentId: T:StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4
  name.vb: ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder)
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder)
  nameWithType: ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>
  nameWithType.vb: ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder)
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.BuildTree(StringAlgorithms.TextWithTerminator)
  name: BuildTree(TextWithTerminator)
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureBuilder-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureBuilder_4_BuildTree_StringAlgorithms_TextWithTerminator_
  commentId: M:StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.BuildTree(StringAlgorithms.TextWithTerminator)
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.BuildTree(StringAlgorithms.TextWithTerminator)
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).BuildTree(StringAlgorithms.TextWithTerminator)
  nameWithType: ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.BuildTree(TextWithTerminator)
  nameWithType.vb: ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).BuildTree(TextWithTerminator)
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.BuildTree*
  name: BuildTree
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureBuilder-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureBuilder_4_BuildTree_
  commentId: Overload:StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.BuildTree
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.BuildTree
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).BuildTree
  nameWithType: ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.BuildTree
  nameWithType.vb: ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).BuildTree
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.EmptyPath
  name: EmptyPath()
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureBuilder-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureBuilder_4_EmptyPath
  commentId: M:StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.EmptyPath
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.EmptyPath()
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).EmptyPath()
  nameWithType: ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.EmptyPath()
  nameWithType.vb: ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).EmptyPath()
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.EmptyPath*
  name: EmptyPath
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureBuilder-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureBuilder_4_EmptyPath_
  commentId: Overload:StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.EmptyPath
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.EmptyPath
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).EmptyPath
  nameWithType: ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.EmptyPath
  nameWithType.vb: ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).EmptyPath
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.MultistepsPath(IEnumerable{KeyValuePair{`0,`1}})
  name: MultistepsPath(IEnumerable<KeyValuePair<TEdge, TNode>>)
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureBuilder-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureBuilder_4_MultistepsPath_IEnumerable_KeyValuePair__0__1___
  commentId: M:StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.MultistepsPath(IEnumerable{KeyValuePair{`0,`1}})
  name.vb: MultistepsPath(IEnumerable(Of KeyValuePair(Of TEdge, TNode)))
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.MultistepsPath(IEnumerable<KeyValuePair<TEdge, TNode>>)
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).MultistepsPath(IEnumerable(Of KeyValuePair(Of TEdge, TNode)))
  nameWithType: ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.MultistepsPath(IEnumerable<KeyValuePair<TEdge, TNode>>)
  nameWithType.vb: ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).MultistepsPath(IEnumerable(Of KeyValuePair(Of TEdge, TNode)))
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.MultistepsPath(System.ValueTuple{`0,`1}[])
  name: MultistepsPath((TEdge edge, TNode node)[])
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureBuilder-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureBuilder_4_MultistepsPath_System_ValueTuple__0__1____
  commentId: M:StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.MultistepsPath(System.ValueTuple{`0,`1}[])
  name.vb: MultistepsPath((edge As TEdge, node As TNode)(Of TEdge, TNode)())
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.MultistepsPath(System.ValueTuple<TEdge, TNode>[])
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).MultistepsPath(System.ValueTuple(Of TEdge, TNode)())
  nameWithType: ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.MultistepsPath((TEdge edge, TNode node)[])
  nameWithType.vb: ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).MultistepsPath((edge As TEdge, node As TNode)(Of TEdge, TNode)())
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.MultistepsPath*
  name: MultistepsPath
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureBuilder-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureBuilder_4_MultistepsPath_
  commentId: Overload:StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.MultistepsPath
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.MultistepsPath
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).MultistepsPath
  nameWithType: ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.MultistepsPath
  nameWithType.vb: ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).MultistepsPath
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.SingletonPath(`0,`1)
  name: SingletonPath(TEdge, TNode)
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureBuilder-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureBuilder_4_SingletonPath__0__1_
  commentId: M:StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.SingletonPath(`0,`1)
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.SingletonPath(TEdge, TNode)
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).SingletonPath(TEdge, TNode)
  nameWithType: ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.SingletonPath(TEdge, TNode)
  nameWithType.vb: ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).SingletonPath(TEdge, TNode)
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.SingletonPath*
  name: SingletonPath
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureBuilder-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureBuilder_4_SingletonPath_
  commentId: Overload:StringAlgorithms.SuffixStructures.ISuffixStructureBuilder`4.SingletonPath
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.SingletonPath
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).SingletonPath
  nameWithType: ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>.SingletonPath
  nameWithType.vb: ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder).SingletonPath
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureEdge`4
  name: ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureEdge-4.html
  commentId: T:StringAlgorithms.SuffixStructures.ISuffixStructureEdge`4
  name.vb: ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder)
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder)
  nameWithType: ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>
  nameWithType.vb: ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder)
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureEdge`4.Length
  name: Length
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureEdge-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureEdge_4_Length
  commentId: P:StringAlgorithms.SuffixStructures.ISuffixStructureEdge`4.Length
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>.Length
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder).Length
  nameWithType: ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>.Length
  nameWithType.vb: ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder).Length
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureEdge`4.Length*
  name: Length
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureEdge-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureEdge_4_Length_
  commentId: Overload:StringAlgorithms.SuffixStructures.ISuffixStructureEdge`4.Length
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>.Length
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder).Length
  nameWithType: ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>.Length
  nameWithType.vb: ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder).Length
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureEdge`4.Start
  name: Start
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureEdge-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureEdge_4_Start
  commentId: P:StringAlgorithms.SuffixStructures.ISuffixStructureEdge`4.Start
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>.Start
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder).Start
  nameWithType: ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>.Start
  nameWithType.vb: ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder).Start
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureEdge`4.Start*
  name: Start
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureEdge-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureEdge_4_Start_
  commentId: Overload:StringAlgorithms.SuffixStructures.ISuffixStructureEdge`4.Start
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>.Start
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder).Start
  nameWithType: ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>.Start
  nameWithType.vb: ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder).Start
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureNode`4
  name: ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureNode-4.html
  commentId: T:StringAlgorithms.SuffixStructures.ISuffixStructureNode`4
  name.vb: ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder)
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder)
  nameWithType: ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>
  nameWithType.vb: ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder)
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureNode`4.Children
  name: Children
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureNode-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureNode_4_Children
  commentId: P:StringAlgorithms.SuffixStructures.ISuffixStructureNode`4.Children
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>.Children
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder).Children
  nameWithType: ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>.Children
  nameWithType.vb: ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder).Children
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureNode`4.Children*
  name: Children
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureNode-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureNode_4_Children_
  commentId: Overload:StringAlgorithms.SuffixStructures.ISuffixStructureNode`4.Children
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>.Children
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder).Children
  nameWithType: ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>.Children
  nameWithType.vb: ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder).Children
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureNode`4.Start
  name: Start
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureNode-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureNode_4_Start
  commentId: P:StringAlgorithms.SuffixStructures.ISuffixStructureNode`4.Start
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>.Start
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder).Start
  nameWithType: ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>.Start
  nameWithType.vb: ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder).Start
- uid: StringAlgorithms.SuffixStructures.ISuffixStructureNode`4.Start*
  name: Start
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructureNode-4.html#StringAlgorithms_SuffixStructures_ISuffixStructureNode_4_Start_
  commentId: Overload:StringAlgorithms.SuffixStructures.ISuffixStructureNode`4.Start
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>.Start
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder).Start
  nameWithType: ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>.Start
  nameWithType.vb: ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder).Start
- uid: StringAlgorithms.SuffixStructures.ISuffixStructurePath`4
  name: ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructurePath-4.html
  commentId: T:StringAlgorithms.SuffixStructures.ISuffixStructurePath`4
  name.vb: ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder)
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder)
  nameWithType: ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>
  nameWithType.vb: ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder)
- uid: StringAlgorithms.SuffixStructures.ISuffixStructurePath`4.PathNodes
  name: PathNodes
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructurePath-4.html#StringAlgorithms_SuffixStructures_ISuffixStructurePath_4_PathNodes
  commentId: P:StringAlgorithms.SuffixStructures.ISuffixStructurePath`4.PathNodes
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>.PathNodes
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder).PathNodes
  nameWithType: ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>.PathNodes
  nameWithType.vb: ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder).PathNodes
- uid: StringAlgorithms.SuffixStructures.ISuffixStructurePath`4.PathNodes*
  name: PathNodes
  href: api/StringAlgorithms.SuffixStructures.ISuffixStructurePath-4.html#StringAlgorithms_SuffixStructures_ISuffixStructurePath_4_PathNodes_
  commentId: Overload:StringAlgorithms.SuffixStructures.ISuffixStructurePath`4.PathNodes
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>.PathNodes
  fullName.vb: StringAlgorithms.SuffixStructures.ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder).PathNodes
  nameWithType: ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>.PathNodes
  nameWithType.vb: ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder).PathNodes
- uid: StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions
  name: SuffixStructureBuilderExtensions
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions.html
  commentId: T:StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions
  nameWithType: SuffixStructureBuilderExtensions
- uid: StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions.BuildTree*
  name: BuildTree
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructureBuilderExtensions_BuildTree_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions.BuildTree
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions.BuildTree
  nameWithType: SuffixStructureBuilderExtensions.BuildTree
- uid: StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions.BuildTree``4(StringAlgorithms.SuffixStructures.ISuffixStructureBuilder{``0,``1,``2,``3},System.String)
  name: BuildTree<TEdge, TNode, TPath, TBuilder>(ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>, String)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructureBuilderExtensions_BuildTree__4_StringAlgorithms_SuffixStructures_ISuffixStructureBuilder___0___1___2___3__System_String_
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions.BuildTree``4(StringAlgorithms.SuffixStructures.ISuffixStructureBuilder{``0,``1,``2,``3},System.String)
  name.vb: BuildTree(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder), String)
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions.BuildTree<TEdge, TNode, TPath, TBuilder>(StringAlgorithms.SuffixStructures.ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>, System.String)
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureBuilderExtensions.BuildTree(Of TEdge, TNode, TPath, TBuilder)(StringAlgorithms.SuffixStructures.ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder), System.String)
  nameWithType: SuffixStructureBuilderExtensions.BuildTree<TEdge, TNode, TPath, TBuilder>(ISuffixStructureBuilder<TEdge, TNode, TPath, TBuilder>, String)
  nameWithType.vb: SuffixStructureBuilderExtensions.BuildTree(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureBuilder(Of TEdge, TNode, TPath, TBuilder), String)
- uid: StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions
  name: SuffixStructureEdgeExtensions
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.html
  commentId: T:StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions
  nameWithType: SuffixStructureEdgeExtensions
- uid: StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.IsAdjacentTo*
  name: IsAdjacentTo
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructureEdgeExtensions_IsAdjacentTo_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.IsAdjacentTo
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.IsAdjacentTo
  nameWithType: SuffixStructureEdgeExtensions.IsAdjacentTo
- uid: StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.IsAdjacentTo``4(StringAlgorithms.SuffixStructures.ISuffixStructureEdge{``0,``1,``2,``3},``0,StringAlgorithms.SuffixStructures.AdjacencyOrder)
  name: IsAdjacentTo<TEdge, TNode, TPath, TBuilder>(ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>, TEdge, AdjacencyOrder)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructureEdgeExtensions_IsAdjacentTo__4_StringAlgorithms_SuffixStructures_ISuffixStructureEdge___0___1___2___3____0_StringAlgorithms_SuffixStructures_AdjacencyOrder_
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.IsAdjacentTo``4(StringAlgorithms.SuffixStructures.ISuffixStructureEdge{``0,``1,``2,``3},``0,StringAlgorithms.SuffixStructures.AdjacencyOrder)
  name.vb: IsAdjacentTo(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder), TEdge, AdjacencyOrder)
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.IsAdjacentTo<TEdge, TNode, TPath, TBuilder>(StringAlgorithms.SuffixStructures.ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>, TEdge, StringAlgorithms.SuffixStructures.AdjacencyOrder)
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.IsAdjacentTo(Of TEdge, TNode, TPath, TBuilder)(StringAlgorithms.SuffixStructures.ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder), TEdge, StringAlgorithms.SuffixStructures.AdjacencyOrder)
  nameWithType: SuffixStructureEdgeExtensions.IsAdjacentTo<TEdge, TNode, TPath, TBuilder>(ISuffixStructureEdge<TEdge, TNode, TPath, TBuilder>, TEdge, AdjacencyOrder)
  nameWithType.vb: SuffixStructureEdgeExtensions.IsAdjacentTo(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureEdge(Of TEdge, TNode, TPath, TBuilder), TEdge, AdjacencyOrder)
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatch`1
  name: SuffixStructureMatch<TPath>
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatch-1.html
  commentId: T:StringAlgorithms.SuffixStructures.SuffixStructureMatch`1
  name.vb: SuffixStructureMatch(Of TPath)
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatch<TPath>
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatch(Of TPath)
  nameWithType: SuffixStructureMatch<TPath>
  nameWithType.vb: SuffixStructureMatch(Of TPath)
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.#ctor(System.Boolean,System.Int32,System.Int32,`0)
  name: SuffixStructureMatch(Boolean, Int32, Int32, TPath)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatch-1.html#StringAlgorithms_SuffixStructures_SuffixStructureMatch_1__ctor_System_Boolean_System_Int32_System_Int32__0_
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.#ctor(System.Boolean,System.Int32,System.Int32,`0)
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatch<TPath>.SuffixStructureMatch(System.Boolean, System.Int32, System.Int32, TPath)
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatch(Of TPath).SuffixStructureMatch(System.Boolean, System.Int32, System.Int32, TPath)
  nameWithType: SuffixStructureMatch<TPath>.SuffixStructureMatch(Boolean, Int32, Int32, TPath)
  nameWithType.vb: SuffixStructureMatch(Of TPath).SuffixStructureMatch(Boolean, Int32, Int32, TPath)
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.#ctor*
  name: SuffixStructureMatch
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatch-1.html#StringAlgorithms_SuffixStructures_SuffixStructureMatch_1__ctor_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatch<TPath>.SuffixStructureMatch
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatch(Of TPath).SuffixStructureMatch
  nameWithType: SuffixStructureMatch<TPath>.SuffixStructureMatch
  nameWithType.vb: SuffixStructureMatch(Of TPath).SuffixStructureMatch
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Begin
  name: Begin
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatch-1.html#StringAlgorithms_SuffixStructures_SuffixStructureMatch_1_Begin
  commentId: P:StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Begin
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatch<TPath>.Begin
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatch(Of TPath).Begin
  nameWithType: SuffixStructureMatch<TPath>.Begin
  nameWithType.vb: SuffixStructureMatch(Of TPath).Begin
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Begin*
  name: Begin
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatch-1.html#StringAlgorithms_SuffixStructures_SuffixStructureMatch_1_Begin_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Begin
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatch<TPath>.Begin
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatch(Of TPath).Begin
  nameWithType: SuffixStructureMatch<TPath>.Begin
  nameWithType.vb: SuffixStructureMatch(Of TPath).Begin
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.MatchedChars
  name: MatchedChars
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatch-1.html#StringAlgorithms_SuffixStructures_SuffixStructureMatch_1_MatchedChars
  commentId: P:StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.MatchedChars
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatch<TPath>.MatchedChars
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatch(Of TPath).MatchedChars
  nameWithType: SuffixStructureMatch<TPath>.MatchedChars
  nameWithType.vb: SuffixStructureMatch(Of TPath).MatchedChars
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.MatchedChars*
  name: MatchedChars
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatch-1.html#StringAlgorithms_SuffixStructures_SuffixStructureMatch_1_MatchedChars_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.MatchedChars
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatch<TPath>.MatchedChars
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatch(Of TPath).MatchedChars
  nameWithType: SuffixStructureMatch<TPath>.MatchedChars
  nameWithType.vb: SuffixStructureMatch(Of TPath).MatchedChars
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Path
  name: Path
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatch-1.html#StringAlgorithms_SuffixStructures_SuffixStructureMatch_1_Path
  commentId: P:StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Path
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatch<TPath>.Path
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatch(Of TPath).Path
  nameWithType: SuffixStructureMatch<TPath>.Path
  nameWithType.vb: SuffixStructureMatch(Of TPath).Path
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Path*
  name: Path
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatch-1.html#StringAlgorithms_SuffixStructures_SuffixStructureMatch_1_Path_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Path
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatch<TPath>.Path
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatch(Of TPath).Path
  nameWithType: SuffixStructureMatch<TPath>.Path
  nameWithType.vb: SuffixStructureMatch(Of TPath).Path
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Success
  name: Success
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatch-1.html#StringAlgorithms_SuffixStructures_SuffixStructureMatch_1_Success
  commentId: P:StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Success
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatch<TPath>.Success
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatch(Of TPath).Success
  nameWithType: SuffixStructureMatch<TPath>.Success
  nameWithType.vb: SuffixStructureMatch(Of TPath).Success
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Success*
  name: Success
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatch-1.html#StringAlgorithms_SuffixStructures_SuffixStructureMatch_1_Success_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructureMatch`1.Success
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatch<TPath>.Success
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatch(Of TPath).Success
  nameWithType: SuffixStructureMatch<TPath>.Success
  nameWithType.vb: SuffixStructureMatch(Of TPath).Success
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatcher
  name: SuffixStructureMatcher
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatcher.html
  commentId: T:StringAlgorithms.SuffixStructures.SuffixStructureMatcher
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatcher
  nameWithType: SuffixStructureMatcher
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatcher.Match*
  name: Match
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatcher.html#StringAlgorithms_SuffixStructures_SuffixStructureMatcher_Match_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructureMatcher.Match
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatcher.Match
  nameWithType: SuffixStructureMatcher.Match
- uid: StringAlgorithms.SuffixStructures.SuffixStructureMatcher.Match``4(StringAlgorithms.SuffixStructures.ISuffixStructureNode{``0,``1,``2,``3},StringAlgorithms.TextWithTerminator,System.String)
  name: Match<TEdge, TNode, TPath, TBuilder>(ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>, TextWithTerminator, String)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureMatcher.html#StringAlgorithms_SuffixStructures_SuffixStructureMatcher_Match__4_StringAlgorithms_SuffixStructures_ISuffixStructureNode___0___1___2___3__StringAlgorithms_TextWithTerminator_System_String_
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructureMatcher.Match``4(StringAlgorithms.SuffixStructures.ISuffixStructureNode{``0,``1,``2,``3},StringAlgorithms.TextWithTerminator,System.String)
  name.vb: Match(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder), TextWithTerminator, String)
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureMatcher.Match<TEdge, TNode, TPath, TBuilder>(StringAlgorithms.SuffixStructures.ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>, StringAlgorithms.TextWithTerminator, System.String)
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureMatcher.Match(Of TEdge, TNode, TPath, TBuilder)(StringAlgorithms.SuffixStructures.ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder), StringAlgorithms.TextWithTerminator, System.String)
  nameWithType: SuffixStructureMatcher.Match<TEdge, TNode, TPath, TBuilder>(ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>, TextWithTerminator, String)
  nameWithType.vb: SuffixStructureMatcher.Match(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder), TextWithTerminator, String)
- uid: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions
  name: SuffixStructureNodeExtensions
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.html
  commentId: T:StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions
  nameWithType: SuffixStructureNodeExtensions
- uid: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllNodeToLeafPaths*
  name: GetAllNodeToLeafPaths
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructureNodeExtensions_GetAllNodeToLeafPaths_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllNodeToLeafPaths
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllNodeToLeafPaths
  nameWithType: SuffixStructureNodeExtensions.GetAllNodeToLeafPaths
- uid: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllNodeToLeafPaths``4(StringAlgorithms.SuffixStructures.ISuffixStructureNode{``0,``1,``2,``3})
  name: GetAllNodeToLeafPaths<TEdge, TNode, TPath, TBuilder>(ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructureNodeExtensions_GetAllNodeToLeafPaths__4_StringAlgorithms_SuffixStructures_ISuffixStructureNode___0___1___2___3__
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllNodeToLeafPaths``4(StringAlgorithms.SuffixStructures.ISuffixStructureNode{``0,``1,``2,``3})
  name.vb: GetAllNodeToLeafPaths(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder))
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllNodeToLeafPaths<TEdge, TNode, TPath, TBuilder>(StringAlgorithms.SuffixStructures.ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>)
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllNodeToLeafPaths(Of TEdge, TNode, TPath, TBuilder)(StringAlgorithms.SuffixStructures.ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder))
  nameWithType: SuffixStructureNodeExtensions.GetAllNodeToLeafPaths<TEdge, TNode, TPath, TBuilder>(ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>)
  nameWithType.vb: SuffixStructureNodeExtensions.GetAllNodeToLeafPaths(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder))
- uid: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllSuffixesFor*
  name: GetAllSuffixesFor
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructureNodeExtensions_GetAllSuffixesFor_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllSuffixesFor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllSuffixesFor
  nameWithType: SuffixStructureNodeExtensions.GetAllSuffixesFor
- uid: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllSuffixesFor``4(StringAlgorithms.SuffixStructures.ISuffixStructureNode{``0,``1,``2,``3},StringAlgorithms.TextWithTerminator)
  name: GetAllSuffixesFor<TEdge, TNode, TPath, TBuilder>(ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>, TextWithTerminator)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructureNodeExtensions_GetAllSuffixesFor__4_StringAlgorithms_SuffixStructures_ISuffixStructureNode___0___1___2___3__StringAlgorithms_TextWithTerminator_
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllSuffixesFor``4(StringAlgorithms.SuffixStructures.ISuffixStructureNode{``0,``1,``2,``3},StringAlgorithms.TextWithTerminator)
  name.vb: GetAllSuffixesFor(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder), TextWithTerminator)
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllSuffixesFor<TEdge, TNode, TPath, TBuilder>(StringAlgorithms.SuffixStructures.ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>, StringAlgorithms.TextWithTerminator)
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.GetAllSuffixesFor(Of TEdge, TNode, TPath, TBuilder)(StringAlgorithms.SuffixStructures.ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder), StringAlgorithms.TextWithTerminator)
  nameWithType: SuffixStructureNodeExtensions.GetAllSuffixesFor<TEdge, TNode, TPath, TBuilder>(ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>, TextWithTerminator)
  nameWithType.vb: SuffixStructureNodeExtensions.GetAllSuffixesFor(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder), TextWithTerminator)
- uid: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.IsLeaf*
  name: IsLeaf
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructureNodeExtensions_IsLeaf_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.IsLeaf
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.IsLeaf
  nameWithType: SuffixStructureNodeExtensions.IsLeaf
- uid: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.IsLeaf``4(StringAlgorithms.SuffixStructures.ISuffixStructureNode{``0,``1,``2,``3})
  name: IsLeaf<TEdge, TNode, TPath, TBuilder>(ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructureNodeExtensions_IsLeaf__4_StringAlgorithms_SuffixStructures_ISuffixStructureNode___0___1___2___3__
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.IsLeaf``4(StringAlgorithms.SuffixStructures.ISuffixStructureNode{``0,``1,``2,``3})
  name.vb: IsLeaf(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder))
  fullName: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.IsLeaf<TEdge, TNode, TPath, TBuilder>(StringAlgorithms.SuffixStructures.ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>)
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.IsLeaf(Of TEdge, TNode, TPath, TBuilder)(StringAlgorithms.SuffixStructures.ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder))
  nameWithType: SuffixStructureNodeExtensions.IsLeaf<TEdge, TNode, TPath, TBuilder>(ISuffixStructureNode<TEdge, TNode, TPath, TBuilder>)
  nameWithType.vb: SuffixStructureNodeExtensions.IsLeaf(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructureNode(Of TEdge, TNode, TPath, TBuilder))
- uid: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions
  name: SuffixStructurePathExtensions
  href: api/StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.html
  commentId: T:StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions
  fullName: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions
  nameWithType: SuffixStructurePathExtensions
- uid: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Append*
  name: Append
  href: api/StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructurePathExtensions_Append_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Append
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Append
  nameWithType: SuffixStructurePathExtensions.Append
- uid: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Append``4(StringAlgorithms.SuffixStructures.ISuffixStructurePath{``0,``1,``2,``3},``0,``1)
  name: Append<TEdge, TNode, TPath, TBuilder>(ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, TEdge, TNode)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructurePathExtensions_Append__4_StringAlgorithms_SuffixStructures_ISuffixStructurePath___0___1___2___3____0___1_
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Append``4(StringAlgorithms.SuffixStructures.ISuffixStructurePath{``0,``1,``2,``3},``0,``1)
  name.vb: Append(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), TEdge, TNode)
  fullName: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Append<TEdge, TNode, TPath, TBuilder>(StringAlgorithms.SuffixStructures.ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, TEdge, TNode)
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Append(Of TEdge, TNode, TPath, TBuilder)(StringAlgorithms.SuffixStructures.ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), TEdge, TNode)
  nameWithType: SuffixStructurePathExtensions.Append<TEdge, TNode, TPath, TBuilder>(ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, TEdge, TNode)
  nameWithType.vb: SuffixStructurePathExtensions.Append(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), TEdge, TNode)
- uid: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Concat*
  name: Concat
  href: api/StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructurePathExtensions_Concat_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Concat
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Concat
  nameWithType: SuffixStructurePathExtensions.Concat
- uid: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Concat``4(StringAlgorithms.SuffixStructures.ISuffixStructurePath{``0,``1,``2,``3},StringAlgorithms.SuffixStructures.ISuffixStructurePath{``0,``1,``2,``3})
  name: Concat<TEdge, TNode, TPath, TBuilder>(ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructurePathExtensions_Concat__4_StringAlgorithms_SuffixStructures_ISuffixStructurePath___0___1___2___3__StringAlgorithms_SuffixStructures_ISuffixStructurePath___0___1___2___3__
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Concat``4(StringAlgorithms.SuffixStructures.ISuffixStructurePath{``0,``1,``2,``3},StringAlgorithms.SuffixStructures.ISuffixStructurePath{``0,``1,``2,``3})
  name.vb: Concat(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder))
  fullName: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Concat<TEdge, TNode, TPath, TBuilder>(StringAlgorithms.SuffixStructures.ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, StringAlgorithms.SuffixStructures.ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>)
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.Concat(Of TEdge, TNode, TPath, TBuilder)(StringAlgorithms.SuffixStructures.ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), StringAlgorithms.SuffixStructures.ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder))
  nameWithType: SuffixStructurePathExtensions.Concat<TEdge, TNode, TPath, TBuilder>(ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>)
  nameWithType.vb: SuffixStructurePathExtensions.Concat(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder))
- uid: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.IsSuffixOf*
  name: IsSuffixOf
  href: api/StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructurePathExtensions_IsSuffixOf_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.IsSuffixOf
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.IsSuffixOf
  nameWithType: SuffixStructurePathExtensions.IsSuffixOf
- uid: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.IsSuffixOf``4(StringAlgorithms.SuffixStructures.ISuffixStructurePath{``0,``1,``2,``3},StringAlgorithms.TextWithTerminator)
  name: IsSuffixOf<TEdge, TNode, TPath, TBuilder>(ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, TextWithTerminator)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructurePathExtensions_IsSuffixOf__4_StringAlgorithms_SuffixStructures_ISuffixStructurePath___0___1___2___3__StringAlgorithms_TextWithTerminator_
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.IsSuffixOf``4(StringAlgorithms.SuffixStructures.ISuffixStructurePath{``0,``1,``2,``3},StringAlgorithms.TextWithTerminator)
  name.vb: IsSuffixOf(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), TextWithTerminator)
  fullName: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.IsSuffixOf<TEdge, TNode, TPath, TBuilder>(StringAlgorithms.SuffixStructures.ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, StringAlgorithms.TextWithTerminator)
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.IsSuffixOf(Of TEdge, TNode, TPath, TBuilder)(StringAlgorithms.SuffixStructures.ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), StringAlgorithms.TextWithTerminator)
  nameWithType: SuffixStructurePathExtensions.IsSuffixOf<TEdge, TNode, TPath, TBuilder>(ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, TextWithTerminator)
  nameWithType.vb: SuffixStructurePathExtensions.IsSuffixOf(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), TextWithTerminator)
- uid: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.SuffixFor*
  name: SuffixFor
  href: api/StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructurePathExtensions_SuffixFor_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.SuffixFor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.SuffixFor
  nameWithType: SuffixStructurePathExtensions.SuffixFor
- uid: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.SuffixFor``4(StringAlgorithms.SuffixStructures.ISuffixStructurePath{``0,``1,``2,``3},StringAlgorithms.TextWithTerminator)
  name: SuffixFor<TEdge, TNode, TPath, TBuilder>(ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, TextWithTerminator)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.html#StringAlgorithms_SuffixStructures_SuffixStructurePathExtensions_SuffixFor__4_StringAlgorithms_SuffixStructures_ISuffixStructurePath___0___1___2___3__StringAlgorithms_TextWithTerminator_
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.SuffixFor``4(StringAlgorithms.SuffixStructures.ISuffixStructurePath{``0,``1,``2,``3},StringAlgorithms.TextWithTerminator)
  name.vb: SuffixFor(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), TextWithTerminator)
  fullName: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.SuffixFor<TEdge, TNode, TPath, TBuilder>(StringAlgorithms.SuffixStructures.ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, StringAlgorithms.TextWithTerminator)
  fullName.vb: StringAlgorithms.SuffixStructures.SuffixStructurePathExtensions.SuffixFor(Of TEdge, TNode, TPath, TBuilder)(StringAlgorithms.SuffixStructures.ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), StringAlgorithms.TextWithTerminator)
  nameWithType: SuffixStructurePathExtensions.SuffixFor<TEdge, TNode, TPath, TBuilder>(ISuffixStructurePath<TEdge, TNode, TPath, TBuilder>, TextWithTerminator)
  nameWithType.vb: SuffixStructurePathExtensions.SuffixFor(Of TEdge, TNode, TPath, TBuilder)(ISuffixStructurePath(Of TEdge, TNode, TPath, TBuilder), TextWithTerminator)
- uid: StringAlgorithms.SuffixStructures.SuffixStructuresConverter
  name: SuffixStructuresConverter
  href: api/StringAlgorithms.SuffixStructures.SuffixStructuresConverter.html
  commentId: T:StringAlgorithms.SuffixStructures.SuffixStructuresConverter
  fullName: StringAlgorithms.SuffixStructures.SuffixStructuresConverter
  nameWithType: SuffixStructuresConverter
- uid: StringAlgorithms.SuffixStructures.SuffixStructuresConverter.TrieToTree(StringAlgorithms.SuffixTries.SuffixTrieNode)
  name: TrieToTree(SuffixTrieNode)
  href: api/StringAlgorithms.SuffixStructures.SuffixStructuresConverter.html#StringAlgorithms_SuffixStructures_SuffixStructuresConverter_TrieToTree_StringAlgorithms_SuffixTries_SuffixTrieNode_
  commentId: M:StringAlgorithms.SuffixStructures.SuffixStructuresConverter.TrieToTree(StringAlgorithms.SuffixTries.SuffixTrieNode)
  fullName: StringAlgorithms.SuffixStructures.SuffixStructuresConverter.TrieToTree(StringAlgorithms.SuffixTries.SuffixTrieNode)
  nameWithType: SuffixStructuresConverter.TrieToTree(SuffixTrieNode)
- uid: StringAlgorithms.SuffixStructures.SuffixStructuresConverter.TrieToTree*
  name: TrieToTree
  href: api/StringAlgorithms.SuffixStructures.SuffixStructuresConverter.html#StringAlgorithms_SuffixStructures_SuffixStructuresConverter_TrieToTree_
  commentId: Overload:StringAlgorithms.SuffixStructures.SuffixStructuresConverter.TrieToTree
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.SuffixStructuresConverter.TrieToTree
  nameWithType: SuffixStructuresConverter.TrieToTree
- uid: StringAlgorithms.SuffixStructures.Tests
  name: StringAlgorithms.SuffixStructures.Tests
  href: api/StringAlgorithms.SuffixStructures.Tests.html
  commentId: N:StringAlgorithms.SuffixStructures.Tests
  fullName: StringAlgorithms.SuffixStructures.Tests
  nameWithType: StringAlgorithms.SuffixStructures.Tests
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests
  name: SuffixStructuresNodeExtensionsTests
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html
  commentId: T:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests
  nameWithType: SuffixStructuresNodeExtensionsTests
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect
  name: GetAllNodeToLeafPaths_IsCorrect()
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_GetAllNodeToLeafPaths_IsCorrect
  commentId: M:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect()
  nameWithType: SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect()
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect*
  name: GetAllNodeToLeafPaths_IsCorrect
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_GetAllNodeToLeafPaths_IsCorrect_
  commentId: Overload:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect
  nameWithType: SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect2
  name: GetAllNodeToLeafPaths_IsCorrect2()
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_GetAllNodeToLeafPaths_IsCorrect2
  commentId: M:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect2
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect2()
  nameWithType: SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect2()
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect2*
  name: GetAllNodeToLeafPaths_IsCorrect2
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_GetAllNodeToLeafPaths_IsCorrect2_
  commentId: Overload:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect2
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect2
  nameWithType: SuffixStructuresNodeExtensionsTests.GetAllNodeToLeafPaths_IsCorrect2
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect
  name: GetAllSuffixesFor_IsCorrect()
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_GetAllSuffixesFor_IsCorrect
  commentId: M:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect()
  nameWithType: SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect()
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect*
  name: GetAllSuffixesFor_IsCorrect
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_GetAllSuffixesFor_IsCorrect_
  commentId: Overload:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect
  nameWithType: SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect2
  name: GetAllSuffixesFor_IsCorrect2()
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_GetAllSuffixesFor_IsCorrect2
  commentId: M:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect2
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect2()
  nameWithType: SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect2()
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect2*
  name: GetAllSuffixesFor_IsCorrect2
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_GetAllSuffixesFor_IsCorrect2_
  commentId: Overload:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect2
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect2
  nameWithType: SuffixStructuresNodeExtensionsTests.GetAllSuffixesFor_IsCorrect2
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTree
  name: IsLeaf_IsCorrectForSuffixTree()
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_IsLeaf_IsCorrectForSuffixTree
  commentId: M:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTree
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTree()
  nameWithType: SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTree()
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTree*
  name: IsLeaf_IsCorrectForSuffixTree
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_IsLeaf_IsCorrectForSuffixTree_
  commentId: Overload:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTree
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTree
  nameWithType: SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTree
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTrie
  name: IsLeaf_IsCorrectForSuffixTrie()
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_IsLeaf_IsCorrectForSuffixTrie
  commentId: M:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTrie
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTrie()
  nameWithType: SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTrie()
- uid: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTrie*
  name: IsLeaf_IsCorrectForSuffixTrie
  href: api/StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.html#StringAlgorithms_SuffixStructures_Tests_SuffixStructuresNodeExtensionsTests_IsLeaf_IsCorrectForSuffixTrie_
  commentId: Overload:StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTrie
  isSpec: "True"
  fullName: StringAlgorithms.SuffixStructures.Tests.SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTrie
  nameWithType: SuffixStructuresNodeExtensionsTests.IsLeaf_IsCorrectForSuffixTrie
- uid: StringAlgorithms.SuffixTrees
  name: StringAlgorithms.SuffixTrees
  href: api/StringAlgorithms.SuffixTrees.html
  commentId: N:StringAlgorithms.SuffixTrees
  fullName: StringAlgorithms.SuffixTrees
  nameWithType: StringAlgorithms.SuffixTrees
- uid: StringAlgorithms.SuffixTrees.SuffixTreeBuilder
  name: SuffixTreeBuilder
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeBuilder.html
  commentId: T:StringAlgorithms.SuffixTrees.SuffixTreeBuilder
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeBuilder
  nameWithType: SuffixTreeBuilder
- uid: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.BuildTree(StringAlgorithms.TextWithTerminator)
  name: BuildTree(TextWithTerminator)
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeBuilder.html#StringAlgorithms_SuffixTrees_SuffixTreeBuilder_BuildTree_StringAlgorithms_TextWithTerminator_
  commentId: M:StringAlgorithms.SuffixTrees.SuffixTreeBuilder.BuildTree(StringAlgorithms.TextWithTerminator)
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.BuildTree(StringAlgorithms.TextWithTerminator)
  nameWithType: SuffixTreeBuilder.BuildTree(TextWithTerminator)
- uid: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.BuildTree*
  name: BuildTree
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeBuilder.html#StringAlgorithms_SuffixTrees_SuffixTreeBuilder_BuildTree_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeBuilder.BuildTree
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.BuildTree
  nameWithType: SuffixTreeBuilder.BuildTree
- uid: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.EmptyPath
  name: EmptyPath()
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeBuilder.html#StringAlgorithms_SuffixTrees_SuffixTreeBuilder_EmptyPath
  commentId: M:StringAlgorithms.SuffixTrees.SuffixTreeBuilder.EmptyPath
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.EmptyPath()
  nameWithType: SuffixTreeBuilder.EmptyPath()
- uid: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.EmptyPath*
  name: EmptyPath
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeBuilder.html#StringAlgorithms_SuffixTrees_SuffixTreeBuilder_EmptyPath_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeBuilder.EmptyPath
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.EmptyPath
  nameWithType: SuffixTreeBuilder.EmptyPath
- uid: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.MultistepsPath(IEnumerable{KeyValuePair{StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode}})
  name: MultistepsPath(IEnumerable<KeyValuePair<SuffixTreeEdge, SuffixTreeNode>>)
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeBuilder.html#StringAlgorithms_SuffixTrees_SuffixTreeBuilder_MultistepsPath_IEnumerable_KeyValuePair_StringAlgorithms_SuffixTrees_SuffixTreeEdge_StringAlgorithms_SuffixTrees_SuffixTreeNode___
  commentId: M:StringAlgorithms.SuffixTrees.SuffixTreeBuilder.MultistepsPath(IEnumerable{KeyValuePair{StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode}})
  name.vb: MultistepsPath(IEnumerable(Of KeyValuePair(Of SuffixTreeEdge, SuffixTreeNode)))
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.MultistepsPath(IEnumerable<KeyValuePair<StringAlgorithms.SuffixTrees.SuffixTreeEdge, StringAlgorithms.SuffixTrees.SuffixTreeNode>>)
  fullName.vb: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.MultistepsPath(IEnumerable(Of KeyValuePair(Of StringAlgorithms.SuffixTrees.SuffixTreeEdge, StringAlgorithms.SuffixTrees.SuffixTreeNode)))
  nameWithType: SuffixTreeBuilder.MultistepsPath(IEnumerable<KeyValuePair<SuffixTreeEdge, SuffixTreeNode>>)
  nameWithType.vb: SuffixTreeBuilder.MultistepsPath(IEnumerable(Of KeyValuePair(Of SuffixTreeEdge, SuffixTreeNode)))
- uid: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.MultistepsPath(System.ValueTuple{StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode}[])
  name: MultistepsPath((SuffixTreeEdge edge, SuffixTreeNode node)[])
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeBuilder.html#StringAlgorithms_SuffixTrees_SuffixTreeBuilder_MultistepsPath_System_ValueTuple_StringAlgorithms_SuffixTrees_SuffixTreeEdge_StringAlgorithms_SuffixTrees_SuffixTreeNode____
  commentId: M:StringAlgorithms.SuffixTrees.SuffixTreeBuilder.MultistepsPath(System.ValueTuple{StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode}[])
  name.vb: MultistepsPath((edge As SuffixTreeEdge, node As SuffixTreeNode)(Of SuffixTreeEdge, SuffixTreeNode)())
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.MultistepsPath(System.ValueTuple<StringAlgorithms.SuffixTrees.SuffixTreeEdge, StringAlgorithms.SuffixTrees.SuffixTreeNode>[])
  fullName.vb: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.MultistepsPath(System.ValueTuple(Of StringAlgorithms.SuffixTrees.SuffixTreeEdge, StringAlgorithms.SuffixTrees.SuffixTreeNode)())
  nameWithType: SuffixTreeBuilder.MultistepsPath((SuffixTreeEdge edge, SuffixTreeNode node)[])
  nameWithType.vb: SuffixTreeBuilder.MultistepsPath((edge As SuffixTreeEdge, node As SuffixTreeNode)(Of SuffixTreeEdge, SuffixTreeNode)())
- uid: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.MultistepsPath*
  name: MultistepsPath
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeBuilder.html#StringAlgorithms_SuffixTrees_SuffixTreeBuilder_MultistepsPath_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeBuilder.MultistepsPath
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.MultistepsPath
  nameWithType: SuffixTreeBuilder.MultistepsPath
- uid: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.SingletonPath(StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode)
  name: SingletonPath(SuffixTreeEdge, SuffixTreeNode)
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeBuilder.html#StringAlgorithms_SuffixTrees_SuffixTreeBuilder_SingletonPath_StringAlgorithms_SuffixTrees_SuffixTreeEdge_StringAlgorithms_SuffixTrees_SuffixTreeNode_
  commentId: M:StringAlgorithms.SuffixTrees.SuffixTreeBuilder.SingletonPath(StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode)
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.SingletonPath(StringAlgorithms.SuffixTrees.SuffixTreeEdge, StringAlgorithms.SuffixTrees.SuffixTreeNode)
  nameWithType: SuffixTreeBuilder.SingletonPath(SuffixTreeEdge, SuffixTreeNode)
- uid: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.SingletonPath*
  name: SingletonPath
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeBuilder.html#StringAlgorithms_SuffixTrees_SuffixTreeBuilder_SingletonPath_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeBuilder.SingletonPath
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeBuilder.SingletonPath
  nameWithType: SuffixTreeBuilder.SingletonPath
- uid: StringAlgorithms.SuffixTrees.SuffixTreeEdge
  name: SuffixTreeEdge
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeEdge.html
  commentId: T:StringAlgorithms.SuffixTrees.SuffixTreeEdge
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeEdge
  nameWithType: SuffixTreeEdge
- uid: StringAlgorithms.SuffixTrees.SuffixTreeEdge.#ctor(System.Int32,System.Int32)
  name: SuffixTreeEdge(Int32, Int32)
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeEdge.html#StringAlgorithms_SuffixTrees_SuffixTreeEdge__ctor_System_Int32_System_Int32_
  commentId: M:StringAlgorithms.SuffixTrees.SuffixTreeEdge.#ctor(System.Int32,System.Int32)
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeEdge.SuffixTreeEdge(System.Int32, System.Int32)
  nameWithType: SuffixTreeEdge.SuffixTreeEdge(Int32, Int32)
- uid: StringAlgorithms.SuffixTrees.SuffixTreeEdge.#ctor*
  name: SuffixTreeEdge
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeEdge.html#StringAlgorithms_SuffixTrees_SuffixTreeEdge__ctor_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeEdge.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeEdge.SuffixTreeEdge
  nameWithType: SuffixTreeEdge.SuffixTreeEdge
- uid: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Length
  name: Length
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeEdge.html#StringAlgorithms_SuffixTrees_SuffixTreeEdge_Length
  commentId: P:StringAlgorithms.SuffixTrees.SuffixTreeEdge.Length
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Length
  nameWithType: SuffixTreeEdge.Length
- uid: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Length*
  name: Length
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeEdge.html#StringAlgorithms_SuffixTrees_SuffixTreeEdge_Length_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeEdge.Length
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Length
  nameWithType: SuffixTreeEdge.Length
- uid: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Of(StringAlgorithms.TextWithTerminator)
  name: Of(TextWithTerminator)
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeEdge.html#StringAlgorithms_SuffixTrees_SuffixTreeEdge_Of_StringAlgorithms_TextWithTerminator_
  commentId: M:StringAlgorithms.SuffixTrees.SuffixTreeEdge.Of(StringAlgorithms.TextWithTerminator)
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Of(StringAlgorithms.TextWithTerminator)
  nameWithType: SuffixTreeEdge.Of(TextWithTerminator)
- uid: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Of*
  name: Of
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeEdge.html#StringAlgorithms_SuffixTrees_SuffixTreeEdge_Of_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeEdge.Of
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Of
  nameWithType: SuffixTreeEdge.Of
- uid: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Start
  name: Start
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeEdge.html#StringAlgorithms_SuffixTrees_SuffixTreeEdge_Start
  commentId: P:StringAlgorithms.SuffixTrees.SuffixTreeEdge.Start
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Start
  nameWithType: SuffixTreeEdge.Start
- uid: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Start*
  name: Start
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeEdge.html#StringAlgorithms_SuffixTrees_SuffixTreeEdge_Start_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeEdge.Start
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeEdge.Start
  nameWithType: SuffixTreeEdge.Start
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode
  name: SuffixTreeNode
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.html
  commentId: T:StringAlgorithms.SuffixTrees.SuffixTreeNode
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode
  nameWithType: SuffixTreeNode
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.#ctor(IDictionary{StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode},System.Nullable{System.Int32})
  name: SuffixTreeNode(IDictionary<SuffixTreeEdge, SuffixTreeNode>, Nullable<Int32>)
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.html#StringAlgorithms_SuffixTrees_SuffixTreeNode__ctor_IDictionary_StringAlgorithms_SuffixTrees_SuffixTreeEdge_StringAlgorithms_SuffixTrees_SuffixTreeNode__System_Nullable_System_Int32__
  commentId: M:StringAlgorithms.SuffixTrees.SuffixTreeNode.#ctor(IDictionary{StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode},System.Nullable{System.Int32})
  name.vb: SuffixTreeNode(IDictionary(Of SuffixTreeEdge, SuffixTreeNode), Nullable(Of Int32))
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.SuffixTreeNode(IDictionary<StringAlgorithms.SuffixTrees.SuffixTreeEdge, StringAlgorithms.SuffixTrees.SuffixTreeNode>, System.Nullable<System.Int32>)
  fullName.vb: StringAlgorithms.SuffixTrees.SuffixTreeNode.SuffixTreeNode(IDictionary(Of StringAlgorithms.SuffixTrees.SuffixTreeEdge, StringAlgorithms.SuffixTrees.SuffixTreeNode), System.Nullable(Of System.Int32))
  nameWithType: SuffixTreeNode.SuffixTreeNode(IDictionary<SuffixTreeEdge, SuffixTreeNode>, Nullable<Int32>)
  nameWithType.vb: SuffixTreeNode.SuffixTreeNode(IDictionary(Of SuffixTreeEdge, SuffixTreeNode), Nullable(Of Int32))
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.#ctor*
  name: SuffixTreeNode
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.html#StringAlgorithms_SuffixTrees_SuffixTreeNode__ctor_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeNode.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.SuffixTreeNode
  nameWithType: SuffixTreeNode.SuffixTreeNode
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Children
  name: Children
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Children
  commentId: P:StringAlgorithms.SuffixTrees.SuffixTreeNode.Children
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Children
  nameWithType: SuffixTreeNode.Children
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Children*
  name: Children
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Children_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeNode.Children
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Children
  nameWithType: SuffixTreeNode.Children
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate
  name: SuffixTreeNode.Intermediate
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.html
  commentId: T:StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate
  nameWithType: SuffixTreeNode.Intermediate
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.#ctor(IDictionary{StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode})
  name: Intermediate(IDictionary<SuffixTreeEdge, SuffixTreeNode>)
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Intermediate__ctor_IDictionary_StringAlgorithms_SuffixTrees_SuffixTreeEdge_StringAlgorithms_SuffixTrees_SuffixTreeNode__
  commentId: M:StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.#ctor(IDictionary{StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode})
  name.vb: Intermediate(IDictionary(Of SuffixTreeEdge, SuffixTreeNode))
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.Intermediate(IDictionary<StringAlgorithms.SuffixTrees.SuffixTreeEdge, StringAlgorithms.SuffixTrees.SuffixTreeNode>)
  fullName.vb: StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.Intermediate(IDictionary(Of StringAlgorithms.SuffixTrees.SuffixTreeEdge, StringAlgorithms.SuffixTrees.SuffixTreeNode))
  nameWithType: SuffixTreeNode.Intermediate.Intermediate(IDictionary<SuffixTreeEdge, SuffixTreeNode>)
  nameWithType.vb: SuffixTreeNode.Intermediate.Intermediate(IDictionary(Of SuffixTreeEdge, SuffixTreeNode))
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.#ctor*
  name: Intermediate
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Intermediate__ctor_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.Intermediate
  nameWithType: SuffixTreeNode.Intermediate.Intermediate
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Item(StringAlgorithms.SuffixTrees.SuffixTreeEdge)
  name: Item[SuffixTreeEdge]
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Item_StringAlgorithms_SuffixTrees_SuffixTreeEdge_
  commentId: P:StringAlgorithms.SuffixTrees.SuffixTreeNode.Item(StringAlgorithms.SuffixTrees.SuffixTreeEdge)
  name.vb: Item(SuffixTreeEdge)
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Item[StringAlgorithms.SuffixTrees.SuffixTreeEdge]
  fullName.vb: StringAlgorithms.SuffixTrees.SuffixTreeNode.Item(StringAlgorithms.SuffixTrees.SuffixTreeEdge)
  nameWithType: SuffixTreeNode.Item[SuffixTreeEdge]
  nameWithType.vb: SuffixTreeNode.Item(SuffixTreeEdge)
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Item*
  name: Item
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Item_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeNode.Item
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Item
  nameWithType: SuffixTreeNode.Item
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf
  name: SuffixTreeNode.Leaf
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.html
  commentId: T:StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf
  nameWithType: SuffixTreeNode.Leaf
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.#ctor(System.Int32)
  name: Leaf(Int32)
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Leaf__ctor_System_Int32_
  commentId: M:StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.#ctor(System.Int32)
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.Leaf(System.Int32)
  nameWithType: SuffixTreeNode.Leaf.Leaf(Int32)
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.#ctor*
  name: Leaf
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Leaf__ctor_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.Leaf
  nameWithType: SuffixTreeNode.Leaf.Leaf
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.LeafStart
  name: LeafStart
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Leaf_LeafStart
  commentId: P:StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.LeafStart
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.LeafStart
  nameWithType: SuffixTreeNode.Leaf.LeafStart
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.LeafStart*
  name: LeafStart
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Leaf_LeafStart_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.LeafStart
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.LeafStart
  nameWithType: SuffixTreeNode.Leaf.LeafStart
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Start
  name: Start
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Start
  commentId: P:StringAlgorithms.SuffixTrees.SuffixTreeNode.Start
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Start
  nameWithType: SuffixTreeNode.Start
- uid: StringAlgorithms.SuffixTrees.SuffixTreeNode.Start*
  name: Start
  href: api/StringAlgorithms.SuffixTrees.SuffixTreeNode.html#StringAlgorithms_SuffixTrees_SuffixTreeNode_Start_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreeNode.Start
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreeNode.Start
  nameWithType: SuffixTreeNode.Start
- uid: StringAlgorithms.SuffixTrees.SuffixTreePath
  name: SuffixTreePath
  href: api/StringAlgorithms.SuffixTrees.SuffixTreePath.html
  commentId: T:StringAlgorithms.SuffixTrees.SuffixTreePath
  fullName: StringAlgorithms.SuffixTrees.SuffixTreePath
  nameWithType: SuffixTreePath
- uid: StringAlgorithms.SuffixTrees.SuffixTreePath.#ctor(IEnumerable{KeyValuePair{StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode}})
  name: SuffixTreePath(IEnumerable<KeyValuePair<SuffixTreeEdge, SuffixTreeNode>>)
  href: api/StringAlgorithms.SuffixTrees.SuffixTreePath.html#StringAlgorithms_SuffixTrees_SuffixTreePath__ctor_IEnumerable_KeyValuePair_StringAlgorithms_SuffixTrees_SuffixTreeEdge_StringAlgorithms_SuffixTrees_SuffixTreeNode___
  commentId: M:StringAlgorithms.SuffixTrees.SuffixTreePath.#ctor(IEnumerable{KeyValuePair{StringAlgorithms.SuffixTrees.SuffixTreeEdge,StringAlgorithms.SuffixTrees.SuffixTreeNode}})
  name.vb: SuffixTreePath(IEnumerable(Of KeyValuePair(Of SuffixTreeEdge, SuffixTreeNode)))
  fullName: StringAlgorithms.SuffixTrees.SuffixTreePath.SuffixTreePath(IEnumerable<KeyValuePair<StringAlgorithms.SuffixTrees.SuffixTreeEdge, StringAlgorithms.SuffixTrees.SuffixTreeNode>>)
  fullName.vb: StringAlgorithms.SuffixTrees.SuffixTreePath.SuffixTreePath(IEnumerable(Of KeyValuePair(Of StringAlgorithms.SuffixTrees.SuffixTreeEdge, StringAlgorithms.SuffixTrees.SuffixTreeNode)))
  nameWithType: SuffixTreePath.SuffixTreePath(IEnumerable<KeyValuePair<SuffixTreeEdge, SuffixTreeNode>>)
  nameWithType.vb: SuffixTreePath.SuffixTreePath(IEnumerable(Of KeyValuePair(Of SuffixTreeEdge, SuffixTreeNode)))
- uid: StringAlgorithms.SuffixTrees.SuffixTreePath.#ctor*
  name: SuffixTreePath
  href: api/StringAlgorithms.SuffixTrees.SuffixTreePath.html#StringAlgorithms_SuffixTrees_SuffixTreePath__ctor_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreePath.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreePath.SuffixTreePath
  nameWithType: SuffixTreePath.SuffixTreePath
- uid: StringAlgorithms.SuffixTrees.SuffixTreePath.PathNodes
  name: PathNodes
  href: api/StringAlgorithms.SuffixTrees.SuffixTreePath.html#StringAlgorithms_SuffixTrees_SuffixTreePath_PathNodes
  commentId: P:StringAlgorithms.SuffixTrees.SuffixTreePath.PathNodes
  fullName: StringAlgorithms.SuffixTrees.SuffixTreePath.PathNodes
  nameWithType: SuffixTreePath.PathNodes
- uid: StringAlgorithms.SuffixTrees.SuffixTreePath.PathNodes*
  name: PathNodes
  href: api/StringAlgorithms.SuffixTrees.SuffixTreePath.html#StringAlgorithms_SuffixTrees_SuffixTreePath_PathNodes_
  commentId: Overload:StringAlgorithms.SuffixTrees.SuffixTreePath.PathNodes
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTrees.SuffixTreePath.PathNodes
  nameWithType: SuffixTreePath.PathNodes
- uid: StringAlgorithms.SuffixTries
  name: StringAlgorithms.SuffixTries
  href: api/StringAlgorithms.SuffixTries.html
  commentId: N:StringAlgorithms.SuffixTries
  fullName: StringAlgorithms.SuffixTries
  nameWithType: StringAlgorithms.SuffixTries
- uid: StringAlgorithms.SuffixTries.SuffixTrieBuilder
  name: SuffixTrieBuilder
  href: api/StringAlgorithms.SuffixTries.SuffixTrieBuilder.html
  commentId: T:StringAlgorithms.SuffixTries.SuffixTrieBuilder
  fullName: StringAlgorithms.SuffixTries.SuffixTrieBuilder
  nameWithType: SuffixTrieBuilder
- uid: StringAlgorithms.SuffixTries.SuffixTrieBuilder.BuildTree(StringAlgorithms.TextWithTerminator)
  name: BuildTree(TextWithTerminator)
  href: api/StringAlgorithms.SuffixTries.SuffixTrieBuilder.html#StringAlgorithms_SuffixTries_SuffixTrieBuilder_BuildTree_StringAlgorithms_TextWithTerminator_
  commentId: M:StringAlgorithms.SuffixTries.SuffixTrieBuilder.BuildTree(StringAlgorithms.TextWithTerminator)
  fullName: StringAlgorithms.SuffixTries.SuffixTrieBuilder.BuildTree(StringAlgorithms.TextWithTerminator)
  nameWithType: SuffixTrieBuilder.BuildTree(TextWithTerminator)
- uid: StringAlgorithms.SuffixTries.SuffixTrieBuilder.BuildTree*
  name: BuildTree
  href: api/StringAlgorithms.SuffixTries.SuffixTrieBuilder.html#StringAlgorithms_SuffixTries_SuffixTrieBuilder_BuildTree_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieBuilder.BuildTree
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieBuilder.BuildTree
  nameWithType: SuffixTrieBuilder.BuildTree
- uid: StringAlgorithms.SuffixTries.SuffixTrieBuilder.EmptyPath
  name: EmptyPath()
  href: api/StringAlgorithms.SuffixTries.SuffixTrieBuilder.html#StringAlgorithms_SuffixTries_SuffixTrieBuilder_EmptyPath
  commentId: M:StringAlgorithms.SuffixTries.SuffixTrieBuilder.EmptyPath
  fullName: StringAlgorithms.SuffixTries.SuffixTrieBuilder.EmptyPath()
  nameWithType: SuffixTrieBuilder.EmptyPath()
- uid: StringAlgorithms.SuffixTries.SuffixTrieBuilder.EmptyPath*
  name: EmptyPath
  href: api/StringAlgorithms.SuffixTries.SuffixTrieBuilder.html#StringAlgorithms_SuffixTries_SuffixTrieBuilder_EmptyPath_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieBuilder.EmptyPath
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieBuilder.EmptyPath
  nameWithType: SuffixTrieBuilder.EmptyPath
- uid: StringAlgorithms.SuffixTries.SuffixTrieBuilder.MultistepsPath(IEnumerable{KeyValuePair{StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode}})
  name: MultistepsPath(IEnumerable<KeyValuePair<SuffixTrieEdge, SuffixTrieNode>>)
  href: api/StringAlgorithms.SuffixTries.SuffixTrieBuilder.html#StringAlgorithms_SuffixTries_SuffixTrieBuilder_MultistepsPath_IEnumerable_KeyValuePair_StringAlgorithms_SuffixTries_SuffixTrieEdge_StringAlgorithms_SuffixTries_SuffixTrieNode___
  commentId: M:StringAlgorithms.SuffixTries.SuffixTrieBuilder.MultistepsPath(IEnumerable{KeyValuePair{StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode}})
  name.vb: MultistepsPath(IEnumerable(Of KeyValuePair(Of SuffixTrieEdge, SuffixTrieNode)))
  fullName: StringAlgorithms.SuffixTries.SuffixTrieBuilder.MultistepsPath(IEnumerable<KeyValuePair<StringAlgorithms.SuffixTries.SuffixTrieEdge, StringAlgorithms.SuffixTries.SuffixTrieNode>>)
  fullName.vb: StringAlgorithms.SuffixTries.SuffixTrieBuilder.MultistepsPath(IEnumerable(Of KeyValuePair(Of StringAlgorithms.SuffixTries.SuffixTrieEdge, StringAlgorithms.SuffixTries.SuffixTrieNode)))
  nameWithType: SuffixTrieBuilder.MultistepsPath(IEnumerable<KeyValuePair<SuffixTrieEdge, SuffixTrieNode>>)
  nameWithType.vb: SuffixTrieBuilder.MultistepsPath(IEnumerable(Of KeyValuePair(Of SuffixTrieEdge, SuffixTrieNode)))
- uid: StringAlgorithms.SuffixTries.SuffixTrieBuilder.MultistepsPath(System.ValueTuple{StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode}[])
  name: MultistepsPath((SuffixTrieEdge edge, SuffixTrieNode node)[])
  href: api/StringAlgorithms.SuffixTries.SuffixTrieBuilder.html#StringAlgorithms_SuffixTries_SuffixTrieBuilder_MultistepsPath_System_ValueTuple_StringAlgorithms_SuffixTries_SuffixTrieEdge_StringAlgorithms_SuffixTries_SuffixTrieNode____
  commentId: M:StringAlgorithms.SuffixTries.SuffixTrieBuilder.MultistepsPath(System.ValueTuple{StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode}[])
  name.vb: MultistepsPath((edge As SuffixTrieEdge, node As SuffixTrieNode)(Of SuffixTrieEdge, SuffixTrieNode)())
  fullName: StringAlgorithms.SuffixTries.SuffixTrieBuilder.MultistepsPath(System.ValueTuple<StringAlgorithms.SuffixTries.SuffixTrieEdge, StringAlgorithms.SuffixTries.SuffixTrieNode>[])
  fullName.vb: StringAlgorithms.SuffixTries.SuffixTrieBuilder.MultistepsPath(System.ValueTuple(Of StringAlgorithms.SuffixTries.SuffixTrieEdge, StringAlgorithms.SuffixTries.SuffixTrieNode)())
  nameWithType: SuffixTrieBuilder.MultistepsPath((SuffixTrieEdge edge, SuffixTrieNode node)[])
  nameWithType.vb: SuffixTrieBuilder.MultistepsPath((edge As SuffixTrieEdge, node As SuffixTrieNode)(Of SuffixTrieEdge, SuffixTrieNode)())
- uid: StringAlgorithms.SuffixTries.SuffixTrieBuilder.MultistepsPath*
  name: MultistepsPath
  href: api/StringAlgorithms.SuffixTries.SuffixTrieBuilder.html#StringAlgorithms_SuffixTries_SuffixTrieBuilder_MultistepsPath_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieBuilder.MultistepsPath
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieBuilder.MultistepsPath
  nameWithType: SuffixTrieBuilder.MultistepsPath
- uid: StringAlgorithms.SuffixTries.SuffixTrieBuilder.SingletonPath(StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode)
  name: SingletonPath(SuffixTrieEdge, SuffixTrieNode)
  href: api/StringAlgorithms.SuffixTries.SuffixTrieBuilder.html#StringAlgorithms_SuffixTries_SuffixTrieBuilder_SingletonPath_StringAlgorithms_SuffixTries_SuffixTrieEdge_StringAlgorithms_SuffixTries_SuffixTrieNode_
  commentId: M:StringAlgorithms.SuffixTries.SuffixTrieBuilder.SingletonPath(StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode)
  fullName: StringAlgorithms.SuffixTries.SuffixTrieBuilder.SingletonPath(StringAlgorithms.SuffixTries.SuffixTrieEdge, StringAlgorithms.SuffixTries.SuffixTrieNode)
  nameWithType: SuffixTrieBuilder.SingletonPath(SuffixTrieEdge, SuffixTrieNode)
- uid: StringAlgorithms.SuffixTries.SuffixTrieBuilder.SingletonPath*
  name: SingletonPath
  href: api/StringAlgorithms.SuffixTries.SuffixTrieBuilder.html#StringAlgorithms_SuffixTries_SuffixTrieBuilder_SingletonPath_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieBuilder.SingletonPath
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieBuilder.SingletonPath
  nameWithType: SuffixTrieBuilder.SingletonPath
- uid: StringAlgorithms.SuffixTries.SuffixTrieEdge
  name: SuffixTrieEdge
  href: api/StringAlgorithms.SuffixTries.SuffixTrieEdge.html
  commentId: T:StringAlgorithms.SuffixTries.SuffixTrieEdge
  fullName: StringAlgorithms.SuffixTries.SuffixTrieEdge
  nameWithType: SuffixTrieEdge
- uid: StringAlgorithms.SuffixTries.SuffixTrieEdge.#ctor(System.Int32)
  name: SuffixTrieEdge(Int32)
  href: api/StringAlgorithms.SuffixTries.SuffixTrieEdge.html#StringAlgorithms_SuffixTries_SuffixTrieEdge__ctor_System_Int32_
  commentId: M:StringAlgorithms.SuffixTries.SuffixTrieEdge.#ctor(System.Int32)
  fullName: StringAlgorithms.SuffixTries.SuffixTrieEdge.SuffixTrieEdge(System.Int32)
  nameWithType: SuffixTrieEdge.SuffixTrieEdge(Int32)
- uid: StringAlgorithms.SuffixTries.SuffixTrieEdge.#ctor*
  name: SuffixTrieEdge
  href: api/StringAlgorithms.SuffixTries.SuffixTrieEdge.html#StringAlgorithms_SuffixTries_SuffixTrieEdge__ctor_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieEdge.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieEdge.SuffixTrieEdge
  nameWithType: SuffixTrieEdge.SuffixTrieEdge
- uid: StringAlgorithms.SuffixTries.SuffixTrieEdge.Index
  name: Index
  href: api/StringAlgorithms.SuffixTries.SuffixTrieEdge.html#StringAlgorithms_SuffixTries_SuffixTrieEdge_Index
  commentId: P:StringAlgorithms.SuffixTries.SuffixTrieEdge.Index
  fullName: StringAlgorithms.SuffixTries.SuffixTrieEdge.Index
  nameWithType: SuffixTrieEdge.Index
- uid: StringAlgorithms.SuffixTries.SuffixTrieEdge.Index*
  name: Index
  href: api/StringAlgorithms.SuffixTries.SuffixTrieEdge.html#StringAlgorithms_SuffixTries_SuffixTrieEdge_Index_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieEdge.Index
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieEdge.Index
  nameWithType: SuffixTrieEdge.Index
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode
  name: SuffixTrieNode
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.html
  commentId: T:StringAlgorithms.SuffixTries.SuffixTrieNode
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode
  nameWithType: SuffixTrieNode
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.#ctor(IDictionary{StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode},System.Nullable{System.Int32})
  name: SuffixTrieNode(IDictionary<SuffixTrieEdge, SuffixTrieNode>, Nullable<Int32>)
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.html#StringAlgorithms_SuffixTries_SuffixTrieNode__ctor_IDictionary_StringAlgorithms_SuffixTries_SuffixTrieEdge_StringAlgorithms_SuffixTries_SuffixTrieNode__System_Nullable_System_Int32__
  commentId: M:StringAlgorithms.SuffixTries.SuffixTrieNode.#ctor(IDictionary{StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode},System.Nullable{System.Int32})
  name.vb: SuffixTrieNode(IDictionary(Of SuffixTrieEdge, SuffixTrieNode), Nullable(Of Int32))
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.SuffixTrieNode(IDictionary<StringAlgorithms.SuffixTries.SuffixTrieEdge, StringAlgorithms.SuffixTries.SuffixTrieNode>, System.Nullable<System.Int32>)
  fullName.vb: StringAlgorithms.SuffixTries.SuffixTrieNode.SuffixTrieNode(IDictionary(Of StringAlgorithms.SuffixTries.SuffixTrieEdge, StringAlgorithms.SuffixTries.SuffixTrieNode), System.Nullable(Of System.Int32))
  nameWithType: SuffixTrieNode.SuffixTrieNode(IDictionary<SuffixTrieEdge, SuffixTrieNode>, Nullable<Int32>)
  nameWithType.vb: SuffixTrieNode.SuffixTrieNode(IDictionary(Of SuffixTrieEdge, SuffixTrieNode), Nullable(Of Int32))
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.#ctor*
  name: SuffixTrieNode
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.html#StringAlgorithms_SuffixTries_SuffixTrieNode__ctor_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieNode.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.SuffixTrieNode
  nameWithType: SuffixTrieNode.SuffixTrieNode
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Children
  name: Children
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Children
  commentId: P:StringAlgorithms.SuffixTries.SuffixTrieNode.Children
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Children
  nameWithType: SuffixTrieNode.Children
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Children*
  name: Children
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Children_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieNode.Children
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Children
  nameWithType: SuffixTrieNode.Children
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate
  name: SuffixTrieNode.Intermediate
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.html
  commentId: T:StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate
  nameWithType: SuffixTrieNode.Intermediate
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.#ctor(IDictionary{StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode})
  name: Intermediate(IDictionary<SuffixTrieEdge, SuffixTrieNode>)
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Intermediate__ctor_IDictionary_StringAlgorithms_SuffixTries_SuffixTrieEdge_StringAlgorithms_SuffixTries_SuffixTrieNode__
  commentId: M:StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.#ctor(IDictionary{StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode})
  name.vb: Intermediate(IDictionary(Of SuffixTrieEdge, SuffixTrieNode))
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.Intermediate(IDictionary<StringAlgorithms.SuffixTries.SuffixTrieEdge, StringAlgorithms.SuffixTries.SuffixTrieNode>)
  fullName.vb: StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.Intermediate(IDictionary(Of StringAlgorithms.SuffixTries.SuffixTrieEdge, StringAlgorithms.SuffixTries.SuffixTrieNode))
  nameWithType: SuffixTrieNode.Intermediate.Intermediate(IDictionary<SuffixTrieEdge, SuffixTrieNode>)
  nameWithType.vb: SuffixTrieNode.Intermediate.Intermediate(IDictionary(Of SuffixTrieEdge, SuffixTrieNode))
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.#ctor*
  name: Intermediate
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Intermediate__ctor_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.Intermediate
  nameWithType: SuffixTrieNode.Intermediate.Intermediate
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Item(StringAlgorithms.SuffixTries.SuffixTrieEdge)
  name: Item[SuffixTrieEdge]
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Item_StringAlgorithms_SuffixTries_SuffixTrieEdge_
  commentId: P:StringAlgorithms.SuffixTries.SuffixTrieNode.Item(StringAlgorithms.SuffixTries.SuffixTrieEdge)
  name.vb: Item(SuffixTrieEdge)
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Item[StringAlgorithms.SuffixTries.SuffixTrieEdge]
  fullName.vb: StringAlgorithms.SuffixTries.SuffixTrieNode.Item(StringAlgorithms.SuffixTries.SuffixTrieEdge)
  nameWithType: SuffixTrieNode.Item[SuffixTrieEdge]
  nameWithType.vb: SuffixTrieNode.Item(SuffixTrieEdge)
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Item*
  name: Item
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Item_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieNode.Item
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Item
  nameWithType: SuffixTrieNode.Item
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf
  name: SuffixTrieNode.Leaf
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.html
  commentId: T:StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf
  nameWithType: SuffixTrieNode.Leaf
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.#ctor(System.Int32)
  name: Leaf(Int32)
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Leaf__ctor_System_Int32_
  commentId: M:StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.#ctor(System.Int32)
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.Leaf(System.Int32)
  nameWithType: SuffixTrieNode.Leaf.Leaf(Int32)
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.#ctor*
  name: Leaf
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Leaf__ctor_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.Leaf
  nameWithType: SuffixTrieNode.Leaf.Leaf
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.LeafStart
  name: LeafStart
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Leaf_LeafStart
  commentId: P:StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.LeafStart
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.LeafStart
  nameWithType: SuffixTrieNode.Leaf.LeafStart
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.LeafStart*
  name: LeafStart
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Leaf_LeafStart_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.LeafStart
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.LeafStart
  nameWithType: SuffixTrieNode.Leaf.LeafStart
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Start
  name: Start
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Start
  commentId: P:StringAlgorithms.SuffixTries.SuffixTrieNode.Start
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Start
  nameWithType: SuffixTrieNode.Start
- uid: StringAlgorithms.SuffixTries.SuffixTrieNode.Start*
  name: Start
  href: api/StringAlgorithms.SuffixTries.SuffixTrieNode.html#StringAlgorithms_SuffixTries_SuffixTrieNode_Start_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTrieNode.Start
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTrieNode.Start
  nameWithType: SuffixTrieNode.Start
- uid: StringAlgorithms.SuffixTries.SuffixTriePath
  name: SuffixTriePath
  href: api/StringAlgorithms.SuffixTries.SuffixTriePath.html
  commentId: T:StringAlgorithms.SuffixTries.SuffixTriePath
  fullName: StringAlgorithms.SuffixTries.SuffixTriePath
  nameWithType: SuffixTriePath
- uid: StringAlgorithms.SuffixTries.SuffixTriePath.#ctor(IEnumerable{KeyValuePair{StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode}})
  name: SuffixTriePath(IEnumerable<KeyValuePair<SuffixTrieEdge, SuffixTrieNode>>)
  href: api/StringAlgorithms.SuffixTries.SuffixTriePath.html#StringAlgorithms_SuffixTries_SuffixTriePath__ctor_IEnumerable_KeyValuePair_StringAlgorithms_SuffixTries_SuffixTrieEdge_StringAlgorithms_SuffixTries_SuffixTrieNode___
  commentId: M:StringAlgorithms.SuffixTries.SuffixTriePath.#ctor(IEnumerable{KeyValuePair{StringAlgorithms.SuffixTries.SuffixTrieEdge,StringAlgorithms.SuffixTries.SuffixTrieNode}})
  name.vb: SuffixTriePath(IEnumerable(Of KeyValuePair(Of SuffixTrieEdge, SuffixTrieNode)))
  fullName: StringAlgorithms.SuffixTries.SuffixTriePath.SuffixTriePath(IEnumerable<KeyValuePair<StringAlgorithms.SuffixTries.SuffixTrieEdge, StringAlgorithms.SuffixTries.SuffixTrieNode>>)
  fullName.vb: StringAlgorithms.SuffixTries.SuffixTriePath.SuffixTriePath(IEnumerable(Of KeyValuePair(Of StringAlgorithms.SuffixTries.SuffixTrieEdge, StringAlgorithms.SuffixTries.SuffixTrieNode)))
  nameWithType: SuffixTriePath.SuffixTriePath(IEnumerable<KeyValuePair<SuffixTrieEdge, SuffixTrieNode>>)
  nameWithType.vb: SuffixTriePath.SuffixTriePath(IEnumerable(Of KeyValuePair(Of SuffixTrieEdge, SuffixTrieNode)))
- uid: StringAlgorithms.SuffixTries.SuffixTriePath.#ctor*
  name: SuffixTriePath
  href: api/StringAlgorithms.SuffixTries.SuffixTriePath.html#StringAlgorithms_SuffixTries_SuffixTriePath__ctor_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTriePath.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTriePath.SuffixTriePath
  nameWithType: SuffixTriePath.SuffixTriePath
- uid: StringAlgorithms.SuffixTries.SuffixTriePath.PathNodes
  name: PathNodes
  href: api/StringAlgorithms.SuffixTries.SuffixTriePath.html#StringAlgorithms_SuffixTries_SuffixTriePath_PathNodes
  commentId: P:StringAlgorithms.SuffixTries.SuffixTriePath.PathNodes
  fullName: StringAlgorithms.SuffixTries.SuffixTriePath.PathNodes
  nameWithType: SuffixTriePath.PathNodes
- uid: StringAlgorithms.SuffixTries.SuffixTriePath.PathNodes*
  name: PathNodes
  href: api/StringAlgorithms.SuffixTries.SuffixTriePath.html#StringAlgorithms_SuffixTries_SuffixTriePath_PathNodes_
  commentId: Overload:StringAlgorithms.SuffixTries.SuffixTriePath.PathNodes
  isSpec: "True"
  fullName: StringAlgorithms.SuffixTries.SuffixTriePath.PathNodes
  nameWithType: SuffixTriePath.PathNodes
- uid: StringAlgorithms.Tests
  name: StringAlgorithms.Tests
  href: api/StringAlgorithms.Tests.html
  commentId: N:StringAlgorithms.Tests
  fullName: StringAlgorithms.Tests
  nameWithType: StringAlgorithms.Tests
- uid: StringAlgorithms.Tests.StringUtilitiesTests
  name: StringUtilitiesTests
  href: api/StringAlgorithms.Tests.StringUtilitiesTests.html
  commentId: T:StringAlgorithms.Tests.StringUtilitiesTests
  fullName: StringAlgorithms.Tests.StringUtilitiesTests
  nameWithType: StringUtilitiesTests
- uid: StringAlgorithms.Tests.StringUtilitiesTests.LongestPrefixInCommon_IsCorrect
  name: LongestPrefixInCommon_IsCorrect()
  href: api/StringAlgorithms.Tests.StringUtilitiesTests.html#StringAlgorithms_Tests_StringUtilitiesTests_LongestPrefixInCommon_IsCorrect
  commentId: M:StringAlgorithms.Tests.StringUtilitiesTests.LongestPrefixInCommon_IsCorrect
  fullName: StringAlgorithms.Tests.StringUtilitiesTests.LongestPrefixInCommon_IsCorrect()
  nameWithType: StringUtilitiesTests.LongestPrefixInCommon_IsCorrect()
- uid: StringAlgorithms.Tests.StringUtilitiesTests.LongestPrefixInCommon_IsCorrect*
  name: LongestPrefixInCommon_IsCorrect
  href: api/StringAlgorithms.Tests.StringUtilitiesTests.html#StringAlgorithms_Tests_StringUtilitiesTests_LongestPrefixInCommon_IsCorrect_
  commentId: Overload:StringAlgorithms.Tests.StringUtilitiesTests.LongestPrefixInCommon_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.StringUtilitiesTests.LongestPrefixInCommon_IsCorrect
  nameWithType: StringUtilitiesTests.LongestPrefixInCommon_IsCorrect
- uid: StringAlgorithms.Tests.SuffixStructures
  name: StringAlgorithms.Tests.SuffixStructures
  href: api/StringAlgorithms.Tests.SuffixStructures.html
  commentId: N:StringAlgorithms.Tests.SuffixStructures
  fullName: StringAlgorithms.Tests.SuffixStructures
  nameWithType: StringAlgorithms.Tests.SuffixStructures
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests
  name: SuffixStructuresConverterTests
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests.html
  commentId: T:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests
  nameWithType: SuffixStructuresConverterTests
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests.TrieToTree_BuildsCorrectTree
  name: TrieToTree_BuildsCorrectTree()
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresConverterTests_TrieToTree_BuildsCorrectTree
  commentId: M:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests.TrieToTree_BuildsCorrectTree
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests.TrieToTree_BuildsCorrectTree()
  nameWithType: SuffixStructuresConverterTests.TrieToTree_BuildsCorrectTree()
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests.TrieToTree_BuildsCorrectTree*
  name: TrieToTree_BuildsCorrectTree
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresConverterTests_TrieToTree_BuildsCorrectTree_
  commentId: Overload:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests.TrieToTree_BuildsCorrectTree
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresConverterTests.TrieToTree_BuildsCorrectTree
  nameWithType: SuffixStructuresConverterTests.TrieToTree_BuildsCorrectTree
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests
  name: SuffixStructuresEdgeExtensionsTests
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests.html
  commentId: T:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests
  nameWithType: SuffixStructuresEdgeExtensionsTests
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests.IsAdjacentTo_IsCorrect
  name: IsAdjacentTo_IsCorrect()
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresEdgeExtensionsTests_IsAdjacentTo_IsCorrect
  commentId: M:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests.IsAdjacentTo_IsCorrect
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests.IsAdjacentTo_IsCorrect()
  nameWithType: SuffixStructuresEdgeExtensionsTests.IsAdjacentTo_IsCorrect()
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests.IsAdjacentTo_IsCorrect*
  name: IsAdjacentTo_IsCorrect
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresEdgeExtensionsTests_IsAdjacentTo_IsCorrect_
  commentId: Overload:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests.IsAdjacentTo_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests.IsAdjacentTo_IsCorrect
  nameWithType: SuffixStructuresEdgeExtensionsTests.IsAdjacentTo_IsCorrect
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests
  name: SuffixStructuresPathExtensionsTests
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html
  commentId: T:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests
  nameWithType: SuffixStructuresPathExtensionsTests
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Append_IsCorrect
  name: Append_IsCorrect()
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_Append_IsCorrect
  commentId: M:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Append_IsCorrect
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Append_IsCorrect()
  nameWithType: SuffixStructuresPathExtensionsTests.Append_IsCorrect()
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Append_IsCorrect*
  name: Append_IsCorrect
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_Append_IsCorrect_
  commentId: Overload:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Append_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Append_IsCorrect
  nameWithType: SuffixStructuresPathExtensionsTests.Append_IsCorrect
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectAppendingEmptyPath
  name: Concat_IsCorrectAppendingEmptyPath()
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_Concat_IsCorrectAppendingEmptyPath
  commentId: M:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectAppendingEmptyPath
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectAppendingEmptyPath()
  nameWithType: SuffixStructuresPathExtensionsTests.Concat_IsCorrectAppendingEmptyPath()
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectAppendingEmptyPath*
  name: Concat_IsCorrectAppendingEmptyPath
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_Concat_IsCorrectAppendingEmptyPath_
  commentId: Overload:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectAppendingEmptyPath
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectAppendingEmptyPath
  nameWithType: SuffixStructuresPathExtensionsTests.Concat_IsCorrectAppendingEmptyPath
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectPrependingEmptyPath
  name: Concat_IsCorrectPrependingEmptyPath()
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_Concat_IsCorrectPrependingEmptyPath
  commentId: M:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectPrependingEmptyPath
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectPrependingEmptyPath()
  nameWithType: SuffixStructuresPathExtensionsTests.Concat_IsCorrectPrependingEmptyPath()
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectPrependingEmptyPath*
  name: Concat_IsCorrectPrependingEmptyPath
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_Concat_IsCorrectPrependingEmptyPath_
  commentId: Overload:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectPrependingEmptyPath
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectPrependingEmptyPath
  nameWithType: SuffixStructuresPathExtensionsTests.Concat_IsCorrectPrependingEmptyPath
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectWithTwoNonEmptyPaths
  name: Concat_IsCorrectWithTwoNonEmptyPaths()
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_Concat_IsCorrectWithTwoNonEmptyPaths
  commentId: M:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectWithTwoNonEmptyPaths
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectWithTwoNonEmptyPaths()
  nameWithType: SuffixStructuresPathExtensionsTests.Concat_IsCorrectWithTwoNonEmptyPaths()
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectWithTwoNonEmptyPaths*
  name: Concat_IsCorrectWithTwoNonEmptyPaths
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_Concat_IsCorrectWithTwoNonEmptyPaths_
  commentId: Overload:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectWithTwoNonEmptyPaths
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.Concat_IsCorrectWithTwoNonEmptyPaths
  nameWithType: SuffixStructuresPathExtensionsTests.Concat_IsCorrectWithTwoNonEmptyPaths
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsCorrectForNonEmtpyPath
  name: IsSuffixOf_IsCorrectForNonEmtpyPath()
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_IsSuffixOf_IsCorrectForNonEmtpyPath
  commentId: M:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsCorrectForNonEmtpyPath
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsCorrectForNonEmtpyPath()
  nameWithType: SuffixStructuresPathExtensionsTests.IsSuffixOf_IsCorrectForNonEmtpyPath()
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsCorrectForNonEmtpyPath*
  name: IsSuffixOf_IsCorrectForNonEmtpyPath
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_IsSuffixOf_IsCorrectForNonEmtpyPath_
  commentId: Overload:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsCorrectForNonEmtpyPath
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsCorrectForNonEmtpyPath
  nameWithType: SuffixStructuresPathExtensionsTests.IsSuffixOf_IsCorrectForNonEmtpyPath
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsTrueForEmtpyPath
  name: IsSuffixOf_IsTrueForEmtpyPath()
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_IsSuffixOf_IsTrueForEmtpyPath
  commentId: M:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsTrueForEmtpyPath
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsTrueForEmtpyPath()
  nameWithType: SuffixStructuresPathExtensionsTests.IsSuffixOf_IsTrueForEmtpyPath()
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsTrueForEmtpyPath*
  name: IsSuffixOf_IsTrueForEmtpyPath
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_IsSuffixOf_IsTrueForEmtpyPath_
  commentId: Overload:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsTrueForEmtpyPath
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.IsSuffixOf_IsTrueForEmtpyPath
  nameWithType: SuffixStructuresPathExtensionsTests.IsSuffixOf_IsTrueForEmtpyPath
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForEmptyPath
  name: SuffixFor_IsCorrectForEmptyPath()
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_SuffixFor_IsCorrectForEmptyPath
  commentId: M:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForEmptyPath
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForEmptyPath()
  nameWithType: SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForEmptyPath()
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForEmptyPath*
  name: SuffixFor_IsCorrectForEmptyPath
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_SuffixFor_IsCorrectForEmptyPath_
  commentId: Overload:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForEmptyPath
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForEmptyPath
  nameWithType: SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForEmptyPath
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree
  name: SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree()
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree
  commentId: M:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree()
  nameWithType: SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree()
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree*
  name: SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree_
  commentId: Overload:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree
  nameWithType: SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie
  name: SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie()
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie
  commentId: M:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie()
  nameWithType: SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie()
- uid: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie*
  name: SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie
  href: api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.html#StringAlgorithms_Tests_SuffixStructures_SuffixStructuresPathExtensionsTests_SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie_
  commentId: Overload:StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixStructures.SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie
  nameWithType: SuffixStructuresPathExtensionsTests.SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie
- uid: StringAlgorithms.Tests.SuffixTrees
  name: StringAlgorithms.Tests.SuffixTrees
  href: api/StringAlgorithms.Tests.SuffixTrees.html
  commentId: N:StringAlgorithms.Tests.SuffixTrees
  fullName: StringAlgorithms.Tests.SuffixTrees
  nameWithType: StringAlgorithms.Tests.SuffixTrees
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests
  name: SuffixStructureMatcherTests
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.html
  commentId: T:StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests
  nameWithType: SuffixStructureMatcherTests
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_Preconditions
  name: Match_Preconditions()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixStructureMatcherTests_Match_Preconditions
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_Preconditions
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_Preconditions()
  nameWithType: SuffixStructureMatcherTests.Match_Preconditions()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_Preconditions*
  name: Match_Preconditions
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixStructureMatcherTests_Match_Preconditions_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_Preconditions
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_Preconditions
  nameWithType: SuffixStructureMatcherTests.Match_Preconditions
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessAndMatchedCharsIsCorrect
  name: Match_SuccessAndMatchedCharsIsCorrect()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixStructureMatcherTests_Match_SuccessAndMatchedCharsIsCorrect
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessAndMatchedCharsIsCorrect
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessAndMatchedCharsIsCorrect()
  nameWithType: SuffixStructureMatcherTests.Match_SuccessAndMatchedCharsIsCorrect()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessAndMatchedCharsIsCorrect*
  name: Match_SuccessAndMatchedCharsIsCorrect
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixStructureMatcherTests_Match_SuccessAndMatchedCharsIsCorrect_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessAndMatchedCharsIsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessAndMatchedCharsIsCorrect
  nameWithType: SuffixStructureMatcherTests.Match_SuccessAndMatchedCharsIsCorrect
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessBeginAndPathIsCorrect
  name: Match_SuccessBeginAndPathIsCorrect()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixStructureMatcherTests_Match_SuccessBeginAndPathIsCorrect
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessBeginAndPathIsCorrect
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessBeginAndPathIsCorrect()
  nameWithType: SuffixStructureMatcherTests.Match_SuccessBeginAndPathIsCorrect()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessBeginAndPathIsCorrect*
  name: Match_SuccessBeginAndPathIsCorrect
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixStructureMatcherTests_Match_SuccessBeginAndPathIsCorrect_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessBeginAndPathIsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_SuccessBeginAndPathIsCorrect
  nameWithType: SuffixStructureMatcherTests.Match_SuccessBeginAndPathIsCorrect
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_UnsuccessAndMatchedCharsIsCorrect
  name: Match_UnsuccessAndMatchedCharsIsCorrect()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixStructureMatcherTests_Match_UnsuccessAndMatchedCharsIsCorrect
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_UnsuccessAndMatchedCharsIsCorrect
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_UnsuccessAndMatchedCharsIsCorrect()
  nameWithType: SuffixStructureMatcherTests.Match_UnsuccessAndMatchedCharsIsCorrect()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_UnsuccessAndMatchedCharsIsCorrect*
  name: Match_UnsuccessAndMatchedCharsIsCorrect
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixStructureMatcherTests_Match_UnsuccessAndMatchedCharsIsCorrect_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_UnsuccessAndMatchedCharsIsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixStructureMatcherTests.Match_UnsuccessAndMatchedCharsIsCorrect
  nameWithType: SuffixStructureMatcherTests.Match_UnsuccessAndMatchedCharsIsCorrect
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests
  name: SuffixTreeBuilderTests
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html
  commentId: T:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests
  nameWithType: SuffixTreeBuilderTests
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_BuildsExampleTreeFromExampleText
  name: BuildTree_BuildsExampleTreeFromExampleText()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_BuildsExampleTreeFromExampleText
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_BuildsExampleTreeFromExampleText
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_BuildsExampleTreeFromExampleText()
  nameWithType: SuffixTreeBuilderTests.BuildTree_BuildsExampleTreeFromExampleText()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_BuildsExampleTreeFromExampleText*
  name: BuildTree_BuildsExampleTreeFromExampleText
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_BuildsExampleTreeFromExampleText_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_BuildsExampleTreeFromExampleText
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_BuildsExampleTreeFromExampleText
  nameWithType: SuffixTreeBuilderTests.BuildTree_BuildsExampleTreeFromExampleText
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_EmptyString
  name: BuildTree_EmptyString()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_EmptyString
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_EmptyString
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_EmptyString()
  nameWithType: SuffixTreeBuilderTests.BuildTree_EmptyString()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_EmptyString*
  name: BuildTree_EmptyString
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_EmptyString_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_EmptyString
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_EmptyString
  nameWithType: SuffixTreeBuilderTests.BuildTree_EmptyString
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsAllSuffixes
  name: BuildTree_ReturnsAllSuffixes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ReturnsAllSuffixes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsAllSuffixes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsAllSuffixes()
  nameWithType: SuffixTreeBuilderTests.BuildTree_ReturnsAllSuffixes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsAllSuffixes*
  name: BuildTree_ReturnsAllSuffixes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ReturnsAllSuffixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsAllSuffixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsAllSuffixes
  nameWithType: SuffixTreeBuilderTests.BuildTree_ReturnsAllSuffixes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsOnlySuffixes
  name: BuildTree_ReturnsOnlySuffixes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ReturnsOnlySuffixes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsOnlySuffixes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsOnlySuffixes()
  nameWithType: SuffixTreeBuilderTests.BuildTree_ReturnsOnlySuffixes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsOnlySuffixes*
  name: BuildTree_ReturnsOnlySuffixes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ReturnsOnlySuffixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsOnlySuffixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ReturnsOnlySuffixes
  nameWithType: SuffixTreeBuilderTests.BuildTree_ReturnsOnlySuffixes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_SingleCharString
  name: BuildTree_SingleCharString()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_SingleCharString
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_SingleCharString
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_SingleCharString()
  nameWithType: SuffixTreeBuilderTests.BuildTree_SingleCharString()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_SingleCharString*
  name: BuildTree_SingleCharString
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_SingleCharString_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_SingleCharString
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_SingleCharString
  nameWithType: SuffixTreeBuilderTests.BuildTree_SingleCharString
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes
  name: BuildTree_StartCorrectlySetAtLeafNodes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_StartCorrectlySetAtLeafNodes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes()
  nameWithType: SuffixTreeBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes*
  name: BuildTree_StartCorrectlySetAtLeafNodes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_StartCorrectlySetAtLeafNodes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes
  nameWithType: SuffixTreeBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes
  name: BuildTree_StartLeftNullAtNonLeafNodes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_StartLeftNullAtNonLeafNodes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes()
  nameWithType: SuffixTreeBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes*
  name: BuildTree_StartLeftNullAtNonLeafNodes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_StartLeftNullAtNonLeafNodes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes
  nameWithType: SuffixTreeBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StringIncludingTerminator
  name: BuildTree_StringIncludingTerminator()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_StringIncludingTerminator
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StringIncludingTerminator
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StringIncludingTerminator()
  nameWithType: SuffixTreeBuilderTests.BuildTree_StringIncludingTerminator()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StringIncludingTerminator*
  name: BuildTree_StringIncludingTerminator
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_StringIncludingTerminator_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StringIncludingTerminator
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_StringIncludingTerminator
  nameWithType: SuffixTreeBuilderTests.BuildTree_StringIncludingTerminator
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes
  name: BuildTree_ThreeCharsString_DifferentPrefixes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ThreeCharsString_DifferentPrefixes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes()
  nameWithType: SuffixTreeBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes*
  name: BuildTree_ThreeCharsString_DifferentPrefixes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ThreeCharsString_DifferentPrefixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes
  nameWithType: SuffixTreeBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_ExtendingPrefixes
  name: BuildTree_ThreeCharsString_ExtendingPrefixes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ThreeCharsString_ExtendingPrefixes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_ExtendingPrefixes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_ExtendingPrefixes()
  nameWithType: SuffixTreeBuilderTests.BuildTree_ThreeCharsString_ExtendingPrefixes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_ExtendingPrefixes*
  name: BuildTree_ThreeCharsString_ExtendingPrefixes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ThreeCharsString_ExtendingPrefixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_ExtendingPrefixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_ExtendingPrefixes
  nameWithType: SuffixTreeBuilderTests.BuildTree_ThreeCharsString_ExtendingPrefixes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes
  name: BuildTree_ThreeCharsString_PartiallySamePrefixes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ThreeCharsString_PartiallySamePrefixes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes()
  nameWithType: SuffixTreeBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes*
  name: BuildTree_ThreeCharsString_PartiallySamePrefixes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ThreeCharsString_PartiallySamePrefixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes
  nameWithType: SuffixTreeBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_SamePrefixes
  name: BuildTree_ThreeCharsString_SamePrefixes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ThreeCharsString_SamePrefixes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_SamePrefixes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_SamePrefixes()
  nameWithType: SuffixTreeBuilderTests.BuildTree_ThreeCharsString_SamePrefixes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_SamePrefixes*
  name: BuildTree_ThreeCharsString_SamePrefixes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_ThreeCharsString_SamePrefixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_SamePrefixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_ThreeCharsString_SamePrefixes
  nameWithType: SuffixTreeBuilderTests.BuildTree_ThreeCharsString_SamePrefixes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes
  name: BuildTree_TwoCharsString_DifferentPrefixes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_TwoCharsString_DifferentPrefixes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes()
  nameWithType: SuffixTreeBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes*
  name: BuildTree_TwoCharsString_DifferentPrefixes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_TwoCharsString_DifferentPrefixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes
  nameWithType: SuffixTreeBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_SamePrefixes
  name: BuildTree_TwoCharsString_SamePrefixes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_TwoCharsString_SamePrefixes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_SamePrefixes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_SamePrefixes()
  nameWithType: SuffixTreeBuilderTests.BuildTree_TwoCharsString_SamePrefixes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_SamePrefixes*
  name: BuildTree_TwoCharsString_SamePrefixes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_TwoCharsString_SamePrefixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_SamePrefixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_TwoCharsString_SamePrefixes
  nameWithType: SuffixTreeBuilderTests.BuildTree_TwoCharsString_SamePrefixes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring
  name: BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring()
  nameWithType: SuffixTreeBuilderTests.BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring*
  name: BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeBuilderTests_BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeBuilderTests.BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring
  nameWithType: SuffixTreeBuilderTests.BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests
  name: SuffixTreeEdgeTests
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.html
  commentId: T:StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests
  nameWithType: SuffixTreeEdgeTests
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Ctor_ValidIndex
  name: Ctor_ValidIndex()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeEdgeTests_Ctor_ValidIndex
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Ctor_ValidIndex
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Ctor_ValidIndex()
  nameWithType: SuffixTreeEdgeTests.Ctor_ValidIndex()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Ctor_ValidIndex*
  name: Ctor_ValidIndex
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeEdgeTests_Ctor_ValidIndex_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Ctor_ValidIndex
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Ctor_ValidIndex
  nameWithType: SuffixTreeEdgeTests.Ctor_ValidIndex
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_InboundIndexes
  name: Of_InboundIndexes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeEdgeTests_Of_InboundIndexes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_InboundIndexes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_InboundIndexes()
  nameWithType: SuffixTreeEdgeTests.Of_InboundIndexes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_InboundIndexes*
  name: Of_InboundIndexes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeEdgeTests_Of_InboundIndexes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_InboundIndexes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_InboundIndexes
  nameWithType: SuffixTreeEdgeTests.Of_InboundIndexes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_OutOfBoundsIndexes
  name: Of_OutOfBoundsIndexes()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeEdgeTests_Of_OutOfBoundsIndexes
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_OutOfBoundsIndexes
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_OutOfBoundsIndexes()
  nameWithType: SuffixTreeEdgeTests.Of_OutOfBoundsIndexes()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_OutOfBoundsIndexes*
  name: Of_OutOfBoundsIndexes
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeEdgeTests_Of_OutOfBoundsIndexes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_OutOfBoundsIndexes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.Of_OutOfBoundsIndexes
  nameWithType: SuffixTreeEdgeTests.Of_OutOfBoundsIndexes
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests
  name: SuffixTreeFactoryTests
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.html
  commentId: T:StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests
  nameWithType: SuffixTreeFactoryTests
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.EmptyPath_IsCorrect
  name: EmptyPath_IsCorrect()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeFactoryTests_EmptyPath_IsCorrect
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.EmptyPath_IsCorrect
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.EmptyPath_IsCorrect()
  nameWithType: SuffixTreeFactoryTests.EmptyPath_IsCorrect()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.EmptyPath_IsCorrect*
  name: EmptyPath_IsCorrect
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeFactoryTests_EmptyPath_IsCorrect_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.EmptyPath_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.EmptyPath_IsCorrect
  nameWithType: SuffixTreeFactoryTests.EmptyPath_IsCorrect
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithEnumerable
  name: MultistepPath_IsCorrectWithEnumerable()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeFactoryTests_MultistepPath_IsCorrectWithEnumerable
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithEnumerable
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithEnumerable()
  nameWithType: SuffixTreeFactoryTests.MultistepPath_IsCorrectWithEnumerable()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithEnumerable*
  name: MultistepPath_IsCorrectWithEnumerable
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeFactoryTests_MultistepPath_IsCorrectWithEnumerable_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithEnumerable
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithEnumerable
  nameWithType: SuffixTreeFactoryTests.MultistepPath_IsCorrectWithEnumerable
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithParams
  name: MultistepPath_IsCorrectWithParams()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeFactoryTests_MultistepPath_IsCorrectWithParams
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithParams
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithParams()
  nameWithType: SuffixTreeFactoryTests.MultistepPath_IsCorrectWithParams()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithParams*
  name: MultistepPath_IsCorrectWithParams
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeFactoryTests_MultistepPath_IsCorrectWithParams_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithParams
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.MultistepPath_IsCorrectWithParams
  nameWithType: SuffixTreeFactoryTests.MultistepPath_IsCorrectWithParams
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.SingletonPath_IsCorrect
  name: SingletonPath_IsCorrect()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeFactoryTests_SingletonPath_IsCorrect
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.SingletonPath_IsCorrect
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.SingletonPath_IsCorrect()
  nameWithType: SuffixTreeFactoryTests.SingletonPath_IsCorrect()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.SingletonPath_IsCorrect*
  name: SingletonPath_IsCorrect
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeFactoryTests_SingletonPath_IsCorrect_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.SingletonPath_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeFactoryTests.SingletonPath_IsCorrect
  nameWithType: SuffixTreeFactoryTests.SingletonPath_IsCorrect
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests
  name: SuffixTreeNodeTests
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.html
  commentId: T:StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests
  nameWithType: SuffixTreeNodeTests
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_FromCtorParam
  name: Children_Immutability_FromCtorParam()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeNodeTests_Children_Immutability_FromCtorParam
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_FromCtorParam
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_FromCtorParam()
  nameWithType: SuffixTreeNodeTests.Children_Immutability_FromCtorParam()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_FromCtorParam*
  name: Children_Immutability_FromCtorParam
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeNodeTests_Children_Immutability_FromCtorParam_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_FromCtorParam
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_FromCtorParam
  nameWithType: SuffixTreeNodeTests.Children_Immutability_FromCtorParam
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_OnGet
  name: Children_Immutability_OnGet()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeNodeTests_Children_Immutability_OnGet
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_OnGet
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_OnGet()
  nameWithType: SuffixTreeNodeTests.Children_Immutability_OnGet()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_OnGet*
  name: Children_Immutability_OnGet
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeNodeTests_Children_Immutability_OnGet_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_OnGet
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Children_Immutability_OnGet
  nameWithType: SuffixTreeNodeTests.Children_Immutability_OnGet
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Ctor_InvalidArguments
  name: Ctor_InvalidArguments()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeNodeTests_Ctor_InvalidArguments
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Ctor_InvalidArguments
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Ctor_InvalidArguments()
  nameWithType: SuffixTreeNodeTests.Ctor_InvalidArguments()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Ctor_InvalidArguments*
  name: Ctor_InvalidArguments
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeNodeTests_Ctor_InvalidArguments_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Ctor_InvalidArguments
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Ctor_InvalidArguments
  nameWithType: SuffixTreeNodeTests.Ctor_InvalidArguments
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Indexer_RetrievesChild
  name: Indexer_RetrievesChild()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeNodeTests_Indexer_RetrievesChild
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Indexer_RetrievesChild
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Indexer_RetrievesChild()
  nameWithType: SuffixTreeNodeTests.Indexer_RetrievesChild()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Indexer_RetrievesChild*
  name: Indexer_RetrievesChild
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreeNodeTests_Indexer_RetrievesChild_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Indexer_RetrievesChild
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.Indexer_RetrievesChild
  nameWithType: SuffixTreeNodeTests.Indexer_RetrievesChild
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests
  name: SuffixTreePathTests
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.html
  commentId: T:StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests
  nameWithType: SuffixTreePathTests
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnCtorParam
  name: PathNodes_ImmutabilityOnCtorParam()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreePathTests_PathNodes_ImmutabilityOnCtorParam
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnCtorParam
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnCtorParam()
  nameWithType: SuffixTreePathTests.PathNodes_ImmutabilityOnCtorParam()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnCtorParam*
  name: PathNodes_ImmutabilityOnCtorParam
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreePathTests_PathNodes_ImmutabilityOnCtorParam_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnCtorParam
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnCtorParam
  nameWithType: SuffixTreePathTests.PathNodes_ImmutabilityOnCtorParam
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnGet
  name: PathNodes_ImmutabilityOnGet()
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreePathTests_PathNodes_ImmutabilityOnGet
  commentId: M:StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnGet
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnGet()
  nameWithType: SuffixTreePathTests.PathNodes_ImmutabilityOnGet()
- uid: StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnGet*
  name: PathNodes_ImmutabilityOnGet
  href: api/StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.html#StringAlgorithms_Tests_SuffixTrees_SuffixTreePathTests_PathNodes_ImmutabilityOnGet_
  commentId: Overload:StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnGet
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTrees.SuffixTreePathTests.PathNodes_ImmutabilityOnGet
  nameWithType: SuffixTreePathTests.PathNodes_ImmutabilityOnGet
- uid: StringAlgorithms.Tests.SuffixTries
  name: StringAlgorithms.Tests.SuffixTries
  href: api/StringAlgorithms.Tests.SuffixTries.html
  commentId: N:StringAlgorithms.Tests.SuffixTries
  fullName: StringAlgorithms.Tests.SuffixTries
  nameWithType: StringAlgorithms.Tests.SuffixTries
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests
  name: SuffixTrieBuilderTests
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html
  commentId: T:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests
  nameWithType: SuffixTrieBuilderTests
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_BuildsExampleTrieFromExampleText
  name: BuildTree_BuildsExampleTrieFromExampleText()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_BuildsExampleTrieFromExampleText
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_BuildsExampleTrieFromExampleText
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_BuildsExampleTrieFromExampleText()
  nameWithType: SuffixTrieBuilderTests.BuildTree_BuildsExampleTrieFromExampleText()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_BuildsExampleTrieFromExampleText*
  name: BuildTree_BuildsExampleTrieFromExampleText
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_BuildsExampleTrieFromExampleText_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_BuildsExampleTrieFromExampleText
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_BuildsExampleTrieFromExampleText
  nameWithType: SuffixTrieBuilderTests.BuildTree_BuildsExampleTrieFromExampleText
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_EmptyString
  name: BuildTree_EmptyString()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_EmptyString
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_EmptyString
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_EmptyString()
  nameWithType: SuffixTrieBuilderTests.BuildTree_EmptyString()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_EmptyString*
  name: BuildTree_EmptyString
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_EmptyString_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_EmptyString
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_EmptyString
  nameWithType: SuffixTrieBuilderTests.BuildTree_EmptyString
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsAllSuffixes
  name: BuildTree_ReturnsAllSuffixes()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_ReturnsAllSuffixes
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsAllSuffixes
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsAllSuffixes()
  nameWithType: SuffixTrieBuilderTests.BuildTree_ReturnsAllSuffixes()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsAllSuffixes*
  name: BuildTree_ReturnsAllSuffixes
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_ReturnsAllSuffixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsAllSuffixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsAllSuffixes
  nameWithType: SuffixTrieBuilderTests.BuildTree_ReturnsAllSuffixes
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsOnlySuffixes
  name: BuildTree_ReturnsOnlySuffixes()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_ReturnsOnlySuffixes
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsOnlySuffixes
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsOnlySuffixes()
  nameWithType: SuffixTrieBuilderTests.BuildTree_ReturnsOnlySuffixes()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsOnlySuffixes*
  name: BuildTree_ReturnsOnlySuffixes
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_ReturnsOnlySuffixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsOnlySuffixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ReturnsOnlySuffixes
  nameWithType: SuffixTrieBuilderTests.BuildTree_ReturnsOnlySuffixes
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_SingleCharString
  name: BuildTree_SingleCharString()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_SingleCharString
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_SingleCharString
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_SingleCharString()
  nameWithType: SuffixTrieBuilderTests.BuildTree_SingleCharString()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_SingleCharString*
  name: BuildTree_SingleCharString
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_SingleCharString_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_SingleCharString
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_SingleCharString
  nameWithType: SuffixTrieBuilderTests.BuildTree_SingleCharString
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes
  name: BuildTree_StartCorrectlySetAtLeafNodes()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_StartCorrectlySetAtLeafNodes
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes()
  nameWithType: SuffixTrieBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes*
  name: BuildTree_StartCorrectlySetAtLeafNodes
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_StartCorrectlySetAtLeafNodes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes
  nameWithType: SuffixTrieBuilderTests.BuildTree_StartCorrectlySetAtLeafNodes
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes
  name: BuildTree_StartLeftNullAtNonLeafNodes()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_StartLeftNullAtNonLeafNodes
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes()
  nameWithType: SuffixTrieBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes*
  name: BuildTree_StartLeftNullAtNonLeafNodes
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_StartLeftNullAtNonLeafNodes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes
  nameWithType: SuffixTrieBuilderTests.BuildTree_StartLeftNullAtNonLeafNodes
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StringIncludingTerminator
  name: BuildTree_StringIncludingTerminator()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_StringIncludingTerminator
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StringIncludingTerminator
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StringIncludingTerminator()
  nameWithType: SuffixTrieBuilderTests.BuildTree_StringIncludingTerminator()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StringIncludingTerminator*
  name: BuildTree_StringIncludingTerminator
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_StringIncludingTerminator_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StringIncludingTerminator
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_StringIncludingTerminator
  nameWithType: SuffixTrieBuilderTests.BuildTree_StringIncludingTerminator
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes
  name: BuildTree_ThreeCharsString_DifferentPrefixes()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_ThreeCharsString_DifferentPrefixes
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes()
  nameWithType: SuffixTrieBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes*
  name: BuildTree_ThreeCharsString_DifferentPrefixes
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_ThreeCharsString_DifferentPrefixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes
  nameWithType: SuffixTrieBuilderTests.BuildTree_ThreeCharsString_DifferentPrefixes
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes
  name: BuildTree_ThreeCharsString_PartiallySamePrefixes()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_ThreeCharsString_PartiallySamePrefixes
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes()
  nameWithType: SuffixTrieBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes*
  name: BuildTree_ThreeCharsString_PartiallySamePrefixes
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_ThreeCharsString_PartiallySamePrefixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes
  nameWithType: SuffixTrieBuilderTests.BuildTree_ThreeCharsString_PartiallySamePrefixes
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_SamePrefixes
  name: BuildTree_ThreeCharsString_SamePrefixes()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_ThreeCharsString_SamePrefixes
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_SamePrefixes
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_SamePrefixes()
  nameWithType: SuffixTrieBuilderTests.BuildTree_ThreeCharsString_SamePrefixes()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_SamePrefixes*
  name: BuildTree_ThreeCharsString_SamePrefixes
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_ThreeCharsString_SamePrefixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_SamePrefixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_ThreeCharsString_SamePrefixes
  nameWithType: SuffixTrieBuilderTests.BuildTree_ThreeCharsString_SamePrefixes
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes
  name: BuildTree_TwoCharsString_DifferentPrefixes()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_TwoCharsString_DifferentPrefixes
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes()
  nameWithType: SuffixTrieBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes*
  name: BuildTree_TwoCharsString_DifferentPrefixes
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_TwoCharsString_DifferentPrefixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes
  nameWithType: SuffixTrieBuilderTests.BuildTree_TwoCharsString_DifferentPrefixes
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_SamePrefixes
  name: BuildTree_TwoCharsString_SamePrefixes()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_TwoCharsString_SamePrefixes
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_SamePrefixes
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_SamePrefixes()
  nameWithType: SuffixTrieBuilderTests.BuildTree_TwoCharsString_SamePrefixes()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_SamePrefixes*
  name: BuildTree_TwoCharsString_SamePrefixes
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_TwoCharsString_SamePrefixes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_SamePrefixes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_TwoCharsString_SamePrefixes
  nameWithType: SuffixTrieBuilderTests.BuildTree_TwoCharsString_SamePrefixes
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_WithTextWithTerminatorInput
  name: BuildTree_WithTextWithTerminatorInput()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_WithTextWithTerminatorInput
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_WithTextWithTerminatorInput
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_WithTextWithTerminatorInput()
  nameWithType: SuffixTrieBuilderTests.BuildTree_WithTextWithTerminatorInput()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_WithTextWithTerminatorInput*
  name: BuildTree_WithTextWithTerminatorInput
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieBuilderTests_BuildTree_WithTextWithTerminatorInput_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_WithTextWithTerminatorInput
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieBuilderTests.BuildTree_WithTextWithTerminatorInput
  nameWithType: SuffixTrieBuilderTests.BuildTree_WithTextWithTerminatorInput
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests
  name: SuffixTrieEdgeTests
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.html
  commentId: T:StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests
  nameWithType: SuffixTrieEdgeTests
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Ctor_ValidIndex
  name: Ctor_ValidIndex()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieEdgeTests_Ctor_ValidIndex
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Ctor_ValidIndex
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Ctor_ValidIndex()
  nameWithType: SuffixTrieEdgeTests.Ctor_ValidIndex()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Ctor_ValidIndex*
  name: Ctor_ValidIndex
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieEdgeTests_Ctor_ValidIndex_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Ctor_ValidIndex
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Ctor_ValidIndex
  nameWithType: SuffixTrieEdgeTests.Ctor_ValidIndex
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_InboundIndexes
  name: Of_InboundIndexes()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieEdgeTests_Of_InboundIndexes
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_InboundIndexes
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_InboundIndexes()
  nameWithType: SuffixTrieEdgeTests.Of_InboundIndexes()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_InboundIndexes*
  name: Of_InboundIndexes
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieEdgeTests_Of_InboundIndexes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_InboundIndexes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_InboundIndexes
  nameWithType: SuffixTrieEdgeTests.Of_InboundIndexes
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_OutOfBoundsIndexes
  name: Of_OutOfBoundsIndexes()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieEdgeTests_Of_OutOfBoundsIndexes
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_OutOfBoundsIndexes
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_OutOfBoundsIndexes()
  nameWithType: SuffixTrieEdgeTests.Of_OutOfBoundsIndexes()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_OutOfBoundsIndexes*
  name: Of_OutOfBoundsIndexes
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieEdgeTests_Of_OutOfBoundsIndexes_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_OutOfBoundsIndexes
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.Of_OutOfBoundsIndexes
  nameWithType: SuffixTrieEdgeTests.Of_OutOfBoundsIndexes
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests
  name: SuffixTrieFactoryTests
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.html
  commentId: T:StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests
  nameWithType: SuffixTrieFactoryTests
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.EmptyPath_IsCorrect
  name: EmptyPath_IsCorrect()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieFactoryTests_EmptyPath_IsCorrect
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.EmptyPath_IsCorrect
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.EmptyPath_IsCorrect()
  nameWithType: SuffixTrieFactoryTests.EmptyPath_IsCorrect()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.EmptyPath_IsCorrect*
  name: EmptyPath_IsCorrect
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieFactoryTests_EmptyPath_IsCorrect_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.EmptyPath_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.EmptyPath_IsCorrect
  nameWithType: SuffixTrieFactoryTests.EmptyPath_IsCorrect
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithEnumerable
  name: MultistepPath_IsCorrectWithEnumerable()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieFactoryTests_MultistepPath_IsCorrectWithEnumerable
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithEnumerable
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithEnumerable()
  nameWithType: SuffixTrieFactoryTests.MultistepPath_IsCorrectWithEnumerable()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithEnumerable*
  name: MultistepPath_IsCorrectWithEnumerable
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieFactoryTests_MultistepPath_IsCorrectWithEnumerable_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithEnumerable
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithEnumerable
  nameWithType: SuffixTrieFactoryTests.MultistepPath_IsCorrectWithEnumerable
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithParams
  name: MultistepPath_IsCorrectWithParams()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieFactoryTests_MultistepPath_IsCorrectWithParams
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithParams
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithParams()
  nameWithType: SuffixTrieFactoryTests.MultistepPath_IsCorrectWithParams()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithParams*
  name: MultistepPath_IsCorrectWithParams
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieFactoryTests_MultistepPath_IsCorrectWithParams_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithParams
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.MultistepPath_IsCorrectWithParams
  nameWithType: SuffixTrieFactoryTests.MultistepPath_IsCorrectWithParams
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.SingletonPath_IsCorrect
  name: SingletonPath_IsCorrect()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieFactoryTests_SingletonPath_IsCorrect
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.SingletonPath_IsCorrect
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.SingletonPath_IsCorrect()
  nameWithType: SuffixTrieFactoryTests.SingletonPath_IsCorrect()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.SingletonPath_IsCorrect*
  name: SingletonPath_IsCorrect
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieFactoryTests_SingletonPath_IsCorrect_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.SingletonPath_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieFactoryTests.SingletonPath_IsCorrect
  nameWithType: SuffixTrieFactoryTests.SingletonPath_IsCorrect
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests
  name: SuffixTrieNodeTests
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.html
  commentId: T:StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests
  nameWithType: SuffixTrieNodeTests
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_Immutability_FromCtorParam
  name: Children_Immutability_FromCtorParam()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieNodeTests_Children_Immutability_FromCtorParam
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_Immutability_FromCtorParam
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_Immutability_FromCtorParam()
  nameWithType: SuffixTrieNodeTests.Children_Immutability_FromCtorParam()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_Immutability_FromCtorParam*
  name: Children_Immutability_FromCtorParam
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieNodeTests_Children_Immutability_FromCtorParam_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_Immutability_FromCtorParam
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_Immutability_FromCtorParam
  nameWithType: SuffixTrieNodeTests.Children_Immutability_FromCtorParam
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_ImmutabilityOnGet
  name: Children_ImmutabilityOnGet()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieNodeTests_Children_ImmutabilityOnGet
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_ImmutabilityOnGet
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_ImmutabilityOnGet()
  nameWithType: SuffixTrieNodeTests.Children_ImmutabilityOnGet()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_ImmutabilityOnGet*
  name: Children_ImmutabilityOnGet
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieNodeTests_Children_ImmutabilityOnGet_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_ImmutabilityOnGet
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Children_ImmutabilityOnGet
  nameWithType: SuffixTrieNodeTests.Children_ImmutabilityOnGet
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Ctor_InvalidArguments
  name: Ctor_InvalidArguments()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieNodeTests_Ctor_InvalidArguments
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Ctor_InvalidArguments
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Ctor_InvalidArguments()
  nameWithType: SuffixTrieNodeTests.Ctor_InvalidArguments()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Ctor_InvalidArguments*
  name: Ctor_InvalidArguments
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieNodeTests_Ctor_InvalidArguments_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Ctor_InvalidArguments
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Ctor_InvalidArguments
  nameWithType: SuffixTrieNodeTests.Ctor_InvalidArguments
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Indexer_RetrievesChild
  name: Indexer_RetrievesChild()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieNodeTests_Indexer_RetrievesChild
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Indexer_RetrievesChild
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Indexer_RetrievesChild()
  nameWithType: SuffixTrieNodeTests.Indexer_RetrievesChild()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Indexer_RetrievesChild*
  name: Indexer_RetrievesChild
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTrieNodeTests_Indexer_RetrievesChild_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Indexer_RetrievesChild
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.Indexer_RetrievesChild
  nameWithType: SuffixTrieNodeTests.Indexer_RetrievesChild
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests
  name: SuffixTriePathTests
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.html
  commentId: T:StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests
  nameWithType: SuffixTriePathTests
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnCtorParam
  name: PathNodes_ImmutabilityOnCtorParam()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTriePathTests_PathNodes_ImmutabilityOnCtorParam
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnCtorParam
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnCtorParam()
  nameWithType: SuffixTriePathTests.PathNodes_ImmutabilityOnCtorParam()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnCtorParam*
  name: PathNodes_ImmutabilityOnCtorParam
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTriePathTests_PathNodes_ImmutabilityOnCtorParam_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnCtorParam
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnCtorParam
  nameWithType: SuffixTriePathTests.PathNodes_ImmutabilityOnCtorParam
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnGet
  name: PathNodes_ImmutabilityOnGet()
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTriePathTests_PathNodes_ImmutabilityOnGet
  commentId: M:StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnGet
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnGet()
  nameWithType: SuffixTriePathTests.PathNodes_ImmutabilityOnGet()
- uid: StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnGet*
  name: PathNodes_ImmutabilityOnGet
  href: api/StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.html#StringAlgorithms_Tests_SuffixTries_SuffixTriePathTests_PathNodes_ImmutabilityOnGet_
  commentId: Overload:StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnGet
  isSpec: "True"
  fullName: StringAlgorithms.Tests.SuffixTries.SuffixTriePathTests.PathNodes_ImmutabilityOnGet
  nameWithType: SuffixTriePathTests.PathNodes_ImmutabilityOnGet
- uid: StringAlgorithms.Tests.TextWithTerminatorTests
  name: TextWithTerminatorTests
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html
  commentId: T:StringAlgorithms.Tests.TextWithTerminatorTests
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests
  nameWithType: TextWithTerminatorTests
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.Ctor_Preconditions
  name: Ctor_Preconditions()
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_Ctor_Preconditions
  commentId: M:StringAlgorithms.Tests.TextWithTerminatorTests.Ctor_Preconditions
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.Ctor_Preconditions()
  nameWithType: TextWithTerminatorTests.Ctor_Preconditions()
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.Ctor_Preconditions*
  name: Ctor_Preconditions
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_Ctor_Preconditions_
  commentId: Overload:StringAlgorithms.Tests.TextWithTerminatorTests.Ctor_Preconditions
  isSpec: "True"
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.Ctor_Preconditions
  nameWithType: TextWithTerminatorTests.Ctor_Preconditions
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.EndsWith_IsCorrect
  name: EndsWith_IsCorrect()
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_EndsWith_IsCorrect
  commentId: M:StringAlgorithms.Tests.TextWithTerminatorTests.EndsWith_IsCorrect
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.EndsWith_IsCorrect()
  nameWithType: TextWithTerminatorTests.EndsWith_IsCorrect()
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.EndsWith_IsCorrect*
  name: EndsWith_IsCorrect
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_EndsWith_IsCorrect_
  commentId: Overload:StringAlgorithms.Tests.TextWithTerminatorTests.EndsWith_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.EndsWith_IsCorrect
  nameWithType: TextWithTerminatorTests.EndsWith_IsCorrect
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithIndex
  name: Indexer_WithIndex()
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_Indexer_WithIndex
  commentId: M:StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithIndex
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithIndex()
  nameWithType: TextWithTerminatorTests.Indexer_WithIndex()
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithIndex*
  name: Indexer_WithIndex
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_Indexer_WithIndex_
  commentId: Overload:StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithIndex
  isSpec: "True"
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithIndex
  nameWithType: TextWithTerminatorTests.Indexer_WithIndex
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithRange
  name: Indexer_WithRange()
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_Indexer_WithRange
  commentId: M:StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithRange
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithRange()
  nameWithType: TextWithTerminatorTests.Indexer_WithRange()
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithRange*
  name: Indexer_WithRange
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_Indexer_WithRange_
  commentId: Overload:StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithRange
  isSpec: "True"
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithRange
  nameWithType: TextWithTerminatorTests.Indexer_WithRange
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithSelector
  name: Indexer_WithSelector()
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_Indexer_WithSelector
  commentId: M:StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithSelector
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithSelector()
  nameWithType: TextWithTerminatorTests.Indexer_WithSelector()
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithSelector*
  name: Indexer_WithSelector
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_Indexer_WithSelector_
  commentId: Overload:StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithSelector
  isSpec: "True"
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.Indexer_WithSelector
  nameWithType: TextWithTerminatorTests.Indexer_WithSelector
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.Length_IsCorrect
  name: Length_IsCorrect()
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_Length_IsCorrect
  commentId: M:StringAlgorithms.Tests.TextWithTerminatorTests.Length_IsCorrect
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.Length_IsCorrect()
  nameWithType: TextWithTerminatorTests.Length_IsCorrect()
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.Length_IsCorrect*
  name: Length_IsCorrect
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_Length_IsCorrect_
  commentId: Overload:StringAlgorithms.Tests.TextWithTerminatorTests.Length_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.Length_IsCorrect
  nameWithType: TextWithTerminatorTests.Length_IsCorrect
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.StartsWith_IsCorrect
  name: StartsWith_IsCorrect()
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_StartsWith_IsCorrect
  commentId: M:StringAlgorithms.Tests.TextWithTerminatorTests.StartsWith_IsCorrect
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.StartsWith_IsCorrect()
  nameWithType: TextWithTerminatorTests.StartsWith_IsCorrect()
- uid: StringAlgorithms.Tests.TextWithTerminatorTests.StartsWith_IsCorrect*
  name: StartsWith_IsCorrect
  href: api/StringAlgorithms.Tests.TextWithTerminatorTests.html#StringAlgorithms_Tests_TextWithTerminatorTests_StartsWith_IsCorrect_
  commentId: Overload:StringAlgorithms.Tests.TextWithTerminatorTests.StartsWith_IsCorrect
  isSpec: "True"
  fullName: StringAlgorithms.Tests.TextWithTerminatorTests.StartsWith_IsCorrect
  nameWithType: TextWithTerminatorTests.StartsWith_IsCorrect
- uid: StringAlgorithms.Tests.Utilities
  name: StringAlgorithms.Tests.Utilities
  href: api/StringAlgorithms.Tests.Utilities.html
  commentId: N:StringAlgorithms.Tests.Utilities
  fullName: StringAlgorithms.Tests.Utilities
  nameWithType: StringAlgorithms.Tests.Utilities
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests
  name: ValueReadOnlyCollectionTests
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html
  commentId: T:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests
  nameWithType: ValueReadOnlyCollectionTests
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_EmbedInputEnumerable
  name: Ctor_EmbedInputEnumerable()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_Ctor_EmbedInputEnumerable
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_EmbedInputEnumerable
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_EmbedInputEnumerable()
  nameWithType: ValueReadOnlyCollectionTests.Ctor_EmbedInputEnumerable()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_EmbedInputEnumerable*
  name: Ctor_EmbedInputEnumerable
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_Ctor_EmbedInputEnumerable_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_EmbedInputEnumerable
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_EmbedInputEnumerable
  nameWithType: ValueReadOnlyCollectionTests.Ctor_EmbedInputEnumerable
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_IndependenceFromInputEnumerable
  name: Ctor_IndependenceFromInputEnumerable()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_Ctor_IndependenceFromInputEnumerable
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_IndependenceFromInputEnumerable
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_IndependenceFromInputEnumerable()
  nameWithType: ValueReadOnlyCollectionTests.Ctor_IndependenceFromInputEnumerable()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_IndependenceFromInputEnumerable*
  name: Ctor_IndependenceFromInputEnumerable
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_Ctor_IndependenceFromInputEnumerable_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_IndependenceFromInputEnumerable
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Ctor_IndependenceFromInputEnumerable
  nameWithType: ValueReadOnlyCollectionTests.Ctor_IndependenceFromInputEnumerable
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.DifferentOperator_IsByValue
  name: DifferentOperator_IsByValue()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_DifferentOperator_IsByValue
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.DifferentOperator_IsByValue
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.DifferentOperator_IsByValue()
  nameWithType: ValueReadOnlyCollectionTests.DifferentOperator_IsByValue()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.DifferentOperator_IsByValue*
  name: DifferentOperator_IsByValue
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_DifferentOperator_IsByValue_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.DifferentOperator_IsByValue
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.DifferentOperator_IsByValue
  nameWithType: ValueReadOnlyCollectionTests.DifferentOperator_IsByValue
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_CheckType
  name: Equals_CheckType()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_Equals_CheckType
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_CheckType
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_CheckType()
  nameWithType: ValueReadOnlyCollectionTests.Equals_CheckType()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_CheckType*
  name: Equals_CheckType
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_Equals_CheckType_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_CheckType
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_CheckType
  nameWithType: ValueReadOnlyCollectionTests.Equals_CheckType
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_IsByValue
  name: Equals_IsByValue()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_Equals_IsByValue
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_IsByValue
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_IsByValue()
  nameWithType: ValueReadOnlyCollectionTests.Equals_IsByValue()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_IsByValue*
  name: Equals_IsByValue
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_Equals_IsByValue_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_IsByValue
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.Equals_IsByValue
  nameWithType: ValueReadOnlyCollectionTests.Equals_IsByValue
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.EqualsOperator_IsByValue
  name: EqualsOperator_IsByValue()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_EqualsOperator_IsByValue
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.EqualsOperator_IsByValue
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.EqualsOperator_IsByValue()
  nameWithType: ValueReadOnlyCollectionTests.EqualsOperator_IsByValue()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.EqualsOperator_IsByValue*
  name: EqualsOperator_IsByValue
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_EqualsOperator_IsByValue_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.EqualsOperator_IsByValue
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.EqualsOperator_IsByValue
  nameWithType: ValueReadOnlyCollectionTests.EqualsOperator_IsByValue
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithPrimitiveType
  name: GetHashCode_IsByValue_WithPrimitiveType()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_GetHashCode_IsByValue_WithPrimitiveType
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithPrimitiveType
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithPrimitiveType()
  nameWithType: ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithPrimitiveType()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithPrimitiveType*
  name: GetHashCode_IsByValue_WithPrimitiveType
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_GetHashCode_IsByValue_WithPrimitiveType_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithPrimitiveType
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithPrimitiveType
  nameWithType: ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithPrimitiveType
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithRecordType
  name: GetHashCode_IsByValue_WithRecordType()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_GetHashCode_IsByValue_WithRecordType
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithRecordType
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithRecordType()
  nameWithType: ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithRecordType()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithRecordType*
  name: GetHashCode_IsByValue_WithRecordType
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_GetHashCode_IsByValue_WithRecordType_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithRecordType
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithRecordType
  nameWithType: ValueReadOnlyCollectionTests.GetHashCode_IsByValue_WithRecordType
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.ToString_IncludesToStringOfItems
  name: ToString_IncludesToStringOfItems()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_ToString_IncludesToStringOfItems
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.ToString_IncludesToStringOfItems
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.ToString_IncludesToStringOfItems()
  nameWithType: ValueReadOnlyCollectionTests.ToString_IncludesToStringOfItems()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.ToString_IncludesToStringOfItems*
  name: ToString_IncludesToStringOfItems
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyCollectionTests_ToString_IncludesToStringOfItems_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.ToString_IncludesToStringOfItems
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.ToString_IncludesToStringOfItems
  nameWithType: ValueReadOnlyCollectionTests.ToString_IncludesToStringOfItems
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests
  name: ValueReadOnlyDictionaryTests
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html
  commentId: T:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests
  nameWithType: ValueReadOnlyDictionaryTests
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_EmbedInputEnumerable
  name: Ctor_EmbedInputEnumerable()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_Ctor_EmbedInputEnumerable
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_EmbedInputEnumerable
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_EmbedInputEnumerable()
  nameWithType: ValueReadOnlyDictionaryTests.Ctor_EmbedInputEnumerable()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_EmbedInputEnumerable*
  name: Ctor_EmbedInputEnumerable
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_Ctor_EmbedInputEnumerable_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_EmbedInputEnumerable
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_EmbedInputEnumerable
  nameWithType: ValueReadOnlyDictionaryTests.Ctor_EmbedInputEnumerable
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_IndependenceFromInputEnumerable
  name: Ctor_IndependenceFromInputEnumerable()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_Ctor_IndependenceFromInputEnumerable
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_IndependenceFromInputEnumerable
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_IndependenceFromInputEnumerable()
  nameWithType: ValueReadOnlyDictionaryTests.Ctor_IndependenceFromInputEnumerable()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_IndependenceFromInputEnumerable*
  name: Ctor_IndependenceFromInputEnumerable
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_Ctor_IndependenceFromInputEnumerable_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_IndependenceFromInputEnumerable
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Ctor_IndependenceFromInputEnumerable
  nameWithType: ValueReadOnlyDictionaryTests.Ctor_IndependenceFromInputEnumerable
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.DifferentOperator_IsByValue
  name: DifferentOperator_IsByValue()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_DifferentOperator_IsByValue
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.DifferentOperator_IsByValue
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.DifferentOperator_IsByValue()
  nameWithType: ValueReadOnlyDictionaryTests.DifferentOperator_IsByValue()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.DifferentOperator_IsByValue*
  name: DifferentOperator_IsByValue
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_DifferentOperator_IsByValue_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.DifferentOperator_IsByValue
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.DifferentOperator_IsByValue
  nameWithType: ValueReadOnlyDictionaryTests.DifferentOperator_IsByValue
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_CheckType
  name: Equals_CheckType()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_Equals_CheckType
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_CheckType
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_CheckType()
  nameWithType: ValueReadOnlyDictionaryTests.Equals_CheckType()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_CheckType*
  name: Equals_CheckType
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_Equals_CheckType_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_CheckType
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_CheckType
  nameWithType: ValueReadOnlyDictionaryTests.Equals_CheckType
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_IsByValue
  name: Equals_IsByValue()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_Equals_IsByValue
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_IsByValue
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_IsByValue()
  nameWithType: ValueReadOnlyDictionaryTests.Equals_IsByValue()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_IsByValue*
  name: Equals_IsByValue
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_Equals_IsByValue_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_IsByValue
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.Equals_IsByValue
  nameWithType: ValueReadOnlyDictionaryTests.Equals_IsByValue
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.EqualsOperator_IsByValue
  name: EqualsOperator_IsByValue()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_EqualsOperator_IsByValue
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.EqualsOperator_IsByValue
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.EqualsOperator_IsByValue()
  nameWithType: ValueReadOnlyDictionaryTests.EqualsOperator_IsByValue()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.EqualsOperator_IsByValue*
  name: EqualsOperator_IsByValue
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_EqualsOperator_IsByValue_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.EqualsOperator_IsByValue
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.EqualsOperator_IsByValue
  nameWithType: ValueReadOnlyDictionaryTests.EqualsOperator_IsByValue
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithPrimitiveType
  name: GetHashCode_IsByValue_WithPrimitiveType()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_GetHashCode_IsByValue_WithPrimitiveType
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithPrimitiveType
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithPrimitiveType()
  nameWithType: ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithPrimitiveType()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithPrimitiveType*
  name: GetHashCode_IsByValue_WithPrimitiveType
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_GetHashCode_IsByValue_WithPrimitiveType_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithPrimitiveType
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithPrimitiveType
  nameWithType: ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithPrimitiveType
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithRecordType
  name: GetHashCode_IsByValue_WithRecordType()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_GetHashCode_IsByValue_WithRecordType
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithRecordType
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithRecordType()
  nameWithType: ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithRecordType()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithRecordType*
  name: GetHashCode_IsByValue_WithRecordType
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_GetHashCode_IsByValue_WithRecordType_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithRecordType
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithRecordType
  nameWithType: ValueReadOnlyDictionaryTests.GetHashCode_IsByValue_WithRecordType
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.ToString_IncludesToStringOfKeysAndValues
  name: ToString_IncludesToStringOfKeysAndValues()
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_ToString_IncludesToStringOfKeysAndValues
  commentId: M:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.ToString_IncludesToStringOfKeysAndValues
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.ToString_IncludesToStringOfKeysAndValues()
  nameWithType: ValueReadOnlyDictionaryTests.ToString_IncludesToStringOfKeysAndValues()
- uid: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.ToString_IncludesToStringOfKeysAndValues*
  name: ToString_IncludesToStringOfKeysAndValues
  href: api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html#StringAlgorithms_Tests_Utilities_ValueReadOnlyDictionaryTests_ToString_IncludesToStringOfKeysAndValues_
  commentId: Overload:StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.ToString_IncludesToStringOfKeysAndValues
  isSpec: "True"
  fullName: StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.ToString_IncludesToStringOfKeysAndValues
  nameWithType: ValueReadOnlyDictionaryTests.ToString_IncludesToStringOfKeysAndValues
- uid: StringAlgorithms.TextWithTerminator
  name: TextWithTerminator
  href: api/StringAlgorithms.TextWithTerminator.html
  commentId: T:StringAlgorithms.TextWithTerminator
  fullName: StringAlgorithms.TextWithTerminator
  nameWithType: TextWithTerminator
- uid: StringAlgorithms.TextWithTerminator.#ctor(System.String,System.Char)
  name: TextWithTerminator(String, Char)
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator__ctor_System_String_System_Char_
  commentId: M:StringAlgorithms.TextWithTerminator.#ctor(System.String,System.Char)
  fullName: StringAlgorithms.TextWithTerminator.TextWithTerminator(System.String, System.Char)
  nameWithType: TextWithTerminator.TextWithTerminator(String, Char)
- uid: StringAlgorithms.TextWithTerminator.#ctor*
  name: TextWithTerminator
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator__ctor_
  commentId: Overload:StringAlgorithms.TextWithTerminator.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.TextWithTerminator.TextWithTerminator
  nameWithType: TextWithTerminator.TextWithTerminator
- uid: StringAlgorithms.TextWithTerminator.DefaultTerminator
  name: DefaultTerminator
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_DefaultTerminator
  commentId: F:StringAlgorithms.TextWithTerminator.DefaultTerminator
  fullName: StringAlgorithms.TextWithTerminator.DefaultTerminator
  nameWithType: TextWithTerminator.DefaultTerminator
- uid: StringAlgorithms.TextWithTerminator.EndsWith(System.String)
  name: EndsWith(String)
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_EndsWith_System_String_
  commentId: M:StringAlgorithms.TextWithTerminator.EndsWith(System.String)
  fullName: StringAlgorithms.TextWithTerminator.EndsWith(System.String)
  nameWithType: TextWithTerminator.EndsWith(String)
- uid: StringAlgorithms.TextWithTerminator.EndsWith*
  name: EndsWith
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_EndsWith_
  commentId: Overload:StringAlgorithms.TextWithTerminator.EndsWith
  isSpec: "True"
  fullName: StringAlgorithms.TextWithTerminator.EndsWith
  nameWithType: TextWithTerminator.EndsWith
- uid: StringAlgorithms.TextWithTerminator.ISelector
  name: TextWithTerminator.ISelector
  href: api/StringAlgorithms.TextWithTerminator.ISelector.html
  commentId: T:StringAlgorithms.TextWithTerminator.ISelector
  fullName: StringAlgorithms.TextWithTerminator.ISelector
  nameWithType: TextWithTerminator.ISelector
- uid: StringAlgorithms.TextWithTerminator.ISelector.Of(StringAlgorithms.TextWithTerminator)
  name: Of(TextWithTerminator)
  href: api/StringAlgorithms.TextWithTerminator.ISelector.html#StringAlgorithms_TextWithTerminator_ISelector_Of_StringAlgorithms_TextWithTerminator_
  commentId: M:StringAlgorithms.TextWithTerminator.ISelector.Of(StringAlgorithms.TextWithTerminator)
  fullName: StringAlgorithms.TextWithTerminator.ISelector.Of(StringAlgorithms.TextWithTerminator)
  nameWithType: TextWithTerminator.ISelector.Of(TextWithTerminator)
- uid: StringAlgorithms.TextWithTerminator.ISelector.Of*
  name: Of
  href: api/StringAlgorithms.TextWithTerminator.ISelector.html#StringAlgorithms_TextWithTerminator_ISelector_Of_
  commentId: Overload:StringAlgorithms.TextWithTerminator.ISelector.Of
  isSpec: "True"
  fullName: StringAlgorithms.TextWithTerminator.ISelector.Of
  nameWithType: TextWithTerminator.ISelector.Of
- uid: StringAlgorithms.TextWithTerminator.Item(Index)
  name: Item[Index]
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_Item_Index_
  commentId: P:StringAlgorithms.TextWithTerminator.Item(Index)
  name.vb: Item(Index)
  fullName: StringAlgorithms.TextWithTerminator.Item[Index]
  fullName.vb: StringAlgorithms.TextWithTerminator.Item(Index)
  nameWithType: TextWithTerminator.Item[Index]
  nameWithType.vb: TextWithTerminator.Item(Index)
- uid: StringAlgorithms.TextWithTerminator.Item(Range)
  name: Item[Range]
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_Item_Range_
  commentId: P:StringAlgorithms.TextWithTerminator.Item(Range)
  name.vb: Item(Range)
  fullName: StringAlgorithms.TextWithTerminator.Item[Range]
  fullName.vb: StringAlgorithms.TextWithTerminator.Item(Range)
  nameWithType: TextWithTerminator.Item[Range]
  nameWithType.vb: TextWithTerminator.Item(Range)
- uid: StringAlgorithms.TextWithTerminator.Item(StringAlgorithms.TextWithTerminator.ISelector)
  name: Item[TextWithTerminator.ISelector]
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_Item_StringAlgorithms_TextWithTerminator_ISelector_
  commentId: P:StringAlgorithms.TextWithTerminator.Item(StringAlgorithms.TextWithTerminator.ISelector)
  name.vb: Item(TextWithTerminator.ISelector)
  fullName: StringAlgorithms.TextWithTerminator.Item[StringAlgorithms.TextWithTerminator.ISelector]
  fullName.vb: StringAlgorithms.TextWithTerminator.Item(StringAlgorithms.TextWithTerminator.ISelector)
  nameWithType: TextWithTerminator.Item[TextWithTerminator.ISelector]
  nameWithType.vb: TextWithTerminator.Item(TextWithTerminator.ISelector)
- uid: StringAlgorithms.TextWithTerminator.Item*
  name: Item
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_Item_
  commentId: Overload:StringAlgorithms.TextWithTerminator.Item
  isSpec: "True"
  fullName: StringAlgorithms.TextWithTerminator.Item
  nameWithType: TextWithTerminator.Item
- uid: StringAlgorithms.TextWithTerminator.Length
  name: Length
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_Length
  commentId: P:StringAlgorithms.TextWithTerminator.Length
  fullName: StringAlgorithms.TextWithTerminator.Length
  nameWithType: TextWithTerminator.Length
- uid: StringAlgorithms.TextWithTerminator.Length*
  name: Length
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_Length_
  commentId: Overload:StringAlgorithms.TextWithTerminator.Length
  isSpec: "True"
  fullName: StringAlgorithms.TextWithTerminator.Length
  nameWithType: TextWithTerminator.Length
- uid: StringAlgorithms.TextWithTerminator.StartsWith(System.String)
  name: StartsWith(String)
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_StartsWith_System_String_
  commentId: M:StringAlgorithms.TextWithTerminator.StartsWith(System.String)
  fullName: StringAlgorithms.TextWithTerminator.StartsWith(System.String)
  nameWithType: TextWithTerminator.StartsWith(String)
- uid: StringAlgorithms.TextWithTerminator.StartsWith*
  name: StartsWith
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_StartsWith_
  commentId: Overload:StringAlgorithms.TextWithTerminator.StartsWith
  isSpec: "True"
  fullName: StringAlgorithms.TextWithTerminator.StartsWith
  nameWithType: TextWithTerminator.StartsWith
- uid: StringAlgorithms.TextWithTerminator.Terminator
  name: Terminator
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_Terminator
  commentId: P:StringAlgorithms.TextWithTerminator.Terminator
  fullName: StringAlgorithms.TextWithTerminator.Terminator
  nameWithType: TextWithTerminator.Terminator
- uid: StringAlgorithms.TextWithTerminator.Terminator*
  name: Terminator
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_Terminator_
  commentId: Overload:StringAlgorithms.TextWithTerminator.Terminator
  isSpec: "True"
  fullName: StringAlgorithms.TextWithTerminator.Terminator
  nameWithType: TextWithTerminator.Terminator
- uid: StringAlgorithms.TextWithTerminator.Text
  name: Text
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_Text
  commentId: P:StringAlgorithms.TextWithTerminator.Text
  fullName: StringAlgorithms.TextWithTerminator.Text
  nameWithType: TextWithTerminator.Text
- uid: StringAlgorithms.TextWithTerminator.Text*
  name: Text
  href: api/StringAlgorithms.TextWithTerminator.html#StringAlgorithms_TextWithTerminator_Text_
  commentId: Overload:StringAlgorithms.TextWithTerminator.Text
  isSpec: "True"
  fullName: StringAlgorithms.TextWithTerminator.Text
  nameWithType: TextWithTerminator.Text
- uid: StringAlgorithms.Utilities
  name: StringAlgorithms.Utilities
  href: api/StringAlgorithms.Utilities.html
  commentId: N:StringAlgorithms.Utilities
  fullName: StringAlgorithms.Utilities
  nameWithType: StringAlgorithms.Utilities
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1
  name: ValueReadOnlyCollection<T>
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html
  commentId: T:StringAlgorithms.Utilities.ValueReadOnlyCollection`1
  name.vb: ValueReadOnlyCollection(Of T)
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T)
  nameWithType: ValueReadOnlyCollection<T>
  nameWithType.vb: ValueReadOnlyCollection(Of T)
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.#ctor(IEnumerable{`0})
  name: ValueReadOnlyCollection(IEnumerable<T>)
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1__ctor_IEnumerable__0__
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.#ctor(IEnumerable{`0})
  name.vb: ValueReadOnlyCollection(IEnumerable(Of T))
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.ValueReadOnlyCollection(IEnumerable<T>)
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).ValueReadOnlyCollection(IEnumerable(Of T))
  nameWithType: ValueReadOnlyCollection<T>.ValueReadOnlyCollection(IEnumerable<T>)
  nameWithType.vb: ValueReadOnlyCollection(Of T).ValueReadOnlyCollection(IEnumerable(Of T))
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.#ctor*
  name: ValueReadOnlyCollection
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1__ctor_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.ValueReadOnlyCollection
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).ValueReadOnlyCollection
  nameWithType: ValueReadOnlyCollection<T>.ValueReadOnlyCollection
  nameWithType.vb: ValueReadOnlyCollection(Of T).ValueReadOnlyCollection
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.Equals(System.Object)
  name: Equals(Object)
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1_Equals_System_Object_
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.Equals(System.Object)
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.Equals(System.Object)
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).Equals(System.Object)
  nameWithType: ValueReadOnlyCollection<T>.Equals(Object)
  nameWithType.vb: ValueReadOnlyCollection(Of T).Equals(Object)
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.Equals*
  name: Equals
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1_Equals_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.Equals
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.Equals
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).Equals
  nameWithType: ValueReadOnlyCollection<T>.Equals
  nameWithType.vb: ValueReadOnlyCollection(Of T).Equals
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.GetHashCode
  name: GetHashCode()
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1_GetHashCode
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.GetHashCode
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.GetHashCode()
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).GetHashCode()
  nameWithType: ValueReadOnlyCollection<T>.GetHashCode()
  nameWithType.vb: ValueReadOnlyCollection(Of T).GetHashCode()
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.GetHashCode*
  name: GetHashCode
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1_GetHashCode_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.GetHashCode
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.GetHashCode
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).GetHashCode
  nameWithType: ValueReadOnlyCollection<T>.GetHashCode
  nameWithType.vb: ValueReadOnlyCollection(Of T).GetHashCode
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.op_Equality(StringAlgorithms.Utilities.ValueReadOnlyCollection{`0},StringAlgorithms.Utilities.ValueReadOnlyCollection{`0})
  name: Equality(ValueReadOnlyCollection<T>, ValueReadOnlyCollection<T>)
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1_op_Equality_StringAlgorithms_Utilities_ValueReadOnlyCollection__0__StringAlgorithms_Utilities_ValueReadOnlyCollection__0__
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.op_Equality(StringAlgorithms.Utilities.ValueReadOnlyCollection{`0},StringAlgorithms.Utilities.ValueReadOnlyCollection{`0})
  name.vb: Equality(ValueReadOnlyCollection(Of T), ValueReadOnlyCollection(Of T))
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.Equality(StringAlgorithms.Utilities.ValueReadOnlyCollection<T>, StringAlgorithms.Utilities.ValueReadOnlyCollection<T>)
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).Equality(StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T), StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T))
  nameWithType: ValueReadOnlyCollection<T>.Equality(ValueReadOnlyCollection<T>, ValueReadOnlyCollection<T>)
  nameWithType.vb: ValueReadOnlyCollection(Of T).Equality(ValueReadOnlyCollection(Of T), ValueReadOnlyCollection(Of T))
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.op_Equality*
  name: Equality
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1_op_Equality_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.op_Equality
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.Equality
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).Equality
  nameWithType: ValueReadOnlyCollection<T>.Equality
  nameWithType.vb: ValueReadOnlyCollection(Of T).Equality
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.op_Inequality(StringAlgorithms.Utilities.ValueReadOnlyCollection{`0},StringAlgorithms.Utilities.ValueReadOnlyCollection{`0})
  name: Inequality(ValueReadOnlyCollection<T>, ValueReadOnlyCollection<T>)
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1_op_Inequality_StringAlgorithms_Utilities_ValueReadOnlyCollection__0__StringAlgorithms_Utilities_ValueReadOnlyCollection__0__
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.op_Inequality(StringAlgorithms.Utilities.ValueReadOnlyCollection{`0},StringAlgorithms.Utilities.ValueReadOnlyCollection{`0})
  name.vb: Inequality(ValueReadOnlyCollection(Of T), ValueReadOnlyCollection(Of T))
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.Inequality(StringAlgorithms.Utilities.ValueReadOnlyCollection<T>, StringAlgorithms.Utilities.ValueReadOnlyCollection<T>)
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).Inequality(StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T), StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T))
  nameWithType: ValueReadOnlyCollection<T>.Inequality(ValueReadOnlyCollection<T>, ValueReadOnlyCollection<T>)
  nameWithType.vb: ValueReadOnlyCollection(Of T).Inequality(ValueReadOnlyCollection(Of T), ValueReadOnlyCollection(Of T))
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.op_Inequality*
  name: Inequality
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1_op_Inequality_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.op_Inequality
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.Inequality
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).Inequality
  nameWithType: ValueReadOnlyCollection<T>.Inequality
  nameWithType.vb: ValueReadOnlyCollection(Of T).Inequality
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.ToString
  name: ToString()
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1_ToString
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.ToString
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.ToString()
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).ToString()
  nameWithType: ValueReadOnlyCollection<T>.ToString()
  nameWithType.vb: ValueReadOnlyCollection(Of T).ToString()
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollection`1.ToString*
  name: ToString
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html#StringAlgorithms_Utilities_ValueReadOnlyCollection_1_ToString_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyCollection`1.ToString
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollection<T>.ToString
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollection(Of T).ToString
  nameWithType: ValueReadOnlyCollection<T>.ToString
  nameWithType.vb: ValueReadOnlyCollection(Of T).ToString
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions
  name: ValueReadOnlyCollectionsExtensions
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.html
  commentId: T:StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions
  nameWithType: ValueReadOnlyCollectionsExtensions
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyCollection*
  name: ToValueReadOnlyCollection
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.html#StringAlgorithms_Utilities_ValueReadOnlyCollectionsExtensions_ToValueReadOnlyCollection_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyCollection
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyCollection
  nameWithType: ValueReadOnlyCollectionsExtensions.ToValueReadOnlyCollection
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyCollection``1(IEnumerable{``0})
  name: ToValueReadOnlyCollection<T>(IEnumerable<T>)
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.html#StringAlgorithms_Utilities_ValueReadOnlyCollectionsExtensions_ToValueReadOnlyCollection__1_IEnumerable___0__
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyCollection``1(IEnumerable{``0})
  name.vb: ToValueReadOnlyCollection(Of T)(IEnumerable(Of T))
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyCollection<T>(IEnumerable<T>)
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyCollection(Of T)(IEnumerable(Of T))
  nameWithType: ValueReadOnlyCollectionsExtensions.ToValueReadOnlyCollection<T>(IEnumerable<T>)
  nameWithType.vb: ValueReadOnlyCollectionsExtensions.ToValueReadOnlyCollection(Of T)(IEnumerable(Of T))
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyDictionary*
  name: ToValueReadOnlyDictionary
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.html#StringAlgorithms_Utilities_ValueReadOnlyCollectionsExtensions_ToValueReadOnlyDictionary_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyDictionary
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyDictionary
  nameWithType: ValueReadOnlyCollectionsExtensions.ToValueReadOnlyDictionary
- uid: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyDictionary``2(IDictionary{``0,``1})
  name: ToValueReadOnlyDictionary<TKey, TValue>(IDictionary<TKey, TValue>)
  href: api/StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.html#StringAlgorithms_Utilities_ValueReadOnlyCollectionsExtensions_ToValueReadOnlyDictionary__2_IDictionary___0___1__
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyDictionary``2(IDictionary{``0,``1})
  name.vb: ToValueReadOnlyDictionary(Of TKey, TValue)(IDictionary(Of TKey, TValue))
  fullName: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyDictionary<TKey, TValue>(IDictionary<TKey, TValue>)
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.ToValueReadOnlyDictionary(Of TKey, TValue)(IDictionary(Of TKey, TValue))
  nameWithType: ValueReadOnlyCollectionsExtensions.ToValueReadOnlyDictionary<TKey, TValue>(IDictionary<TKey, TValue>)
  nameWithType.vb: ValueReadOnlyCollectionsExtensions.ToValueReadOnlyDictionary(Of TKey, TValue)(IDictionary(Of TKey, TValue))
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2
  name: ValueReadOnlyDictionary<TKey, TValue>
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html
  commentId: T:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2
  name.vb: ValueReadOnlyDictionary(Of TKey, TValue)
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue)
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue)
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.#ctor(IDictionary{`0,`1})
  name: ValueReadOnlyDictionary(IDictionary<TKey, TValue>)
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2__ctor_IDictionary__0__1__
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.#ctor(IDictionary{`0,`1})
  name.vb: ValueReadOnlyDictionary(IDictionary(Of TKey, TValue))
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.ValueReadOnlyDictionary(IDictionary<TKey, TValue>)
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).ValueReadOnlyDictionary(IDictionary(Of TKey, TValue))
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.ValueReadOnlyDictionary(IDictionary<TKey, TValue>)
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).ValueReadOnlyDictionary(IDictionary(Of TKey, TValue))
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.#ctor*
  name: ValueReadOnlyDictionary
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2__ctor_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.#ctor
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.ValueReadOnlyDictionary
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).ValueReadOnlyDictionary
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.ValueReadOnlyDictionary
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).ValueReadOnlyDictionary
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.Equals(System.Object)
  name: Equals(Object)
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2_Equals_System_Object_
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.Equals(System.Object)
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.Equals(System.Object)
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).Equals(System.Object)
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.Equals(Object)
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).Equals(Object)
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.Equals*
  name: Equals
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2_Equals_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.Equals
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.Equals
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).Equals
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.Equals
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).Equals
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.GetHashCode
  name: GetHashCode()
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2_GetHashCode
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.GetHashCode
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.GetHashCode()
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).GetHashCode()
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.GetHashCode()
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).GetHashCode()
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.GetHashCode*
  name: GetHashCode
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2_GetHashCode_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.GetHashCode
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.GetHashCode
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).GetHashCode
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.GetHashCode
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).GetHashCode
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.op_Equality(StringAlgorithms.Utilities.ValueReadOnlyDictionary{`0,`1},StringAlgorithms.Utilities.ValueReadOnlyDictionary{`0,`1})
  name: Equality(ValueReadOnlyDictionary<TKey, TValue>, ValueReadOnlyDictionary<TKey, TValue>)
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2_op_Equality_StringAlgorithms_Utilities_ValueReadOnlyDictionary__0__1__StringAlgorithms_Utilities_ValueReadOnlyDictionary__0__1__
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.op_Equality(StringAlgorithms.Utilities.ValueReadOnlyDictionary{`0,`1},StringAlgorithms.Utilities.ValueReadOnlyDictionary{`0,`1})
  name.vb: Equality(ValueReadOnlyDictionary(Of TKey, TValue), ValueReadOnlyDictionary(Of TKey, TValue))
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.Equality(StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>, StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>)
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).Equality(StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue), StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue))
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.Equality(ValueReadOnlyDictionary<TKey, TValue>, ValueReadOnlyDictionary<TKey, TValue>)
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).Equality(ValueReadOnlyDictionary(Of TKey, TValue), ValueReadOnlyDictionary(Of TKey, TValue))
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.op_Equality*
  name: Equality
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2_op_Equality_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.op_Equality
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.Equality
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).Equality
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.Equality
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).Equality
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.op_Inequality(StringAlgorithms.Utilities.ValueReadOnlyDictionary{`0,`1},StringAlgorithms.Utilities.ValueReadOnlyDictionary{`0,`1})
  name: Inequality(ValueReadOnlyDictionary<TKey, TValue>, ValueReadOnlyDictionary<TKey, TValue>)
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2_op_Inequality_StringAlgorithms_Utilities_ValueReadOnlyDictionary__0__1__StringAlgorithms_Utilities_ValueReadOnlyDictionary__0__1__
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.op_Inequality(StringAlgorithms.Utilities.ValueReadOnlyDictionary{`0,`1},StringAlgorithms.Utilities.ValueReadOnlyDictionary{`0,`1})
  name.vb: Inequality(ValueReadOnlyDictionary(Of TKey, TValue), ValueReadOnlyDictionary(Of TKey, TValue))
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.Inequality(StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>, StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>)
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).Inequality(StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue), StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue))
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.Inequality(ValueReadOnlyDictionary<TKey, TValue>, ValueReadOnlyDictionary<TKey, TValue>)
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).Inequality(ValueReadOnlyDictionary(Of TKey, TValue), ValueReadOnlyDictionary(Of TKey, TValue))
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.op_Inequality*
  name: Inequality
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2_op_Inequality_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.op_Inequality
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.Inequality
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).Inequality
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.Inequality
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).Inequality
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.ToString
  name: ToString()
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2_ToString
  commentId: M:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.ToString
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.ToString()
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).ToString()
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.ToString()
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).ToString()
- uid: StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.ToString*
  name: ToString
  href: api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html#StringAlgorithms_Utilities_ValueReadOnlyDictionary_2_ToString_
  commentId: Overload:StringAlgorithms.Utilities.ValueReadOnlyDictionary`2.ToString
  isSpec: "True"
  fullName: StringAlgorithms.Utilities.ValueReadOnlyDictionary<TKey, TValue>.ToString
  fullName.vb: StringAlgorithms.Utilities.ValueReadOnlyDictionary(Of TKey, TValue).ToString
  nameWithType: ValueReadOnlyDictionary<TKey, TValue>.ToString
  nameWithType.vb: ValueReadOnlyDictionary(Of TKey, TValue).ToString
