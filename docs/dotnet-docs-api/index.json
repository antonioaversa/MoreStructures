{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/StringAlgorithms.CountTrees.CountTreeEdge-2.html": {
    "href": "api/StringAlgorithms.CountTrees.CountTreeEdge-2.html",
    "title": "Class CountTreeEdge<TEdge, TNode>",
    "keywords": "Class CountTreeEdge<TEdge, TNode> An implementation of , wrapping another implementation of , and linking two instances of wrapper nodes . Inheritance System.Object CountTreeEdge<TEdge, TNode> Implements IRecImmDictIndexedTreeEdge < CountTreeEdge <TEdge, TNode>, CountTreeNode <TEdge, TNode>> System.IEquatable < CountTreeEdge <TEdge, TNode>> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.CountTrees Assembly : StringAlgorithms.dll Syntax public sealed class CountTreeEdge<TEdge, TNode> : IRecImmDictIndexedTreeEdge<CountTreeEdge<TEdge, TNode>, CountTreeNode<TEdge, TNode>>, IEquatable<CountTreeEdge<TEdge, TNode>> where TEdge : IRecImmDictIndexedTreeEdge<TEdge, TNode> where TNode : IRecImmDictIndexedTreeNode<TEdge, TNode> Type Parameters Name Description TEdge TNode Remarks Due to records semantics, two instances wrapping the same underlying edge, or two equivalent edges, will be equal. Constructors | Improve this Doc View Source CountTreeEdge(TEdge) An implementation of , wrapping another implementation of , and linking two instances of wrapper nodes . Declaration public CountTreeEdge(TEdge WrappedEdge) Parameters Type Name Description TEdge WrappedEdge The edge being wrapped, pointing to descendants which are going to be counted. Remarks Due to records semantics, two instances wrapping the same underlying edge, or two equivalent edges, will be equal. Properties | Improve this Doc View Source WrappedEdge Declaration public TEdge WrappedEdge { get; set; } Property Value Type Description TEdge Implements IRecImmDictIndexedTreeEdge<TEdge, TNode> System.IEquatable<T>"
  },
  "api/StringAlgorithms.CountTrees.CountTreeNode-2.html": {
    "href": "api/StringAlgorithms.CountTrees.CountTreeNode-2.html",
    "title": "Class CountTreeNode<TEdge, TNode>",
    "keywords": "Class CountTreeNode<TEdge, TNode> An implementation of IRecImmDictIndexedTreeNode<TEdge, TNode> , wrapping another implementation of IRecImmDictIndexedTreeNode<TEdge, TNode> , and counting the total number of descendands the wrapped node has below (node itself excluded). Inheritance System.Object CountTreeNode<TEdge, TNode> Implements IRecImmDictIndexedTreeNode < CountTreeEdge <TEdge, TNode>, CountTreeNode <TEdge, TNode>> System.IEquatable < CountTreeNode <TEdge, TNode>> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.CountTrees Assembly : StringAlgorithms.dll Syntax public sealed class CountTreeNode<TEdge, TNode> : IRecImmDictIndexedTreeNode<CountTreeEdge<TEdge, TNode>, CountTreeNode<TEdge, TNode>>, IEquatable<CountTreeNode<TEdge, TNode>> where TEdge : IRecImmDictIndexedTreeEdge<TEdge, TNode> where TNode : IRecImmDictIndexedTreeNode<TEdge, TNode> Type Parameters Name Description TEdge TNode Remarks Due to records semantics, and the use of value readonly dictionaries, two CountTreeNode<TEdge, TNode> instances wrapping the same underlying node, or two equivalent nodes, will be equal. Immutability of the wrapped tree is also required by the caching strategy applied by DescendantsCount . Constructors | Improve this Doc View Source CountTreeNode(TNode) An implementation of IRecImmDictIndexedTreeNode<TEdge, TNode> , wrapping another implementation of IRecImmDictIndexedTreeNode<TEdge, TNode> , and counting the total number of descendands the wrapped node has below (node itself excluded). Declaration public CountTreeNode(TNode WrappedNode) Parameters Type Name Description TNode WrappedNode The node being wrapped, and whose descendants are going to be counted. Remarks Due to records semantics, and the use of value readonly dictionaries, two CountTreeNode<TEdge, TNode> instances wrapping the same underlying node, or two equivalent nodes, will be equal. Immutability of the wrapped tree is also required by the caching strategy applied by DescendantsCount . Properties | Improve this Doc View Source Children A readonly view of the children private collection of this node. Empty for leaves. Declaration public IDictionary<CountTreeEdge<TEdge, TNode>, CountTreeNode<TEdge, TNode>> Children { get; } Property Value Type Description IDictionary < CountTreeEdge <TEdge, TNode>, CountTreeNode <TEdge, TNode>> | Improve this Doc View Source DescendantsCount The number of descendands below this node (node itself excluded). Declaration public int DescendantsCount { get; } Property Value Type Description System.Int32 Remarks Lazy evaluated and thread-safe. Once calculated, it is cached and returned. | Improve this Doc View Source WrappedNode Declaration public TNode WrappedNode { get; set; } Property Value Type Description TNode Implements IRecImmDictIndexedTreeNode<TEdge, TNode> System.IEquatable<T> Extension Methods RecImmDictIndexedTreeNodeExtensions.IsLeaf<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) RecImmDictIndexedTreeNodeExtensions.GetAllNodeToLeafPaths<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>)"
  },
  "api/StringAlgorithms.CountTrees.html": {
    "href": "api/StringAlgorithms.CountTrees.html",
    "title": "Namespace StringAlgorithms.CountTrees",
    "keywords": "Namespace StringAlgorithms.CountTrees Classes CountTreeEdge<TEdge, TNode> An implementation of , wrapping another implementation of , and linking two instances of wrapper nodes . CountTreeNode<TEdge, TNode> An implementation of IRecImmDictIndexedTreeNode<TEdge, TNode> , wrapping another implementation of IRecImmDictIndexedTreeNode<TEdge, TNode> , and counting the total number of descendands the wrapped node has below (node itself excluded)."
  },
  "api/StringAlgorithms.html": {
    "href": "api/StringAlgorithms.html",
    "title": "Namespace StringAlgorithms",
    "keywords": "Namespace StringAlgorithms Classes TextWithTerminator A text string with a terminator character, not present in the text. Interfaces TextWithTerminator.ISelector A selector of a part of a text with terminator."
  },
  "api/StringAlgorithms.RecImmTrees.Conversions.FullyIterativeStringifier-2.html": {
    "href": "api/StringAlgorithms.RecImmTrees.Conversions.FullyIterativeStringifier-2.html",
    "title": "Class FullyIterativeStringifier<TEdge, TNode>",
    "keywords": "Class FullyIterativeStringifier<TEdge, TNode> Inheritance System.Object StringifierBase <TEdge, TNode> FullyIterativeStringifier<TEdge, TNode> Implements IStringifier <TEdge, TNode> Inherited Members StringifierBase<TEdge, TNode>.NewLine StringifierBase<TEdge, TNode>.Indent StringifierBase<TEdge, TNode>.RootStringifier StringifierBase<TEdge, TNode>.EdgeAndNodeStringifier StringifierBase<TEdge, TNode>.Stringify(TNode) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.RecImmTrees.Conversions Assembly : StringAlgorithms.dll Syntax public class FullyIterativeStringifier<TEdge, TNode> : StringifierBase<TEdge, TNode>, IStringifier<TEdge, TNode> where TEdge : IRecImmDictIndexedTreeEdge<TEdge, TNode> where TNode : IRecImmDictIndexedTreeNode<TEdge, TNode> Type Parameters Name Description TEdge TNode Remarks Implemented fully iteratively, so not limited by call stack depth but rather by the maximum size of the stack stored in the heap. Convenient with deep trees (i.e. trees having a height > ~1K nodes). Constructors | Improve this Doc View Source FullyIterativeStringifier(Func<TNode, String>, Func<TEdge, TNode, String>) Declaration public FullyIterativeStringifier(Func<TNode, string> rootStringifier, Func<TEdge, TNode, string> edgeAndNodeStringifier) Parameters Type Name Description Func <TNode, System.String > rootStringifier Func <TEdge, TNode, System.String > edgeAndNodeStringifier Properties | Improve this Doc View Source PrependLevelAfterStopIndenting Whether the actual level should be prepended to the line, once the maximum level of indentation defined at StopIndentingLevel has been reached. Default is true . Declaration public bool PrependLevelAfterStopIndenting { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source StopIndentingLevel The maximum level at which indentation should not be done anymore. Default is System.Int32.MaxValue . Declaration public int StopIndentingLevel { get; set; } Property Value Type Description System.Int32 Remarks When trying to render a very deep structure to string, the resulting string can become extremely big due to indentation. This can easily happen with structures like SuffixTrieNode . Less with SuffixTreeNode , due to their coalescing of paths of nodes with single child. For example if the structure is a linear chain of n in depth, 4 chars of indentation per line would yield a string of 2n(n-1) chars = O(n^2). For n = 10000 nodes the produced string would be ~ 200M. To avoid that StopIndentingLevel can be set to a constant c, limiting the size of the resulting string by an upper bound of cn = O(n). For n = 10000 nodes and c = 10 levels the produced string would be 100K. Methods | Improve this Doc View Source Stringify(TNode) Converts the provided IRecImmDictIndexedTreeNode<TEdge, TNode> into a string. Declaration public override string Stringify(TNode node) Parameters Type Name Description TNode node The root of the tree to stringify. Returns Type Description System.String A string version of the provided structure. Overrides StringAlgorithms.RecImmTrees.Conversions.StringifierBase<TEdge, TNode>.Stringify(TNode) Implements IStringifier<TEdge, TNode>"
  },
  "api/StringAlgorithms.RecImmTrees.Conversions.FullyRecursiveStringifier-2.html": {
    "href": "api/StringAlgorithms.RecImmTrees.Conversions.FullyRecursiveStringifier-2.html",
    "title": "Class FullyRecursiveStringifier<TEdge, TNode>",
    "keywords": "Class FullyRecursiveStringifier<TEdge, TNode> Inheritance System.Object StringifierBase <TEdge, TNode> FullyRecursiveStringifier<TEdge, TNode> Implements IStringifier <TEdge, TNode> Inherited Members StringifierBase<TEdge, TNode>.NewLine StringifierBase<TEdge, TNode>.Indent StringifierBase<TEdge, TNode>.RootStringifier StringifierBase<TEdge, TNode>.EdgeAndNodeStringifier StringifierBase<TEdge, TNode>.Stringify(TNode) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.RecImmTrees.Conversions Assembly : StringAlgorithms.dll Syntax public class FullyRecursiveStringifier<TEdge, TNode> : StringifierBase<TEdge, TNode>, IStringifier<TEdge, TNode> where TEdge : IRecImmDictIndexedTreeEdge<TEdge, TNode> where TNode : IRecImmDictIndexedTreeNode<TEdge, TNode> Type Parameters Name Description TEdge TNode Remarks Implemented fully recursively, so limited by stack depth and usable with tree of a \"reasonable\" height. Constructors | Improve this Doc View Source FullyRecursiveStringifier(Func<TNode, String>, Func<TEdge, TNode, String>) Declaration public FullyRecursiveStringifier(Func<TNode, string> rootStringifier, Func<TEdge, TNode, string> edgeAndNodeStringifier) Parameters Type Name Description Func <TNode, System.String > rootStringifier Func <TEdge, TNode, System.String > edgeAndNodeStringifier Methods | Improve this Doc View Source Stringify(TNode) Converts the provided IRecImmDictIndexedTreeNode<TEdge, TNode> into a string. Declaration public override string Stringify(TNode node) Parameters Type Name Description TNode node The root of the tree to stringify. Returns Type Description System.String A string version of the provided structure. Overrides StringAlgorithms.RecImmTrees.Conversions.StringifierBase<TEdge, TNode>.Stringify(TNode) Implements IStringifier<TEdge, TNode>"
  },
  "api/StringAlgorithms.RecImmTrees.Conversions.html": {
    "href": "api/StringAlgorithms.RecImmTrees.Conversions.html",
    "title": "Namespace StringAlgorithms.RecImmTrees.Conversions",
    "keywords": "Namespace StringAlgorithms.RecImmTrees.Conversions Classes FullyIterativeStringifier<TEdge, TNode> FullyRecursiveStringifier<TEdge, TNode> StringifierBase<TEdge, TNode> Provides concrete properties and defaults for new line, identation and stringifiers. Interfaces IStringifier<TEdge, TNode> A converter from IRecImmDictIndexedTreeNode<TEdge, TNode> structures to string."
  },
  "api/StringAlgorithms.RecImmTrees.Conversions.IStringifier-2.html": {
    "href": "api/StringAlgorithms.RecImmTrees.Conversions.IStringifier-2.html",
    "title": "Interface IStringifier<TEdge, TNode>",
    "keywords": "Interface IStringifier<TEdge, TNode> A converter from IRecImmDictIndexedTreeNode<TEdge, TNode> structures to string. Namespace : StringAlgorithms.RecImmTrees.Conversions Assembly : StringAlgorithms.dll Syntax public interface IStringifier<TEdge, TNode> where TEdge : IRecImmDictIndexedTreeEdge<TEdge, TNode> where TNode : IRecImmDictIndexedTreeNode<TEdge, TNode> Type Parameters Name Description TEdge TNode Properties | Improve this Doc View Source EdgeAndNodeStringifier A function mapping the provided edge and node to a string. Used for all lines of the output but the first. Declaration Func<TEdge, TNode, string> EdgeAndNodeStringifier { get; set; } Property Value Type Description Func <TEdge, TNode, System.String > | Improve this Doc View Source Indent The character or string used to indent output, to visually express tree levels. Declaration string Indent { get; set; } Property Value Type Description System.String Examples 2 or 4 spaces, a tab, ... | Improve this Doc View Source NewLine The character or string used to separate lines of the output. Declaration string NewLine { get; set; } Property Value Type Description System.String | Improve this Doc View Source RootStringifier A function mapping the top-level node to a string. Used for the first line of the output. Declaration Func<TNode, string> RootStringifier { get; set; } Property Value Type Description Func <TNode, System.String > Methods | Improve this Doc View Source Stringify(TNode) Converts the provided IRecImmDictIndexedTreeNode<TEdge, TNode> into a string. Declaration string Stringify(TNode node) Parameters Type Name Description TNode node The root of the tree to stringify. Returns Type Description System.String A string version of the provided structure. Examples Using 4 spaces as indent, RootStringifier = n => \"R\", an EdgeAndNodeStringifier = (e, n) => $\"{e} -> N\": R e1 -> N e3 -> N e4 -> N e5 -> N e2 -> N e6 -> N"
  },
  "api/StringAlgorithms.RecImmTrees.Conversions.StringifierBase-2.html": {
    "href": "api/StringAlgorithms.RecImmTrees.Conversions.StringifierBase-2.html",
    "title": "Class StringifierBase<TEdge, TNode>",
    "keywords": "Class StringifierBase<TEdge, TNode> Provides concrete properties and defaults for new line, identation and stringifiers. Inheritance System.Object StringifierBase<TEdge, TNode> FullyIterativeStringifier<TEdge, TNode> FullyRecursiveStringifier<TEdge, TNode> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.RecImmTrees.Conversions Assembly : StringAlgorithms.dll Syntax public abstract class StringifierBase<TEdge, TNode> Type Parameters Name Description TEdge TNode Constructors | Improve this Doc View Source StringifierBase(Func<TNode, String>, Func<TEdge, TNode, String>) Builds an instance of an IStringifier<TEdge, TNode> with the provided stringifiers, for the root and for all other nodes in the three, and with default new line and indent. Declaration protected StringifierBase(Func<TNode, string> rootStringifier, Func<TEdge, TNode, string> edgeAndNodeStringifier) Parameters Type Name Description Func <TNode, System.String > rootStringifier Func <TEdge, TNode, System.String > edgeAndNodeStringifier Properties | Improve this Doc View Source EdgeAndNodeStringifier A function mapping the provided edge and node to a string. Used for all lines of the output but the first. Declaration public Func<TEdge, TNode, string> EdgeAndNodeStringifier { get; set; } Property Value Type Description Func <TEdge, TNode, System.String > | Improve this Doc View Source Indent By default is 4 spaces. Declaration public string Indent { get; set; } Property Value Type Description System.String | Improve this Doc View Source NewLine By default is . Declaration public string NewLine { get; set; } Property Value Type Description System.String | Improve this Doc View Source RootStringifier A function mapping the top-level node to a string. Used for the first line of the output. Declaration public Func<TNode, string> RootStringifier { get; set; } Property Value Type Description Func <TNode, System.String > Methods | Improve this Doc View Source Stringify(TNode) Converts the provided IRecImmDictIndexedTreeNode<TEdge, TNode> into a string. Declaration public abstract string Stringify(TNode node) Parameters Type Name Description TNode node The root of the tree to stringify. Returns Type Description System.String A string version of the provided structure."
  },
  "api/StringAlgorithms.RecImmTrees.html": {
    "href": "api/StringAlgorithms.RecImmTrees.html",
    "title": "Namespace StringAlgorithms.RecImmTrees",
    "keywords": "Namespace StringAlgorithms.RecImmTrees Classes RecImmDictIndexedTreeNodeExtensions Extension methods for all IRecImmDictIndexedTreeNode<TEdge, TNode> node concretions. TreePath<TEdge, TNode> An immutable sequence of TNode , where each node is child of its predecessor and parent of its successor and where node relationships are stored in TEdge instances. TreePathExtensions Extension methods for TreePath<TEdge, TNode> . Interfaces IRecImmDictIndexedTreeEdge<TEdge, TNode> An edge of a IRecImmDictIndexedTreeNode<TEdge, TNode> , directionally linking two nodes and forming a path hop. IRecImmDictIndexedTreeNode<TEdge, TNode> The node of a generic Tree Structure recursively defined and whose nodes are indexed in an immutable dictionary of edges. Has no specific use case in mind and can be a root node, an intermediate node or a leaf node."
  },
  "api/StringAlgorithms.RecImmTrees.IRecImmDictIndexedTreeEdge-2.html": {
    "href": "api/StringAlgorithms.RecImmTrees.IRecImmDictIndexedTreeEdge-2.html",
    "title": "Interface IRecImmDictIndexedTreeEdge<TEdge, TNode>",
    "keywords": "Interface IRecImmDictIndexedTreeEdge<TEdge, TNode> An edge of a IRecImmDictIndexedTreeNode<TEdge, TNode> , directionally linking two nodes and forming a path hop. Namespace : StringAlgorithms.RecImmTrees Assembly : StringAlgorithms.dll Syntax public interface IRecImmDictIndexedTreeEdge<TEdge, TNode> where TEdge : IRecImmDictIndexedTreeEdge<TEdge, TNode> where TNode : IRecImmDictIndexedTreeNode<TEdge, TNode> Type Parameters Name Description TEdge The type of edges of the specific structure. TNode The type of nodes of the specific structure."
  },
  "api/StringAlgorithms.RecImmTrees.IRecImmDictIndexedTreeNode-2.html": {
    "href": "api/StringAlgorithms.RecImmTrees.IRecImmDictIndexedTreeNode-2.html",
    "title": "Interface IRecImmDictIndexedTreeNode<TEdge, TNode>",
    "keywords": "Interface IRecImmDictIndexedTreeNode<TEdge, TNode> The node of a generic Tree Structure recursively defined and whose nodes are indexed in an immutable dictionary of edges. Has no specific use case in mind and can be a root node, an intermediate node or a leaf node. Namespace : StringAlgorithms.RecImmTrees Assembly : StringAlgorithms.dll Syntax public interface IRecImmDictIndexedTreeNode<TEdge, TNode> where TEdge : IRecImmDictIndexedTreeEdge<TEdge, TNode> where TNode : IRecImmDictIndexedTreeNode<TEdge, TNode> Type Parameters Name Description TEdge The type of edges of the specific structure. TNode The type of nodes of the specific structure. Properties | Improve this Doc View Source Children A readonly view of the children private collection of this node. Empty for leaves. Declaration IDictionary<TEdge, TNode> Children { get; } Property Value Type Description IDictionary <TEdge, TNode> Extension Methods RecImmDictIndexedTreeNodeExtensions.IsLeaf<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) RecImmDictIndexedTreeNodeExtensions.GetAllNodeToLeafPaths<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>)"
  },
  "api/StringAlgorithms.RecImmTrees.RecImmDictIndexedTreeNodeExtensions.html": {
    "href": "api/StringAlgorithms.RecImmTrees.RecImmDictIndexedTreeNodeExtensions.html",
    "title": "Class RecImmDictIndexedTreeNodeExtensions",
    "keywords": "Class RecImmDictIndexedTreeNodeExtensions Extension methods for all IRecImmDictIndexedTreeNode<TEdge, TNode> node concretions. Inheritance System.Object RecImmDictIndexedTreeNodeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.RecImmTrees Assembly : StringAlgorithms.dll Syntax public static class RecImmDictIndexedTreeNodeExtensions Methods | Improve this Doc View Source GetAllNodeToLeafPaths<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) Returns all paths from the provided node to a leaf. Declaration public static IEnumerable<TreePath<TEdge, TNode>> GetAllNodeToLeafPaths<TEdge, TNode>(this IRecImmDictIndexedTreeNode<TEdge, TNode> node) where TEdge : IRecImmDictIndexedTreeEdge<TEdge, TNode> where TNode : IRecImmDictIndexedTreeNode<TEdge, TNode> Parameters Type Name Description IRecImmDictIndexedTreeNode <TEdge, TNode> node The node, to start the structure traversal from. Returns Type Description IEnumerable < TreePath <TEdge, TNode>> A sequence of pairs of node and its incoming edge. Type Parameters Name Description TEdge TNode | Improve this Doc View Source IsLeaf<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) Whether the provided node is a leaf (i.e. has no children), or not. Declaration public static bool IsLeaf<TEdge, TNode>(this IRecImmDictIndexedTreeNode<TEdge, TNode> node) where TEdge : IRecImmDictIndexedTreeEdge<TEdge, TNode> where TNode : IRecImmDictIndexedTreeNode<TEdge, TNode> Parameters Type Name Description IRecImmDictIndexedTreeNode <TEdge, TNode> node The node whose children have to be checked. Returns Type Description System.Boolean Type Parameters Name Description TEdge TNode"
  },
  "api/StringAlgorithms.RecImmTrees.TreePath-2.html": {
    "href": "api/StringAlgorithms.RecImmTrees.TreePath-2.html",
    "title": "Class TreePath<TEdge, TNode>",
    "keywords": "Class TreePath<TEdge, TNode> An immutable sequence of TNode , where each node is child of its predecessor and parent of its successor and where node relationships are stored in TEdge instances. Inheritance System.Object TreePath<TEdge, TNode> Implements System.IEquatable < TreePath <TEdge, TNode>> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.RecImmTrees Assembly : StringAlgorithms.dll Syntax public class TreePath<TEdge, TNode> : IEquatable<TreePath<TEdge, TNode>> Type Parameters Name Description TEdge The type of edges of the specific structure. TNode The type of nodes of the specific structure. Remarks Immutability is guaranteed by using ValueReadOnlyDictionary<TKey, TValue> . Constructors | Improve this Doc View Source TreePath() Builds an empty path, i.e. an empty sequence of nodes. Declaration public TreePath() | Improve this Doc View Source TreePath(TEdge, TNode) Builds a path composed of a single node with its incoming edge. Declaration public TreePath(TEdge edge, TNode node) Parameters Type Name Description TEdge edge The edge leading to the node. TNode node The node defining the singleton path. | Improve this Doc View Source TreePath(IEnumerable<KeyValuePair<TEdge, TNode>>) An immutable sequence of TNode , where each node is child of its predecessor and parent of its successor and where node relationships are stored in TEdge instances. Declaration public TreePath(IEnumerable<KeyValuePair<TEdge, TNode>> PathNodes) Parameters Type Name Description IEnumerable < KeyValuePair <TEdge, TNode>> PathNodes The sequence of nodes respecting the parent-child relationship. Remarks Immutability is guaranteed by using ValueReadOnlyDictionary<TKey, TValue> . | Improve this Doc View Source TreePath((TEdge edge, TNode node)[]) Builds a path composed of the provided couples of edges and nodes. Declaration public TreePath(params (TEdge edge, TNode node)[] pathNodes) Parameters Type Name Description System.ValueTuple <TEdge, TNode>[] pathNodes An array of couples (edge, node). Properties | Improve this Doc View Source PathNodes A readonly view of the private collection of path TNode instances. Declaration public IEnumerable<KeyValuePair<TEdge, TNode>> PathNodes { get; } Property Value Type Description IEnumerable < KeyValuePair <TEdge, TNode>> Implements System.IEquatable<T>"
  },
  "api/StringAlgorithms.RecImmTrees.TreePathExtensions.html": {
    "href": "api/StringAlgorithms.RecImmTrees.TreePathExtensions.html",
    "title": "Class TreePathExtensions",
    "keywords": "Class TreePathExtensions Extension methods for TreePath<TEdge, TNode> . Inheritance System.Object TreePathExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.RecImmTrees Assembly : StringAlgorithms.dll Syntax public static class TreePathExtensions Methods | Improve this Doc View Source Append<TEdge, TNode>(TreePath<TEdge, TNode>, TEdge, TNode) Append the provided node with its incoming edge to the provided path, bulding a new path. Declaration public static TreePath<TEdge, TNode> Append<TEdge, TNode>(this TreePath<TEdge, TNode> path, TEdge edge, TNode node) where TEdge : IRecImmDictIndexedTreeEdge<TEdge, TNode> where TNode : IRecImmDictIndexedTreeNode<TEdge, TNode> Parameters Type Name Description TreePath <TEdge, TNode> path The path, to appended the node and the edge to. TEdge edge The edge, pointing to the node to be appended. TNode node The node to be appended. Returns Type Description TreePath <TEdge, TNode> A new path, whose nodes are the concatenation of the nodes of the provided path and the one appended. Type Parameters Name Description TEdge TNode | Improve this Doc View Source Concat<TEdge, TNode>(TreePath<TEdge, TNode>, TreePath<TEdge, TNode>) Builds a new path of nodes, appending the nodes of the second path to the first path. Declaration public static TreePath<TEdge, TNode> Concat<TEdge, TNode>(this TreePath<TEdge, TNode> first, TreePath<TEdge, TNode> second) where TEdge : IRecImmDictIndexedTreeEdge<TEdge, TNode> where TNode : IRecImmDictIndexedTreeNode<TEdge, TNode> Parameters Type Name Description TreePath <TEdge, TNode> first The path, to append nodes to. TreePath <TEdge, TNode> second The path, whose nodes have to be appended. Returns Type Description TreePath <TEdge, TNode> A new path, whose nodes are the concatenation of the nodes of the two paths. Type Parameters Name Description TEdge TNode"
  },
  "api/StringAlgorithms.SuffixStructures.AdjacencyOrders.html": {
    "href": "api/StringAlgorithms.SuffixStructures.AdjacencyOrders.html",
    "title": "Enum AdjacencyOrders",
    "keywords": "Enum AdjacencyOrders The possible adjacency order relationships between two edges by the parts they refer to in the text. Namespace : StringAlgorithms.SuffixStructures Assembly : StringAlgorithms.dll Syntax public enum AdjacencyOrders Fields Name Description After Adjacent in a specific order: the first comes after the second. Before Adjacent in a specific order: the first comes before the second. BeforeOrAfter Adjacent in any order. None Non-adjacent (overlapping on more than an extreme or not at all)."
  },
  "api/StringAlgorithms.SuffixStructures.Builders.BuilderExtensions.html": {
    "href": "api/StringAlgorithms.SuffixStructures.Builders.BuilderExtensions.html",
    "title": "Class BuilderExtensions",
    "keywords": "Class BuilderExtensions Extension methods for all IBuilder<TEdge, TNode> concretions. Inheritance System.Object BuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixStructures.Builders Assembly : StringAlgorithms.dll Syntax public static class BuilderExtensions Methods | Improve this Doc View Source BuildTree<TEdge, TNode>(IBuilder<TEdge, TNode>, String) Text is provided as a plain string. Declaration public static TNode BuildTree<TEdge, TNode>(this IBuilder<TEdge, TNode> builder, string text) where TEdge : ISuffixStructureEdge<TEdge, TNode> where TNode : ISuffixStructureNode<TEdge, TNode> Parameters Type Name Description IBuilder <TEdge, TNode> builder The builder to be used, to build the structure. System.String text The text to build the structure of, without any terminator (automatically added). Returns Type Description TNode Type Parameters Name Description TEdge TNode"
  },
  "api/StringAlgorithms.SuffixStructures.Builders.html": {
    "href": "api/StringAlgorithms.SuffixStructures.Builders.html",
    "title": "Namespace StringAlgorithms.SuffixStructures.Builders",
    "keywords": "Namespace StringAlgorithms.SuffixStructures.Builders Classes BuilderExtensions Extension methods for all IBuilder<TEdge, TNode> concretions. Interfaces IBuilder<TEdge, TNode> Builds objects, such as edges and nodes, for the ISuffixStructureNode<TEdge, TNode> concretion it is the builder of."
  },
  "api/StringAlgorithms.SuffixStructures.Builders.IBuilder-2.html": {
    "href": "api/StringAlgorithms.SuffixStructures.Builders.IBuilder-2.html",
    "title": "Interface IBuilder<TEdge, TNode>",
    "keywords": "Interface IBuilder<TEdge, TNode> Builds objects, such as edges and nodes, for the ISuffixStructureNode<TEdge, TNode> concretion it is the builder of. Namespace : StringAlgorithms.SuffixStructures.Builders Assembly : StringAlgorithms.dll Syntax public interface IBuilder<TEdge, TNode> where TEdge : ISuffixStructureEdge<TEdge, TNode> where TNode : ISuffixStructureNode<TEdge, TNode> Type Parameters Name Description TEdge TNode Remarks This interface allows to have a shared construction interface for objects among all structures. It is a workaround to the limitation of not having constructor signatures in interfaces. See https://codeblog.jonskeet.uk/2008/08/29/lessons-learned-from-protocol-buffers-part-4-static-interfaces/ Methods | Improve this Doc View Source BuildTree(TextWithTerminator) Build a ISuffixStructureEdge<TEdge, TNode> of the provided text, which is a n-ary search tree in which edges coming out of a node are substrings of text which identify edges shared by all paths to leaves, starting from the node. Declaration TNode BuildTree(TextWithTerminator text) Parameters Type Name Description TextWithTerminator text The text to build the Suffix Structure of, with its terminator (required for traversal). Returns Type Description TNode The root node of the Suffix Structure. Remarks Substrings of text are identified by their start position in text and their length. Extension Methods BuilderExtensions.BuildTree<TEdge, TNode>(IBuilder<TEdge, TNode>, String)"
  },
  "api/StringAlgorithms.SuffixStructures.Conversions.FullyIterativeConverter.html": {
    "href": "api/StringAlgorithms.SuffixStructures.Conversions.FullyIterativeConverter.html",
    "title": "Class FullyIterativeConverter",
    "keywords": "Class FullyIterativeConverter Inheritance System.Object FullyIterativeConverter Implements IConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixStructures.Conversions Assembly : StringAlgorithms.dll Syntax public class FullyIterativeConverter : IConverter Remarks Conversion is iteratively both for branching and no-branching paths (i.e. on nodes having a single child) of the input SuffixTrieNode , with occasional mutation of internal state of the conversion and the use of a stack to store nodes to process. Not limited by call stack depth. Convenient with deep trees (i.e. trees having a height > ~1K nodes). Methods | Improve this Doc View Source TrieToTree(SuffixTrieNode) Converts the provided SuffixTrieNode instance into an equivalent instance of SuffixTreeNode , building its entire structure. Declaration public SuffixTreeNode TrieToTree(SuffixTrieNode trieNode) Parameters Type Name Description SuffixTrieNode trieNode The node identifying the trie structure to be converted. Returns Type Description SuffixTreeNode A Suffix Tree, equivalent to the provided trie. Implements IConverter"
  },
  "api/StringAlgorithms.SuffixStructures.Conversions.FullyRecursiveConverter.html": {
    "href": "api/StringAlgorithms.SuffixStructures.Conversions.FullyRecursiveConverter.html",
    "title": "Class FullyRecursiveConverter",
    "keywords": "Class FullyRecursiveConverter Inheritance System.Object FullyRecursiveConverter Implements IConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixStructures.Conversions Assembly : StringAlgorithms.dll Syntax public class FullyRecursiveConverter : IConverter Remarks Implemented fully recursively, with one level of recursion per level of the input SuffixTrieNode . Limited by call stack depth and usable with input trees of a \"reasonable\" height. Methods | Improve this Doc View Source TrieToTree(SuffixTrieNode) Converts the provided SuffixTrieNode instance into an equivalent instance of SuffixTreeNode , building its entire structure. Declaration public SuffixTreeNode TrieToTree(SuffixTrieNode trieNode) Parameters Type Name Description SuffixTrieNode trieNode The node identifying the trie structure to be converted. Returns Type Description SuffixTreeNode A Suffix Tree, equivalent to the provided trie. Implements IConverter"
  },
  "api/StringAlgorithms.SuffixStructures.Conversions.html": {
    "href": "api/StringAlgorithms.SuffixStructures.Conversions.html",
    "title": "Namespace StringAlgorithms.SuffixStructures.Conversions",
    "keywords": "Namespace StringAlgorithms.SuffixStructures.Conversions Classes FullyIterativeConverter FullyRecursiveConverter PartiallyIterativeConverter Interfaces IConverter A converter between different ISuffixStructureNode<TEdge, TNode> structures, such as SuffixTrieNode and SuffixTreeNode ."
  },
  "api/StringAlgorithms.SuffixStructures.Conversions.IConverter.html": {
    "href": "api/StringAlgorithms.SuffixStructures.Conversions.IConverter.html",
    "title": "Interface IConverter",
    "keywords": "Interface IConverter A converter between different ISuffixStructureNode<TEdge, TNode> structures, such as SuffixTrieNode and SuffixTreeNode . Namespace : StringAlgorithms.SuffixStructures.Conversions Assembly : StringAlgorithms.dll Syntax public interface IConverter Methods | Improve this Doc View Source TrieToTree(SuffixTrieNode) Converts the provided SuffixTrieNode instance into an equivalent instance of SuffixTreeNode , building its entire structure. Declaration SuffixTreeNode TrieToTree(SuffixTrieNode trieNode) Parameters Type Name Description SuffixTrieNode trieNode The node identifying the trie structure to be converted. Returns Type Description SuffixTreeNode A Suffix Tree, equivalent to the provided trie."
  },
  "api/StringAlgorithms.SuffixStructures.Conversions.PartiallyIterativeConverter.html": {
    "href": "api/StringAlgorithms.SuffixStructures.Conversions.PartiallyIterativeConverter.html",
    "title": "Class PartiallyIterativeConverter",
    "keywords": "Class PartiallyIterativeConverter Inheritance System.Object PartiallyIterativeConverter Implements IConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixStructures.Conversions Assembly : StringAlgorithms.dll Syntax public class PartiallyIterativeConverter : IConverter Remarks Conversion is iteratively for no-branching paths (i.e. on nodes having a single child) and recursively on branching of the input SuffixTrieNode , with occasional mutation of internal state of the conversion. Limited by stack depth (but less than FullyRecursiveConverter ) and usable with output trees of a \"reasonable\" height. Methods | Improve this Doc View Source TrieToTree(SuffixTrieNode) Converts the provided SuffixTrieNode instance into an equivalent instance of SuffixTreeNode , building its entire structure. Declaration public SuffixTreeNode TrieToTree(SuffixTrieNode trieNode) Parameters Type Name Description SuffixTrieNode trieNode The node identifying the trie structure to be converted. Returns Type Description SuffixTreeNode A Suffix Tree, equivalent to the provided trie. Implements IConverter"
  },
  "api/StringAlgorithms.SuffixStructures.html": {
    "href": "api/StringAlgorithms.SuffixStructures.html",
    "title": "Namespace StringAlgorithms.SuffixStructures",
    "keywords": "Namespace StringAlgorithms.SuffixStructures Classes SuffixStructureEdgeExtensions Extension methods for all ISuffixStructureEdge<TEdge, TNode> edge concretions. SuffixStructureNodeExtensions Extension methods for all ISuffixStructureNode<TEdge, TNode> node concretions. SuffixStructureTreePathExtensions Extension methods for all TreePath<TEdge, TNode> used in ISuffixStructureNode<TEdge, TNode> structures. Interfaces ISuffixStructureEdge<TEdge, TNode> An edge of a ISuffixStructureEdge<TEdge, TNode> , directionally linking two nodes and forming a path hop. Represents prefix matching. ISuffixStructureNode<TEdge, TNode> The node of a Suffix Structure, linked by edges and forming paths. Represents pattern matching state. Enums AdjacencyOrders The possible adjacency order relationships between two edges by the parts they refer to in the text."
  },
  "api/StringAlgorithms.SuffixStructures.ISuffixStructureEdge-2.html": {
    "href": "api/StringAlgorithms.SuffixStructures.ISuffixStructureEdge-2.html",
    "title": "Interface ISuffixStructureEdge<TEdge, TNode>",
    "keywords": "Interface ISuffixStructureEdge<TEdge, TNode> An edge of a ISuffixStructureEdge<TEdge, TNode> , directionally linking two nodes and forming a path hop. Represents prefix matching. Inherited Members TextWithTerminator.ISelector.Of(TextWithTerminator) Namespace : StringAlgorithms.SuffixStructures Assembly : StringAlgorithms.dll Syntax public interface ISuffixStructureEdge<TEdge, TNode> : TextWithTerminator.ISelector, IRecImmDictIndexedTreeEdge<TEdge, TNode> where TEdge : ISuffixStructureEdge<TEdge, TNode> where TNode : ISuffixStructureNode<TEdge, TNode> Type Parameters Name Description TEdge TNode Properties | Improve this Doc View Source Length The length of the edge string. Declaration int Length { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Start The index of the first character of the edge string in the text. Declaration int Start { get; } Property Value Type Description System.Int32 Extension Methods SuffixStructureEdgeExtensions.IsAdjacentTo<TEdge, TNode>(ISuffixStructureEdge<TEdge, TNode>, TEdge, AdjacencyOrders)"
  },
  "api/StringAlgorithms.SuffixStructures.ISuffixStructureNode-2.html": {
    "href": "api/StringAlgorithms.SuffixStructures.ISuffixStructureNode-2.html",
    "title": "Interface ISuffixStructureNode<TEdge, TNode>",
    "keywords": "Interface ISuffixStructureNode<TEdge, TNode> The node of a Suffix Structure, linked by edges and forming paths. Represents pattern matching state. Inherited Members IRecImmDictIndexedTreeNode<TEdge, TNode>.Children Namespace : StringAlgorithms.SuffixStructures Assembly : StringAlgorithms.dll Syntax public interface ISuffixStructureNode<TEdge, TNode> : IRecImmDictIndexedTreeNode<TEdge, TNode> where TEdge : ISuffixStructureEdge<TEdge, TNode> where TNode : ISuffixStructureNode<TEdge, TNode> Type Parameters Name Description TEdge TNode Properties | Improve this Doc View Source Start The index of the character, the path from the root leading to this leaf starts with. Non-null for leaves only. Declaration int? Start { get; } Property Value Type Description System.Nullable < System.Int32 > Extension Methods RecImmDictIndexedTreeNodeExtensions.IsLeaf<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) RecImmDictIndexedTreeNodeExtensions.GetAllNodeToLeafPaths<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) SuffixStructureNodeExtensions.GetAllSuffixesFor<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator) Matcher.Match<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator, String)"
  },
  "api/StringAlgorithms.SuffixStructures.Matching.html": {
    "href": "api/StringAlgorithms.SuffixStructures.Matching.html",
    "title": "Namespace StringAlgorithms.SuffixStructures.Matching",
    "keywords": "Namespace StringAlgorithms.SuffixStructures.Matching Classes Match<TPath> The result of matching a against a concretion. Matcher Exposes utility methods to match a TextWithTerminator against a ISuffixStructureNode<TEdge, TNode> concretion."
  },
  "api/StringAlgorithms.SuffixStructures.Matching.Match-1.html": {
    "href": "api/StringAlgorithms.SuffixStructures.Matching.Match-1.html",
    "title": "Class Match<TPath>",
    "keywords": "Class Match<TPath> The result of matching a against a concretion. Inheritance System.Object Match<TPath> Implements System.IEquatable < Match <TPath>> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixStructures.Matching Assembly : StringAlgorithms.dll Syntax public sealed class Match<TPath> : IEquatable<Match<TPath>> Type Parameters Name Description TPath Constructors | Improve this Doc View Source Match(Boolean, Int32, Int32, TPath) The result of matching a against a concretion. Declaration public Match(bool Success, int Begin, int MatchedChars, TPath Path) Parameters Type Name Description System.Boolean Success Whether the text has been completely matched or not. System.Int32 Begin The index in text of the best match in the Suffix Tree. System.Int32 MatchedChars The number of chars matched from the text. TPath Path The path of nodes visited by the matching algorithm, from the root downwards. Properties | Improve this Doc View Source Begin Declaration public int Begin { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MatchedChars Declaration public int MatchedChars { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Path Declaration public TPath Path { get; set; } Property Value Type Description TPath | Improve this Doc View Source Success Declaration public bool Success { get; set; } Property Value Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/StringAlgorithms.SuffixStructures.Matching.Matcher.html": {
    "href": "api/StringAlgorithms.SuffixStructures.Matching.Matcher.html",
    "title": "Class Matcher",
    "keywords": "Class Matcher Exposes utility methods to match a TextWithTerminator against a ISuffixStructureNode<TEdge, TNode> concretion. Inheritance System.Object Matcher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixStructures.Matching Assembly : StringAlgorithms.dll Syntax public static class Matcher Methods | Improve this Doc View Source Match<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator, String) Tries to match a pattern against a Suffix Tree built on a text. Declaration public static Match<TreePath<TEdge, TNode>> Match<TEdge, TNode>(this ISuffixStructureNode<TEdge, TNode> node, TextWithTerminator text, string pattern) where TEdge : ISuffixStructureEdge<TEdge, TNode> where TNode : ISuffixStructureNode<TEdge, TNode> Parameters Type Name Description ISuffixStructureNode <TEdge, TNode> node The root of the Suffix Tree, to match the suffix of text against. TextWithTerminator text The text whose Suffix Tree has to be matched against the pattern. System.String pattern The pattern to match. Unlike text, is a string without terminator. Returns Type Description Match < TreePath <TEdge, TNode>> A successful or non-successful match. Type Parameters Name Description TEdge TNode"
  },
  "api/StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.html": {
    "href": "api/StringAlgorithms.SuffixStructures.SuffixStructureEdgeExtensions.html",
    "title": "Class SuffixStructureEdgeExtensions",
    "keywords": "Class SuffixStructureEdgeExtensions Extension methods for all ISuffixStructureEdge<TEdge, TNode> edge concretions. Inheritance System.Object SuffixStructureEdgeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixStructures Assembly : StringAlgorithms.dll Syntax public static class SuffixStructureEdgeExtensions Methods | Improve this Doc View Source IsAdjacentTo<TEdge, TNode>(ISuffixStructureEdge<TEdge, TNode>, TEdge, AdjacencyOrders) Whether the first edge is in adjacency order w.r.t. the second edge. Declaration public static bool IsAdjacentTo<TEdge, TNode>(this ISuffixStructureEdge<TEdge, TNode> first, TEdge second, AdjacencyOrders order = AdjacencyOrders.BeforeOrAfter) where TEdge : ISuffixStructureEdge<TEdge, TNode> where TNode : ISuffixStructureNode<TEdge, TNode> Parameters Type Name Description ISuffixStructureEdge <TEdge, TNode> first The edge to be compared for adjacency. TEdge second The edge to compare the first edge against. AdjacencyOrders order The adjacency relationship order to use for comparison. Returns Type Description System.Boolean True if the specified adjacency relationship is respected. Type Parameters Name Description TEdge TNode"
  },
  "api/StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.html": {
    "href": "api/StringAlgorithms.SuffixStructures.SuffixStructureNodeExtensions.html",
    "title": "Class SuffixStructureNodeExtensions",
    "keywords": "Class SuffixStructureNodeExtensions Extension methods for all ISuffixStructureNode<TEdge, TNode> node concretions. Inheritance System.Object SuffixStructureNodeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixStructures Assembly : StringAlgorithms.dll Syntax public static class SuffixStructureNodeExtensions Methods | Improve this Doc View Source GetAllSuffixesFor<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator) Returns all suffixes for the provided text from the node down the ISuffixStructureNode<TEdge, TNode> , up to leaves. Declaration public static IEnumerable<string> GetAllSuffixesFor<TEdge, TNode>(this ISuffixStructureNode<TEdge, TNode> node, TextWithTerminator text) where TEdge : ISuffixStructureEdge<TEdge, TNode> where TNode : ISuffixStructureNode<TEdge, TNode> Parameters Type Name Description ISuffixStructureNode <TEdge, TNode> node The node, to start the structure traversal from. TextWithTerminator text The text with terminator, whose suffixes have to be extracted. Returns Type Description IEnumerable < System.String > A sequence of strings, each one being a suffix. Type Parameters Name Description TEdge TNode"
  },
  "api/StringAlgorithms.SuffixStructures.SuffixStructureTreePathExtensions.html": {
    "href": "api/StringAlgorithms.SuffixStructures.SuffixStructureTreePathExtensions.html",
    "title": "Class SuffixStructureTreePathExtensions",
    "keywords": "Class SuffixStructureTreePathExtensions Extension methods for all TreePath<TEdge, TNode> used in ISuffixStructureNode<TEdge, TNode> structures. Inheritance System.Object SuffixStructureTreePathExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixStructures Assembly : StringAlgorithms.dll Syntax public static class SuffixStructureTreePathExtensions Methods | Improve this Doc View Source IsSuffixOf<TEdge, TNode>(TreePath<TEdge, TNode>, TextWithTerminator) Whether this path identifies a suffix of the provided text. Declaration public static bool IsSuffixOf<TEdge, TNode>(this TreePath<TEdge, TNode> path, TextWithTerminator text) where TEdge : TextWithTerminator.ISelector Parameters Type Name Description TreePath <TEdge, TNode> path The path, identifying a segment of the provided text. TextWithTerminator text The text, including the terminator character. Returns Type Description System.Boolean True if the segment of text is also a suffix the text. Type Parameters Name Description TEdge TNode | Improve this Doc View Source SuffixFor<TEdge, TNode>(TreePath<TEdge, TNode>, TextWithTerminator) Calculate the suffix corresponding to this path on the provided terminator-including text. Declaration public static string SuffixFor<TEdge, TNode>(this TreePath<TEdge, TNode> path, TextWithTerminator text) where TEdge : TextWithTerminator.ISelector Parameters Type Name Description TreePath <TEdge, TNode> path The path to traverse to build the suffix. TextWithTerminator text The text, including the terminator character. Returns Type Description System.String A string containing the suffix. Type Parameters Name Description TEdge TNode"
  },
  "api/StringAlgorithms.SuffixTrees.Builders.html": {
    "href": "api/StringAlgorithms.SuffixTrees.Builders.html",
    "title": "Namespace StringAlgorithms.SuffixTrees.Builders",
    "keywords": "Namespace StringAlgorithms.SuffixTrees.Builders Classes SuffixTreeBuilder Builds objects, such as edges and nodes, for SuffixTreeNode structures."
  },
  "api/StringAlgorithms.SuffixTrees.Builders.SuffixTreeBuilder.html": {
    "href": "api/StringAlgorithms.SuffixTrees.Builders.SuffixTreeBuilder.html",
    "title": "Class SuffixTreeBuilder",
    "keywords": "Class SuffixTreeBuilder Builds objects, such as edges and nodes, for SuffixTreeNode structures. Inheritance System.Object SuffixTreeBuilder Implements IBuilder < SuffixTreeEdge , SuffixTreeNode > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixTrees.Builders Assembly : StringAlgorithms.dll Syntax public class SuffixTreeBuilder : IBuilder<SuffixTreeEdge, SuffixTreeNode> Methods | Improve this Doc View Source BuildTree(TextWithTerminator) Build a ISuffixStructureEdge<TEdge, TNode> of the provided text, which is a n-ary search tree in which edges coming out of a node are substrings of text which identify edges shared by all paths to leaves, starting from the node. Declaration public SuffixTreeNode BuildTree(TextWithTerminator text) Parameters Type Name Description TextWithTerminator text The text to build the Suffix Structure of, with its terminator (required for traversal). Returns Type Description SuffixTreeNode The root node of the Suffix Structure. Remarks Substrings of text are identified by their start position in text and their length. Implements IBuilder<TEdge, TNode> Extension Methods BuilderExtensions.BuildTree<TEdge, TNode>(IBuilder<TEdge, TNode>, String)"
  },
  "api/StringAlgorithms.SuffixTrees.html": {
    "href": "api/StringAlgorithms.SuffixTrees.html",
    "title": "Namespace StringAlgorithms.SuffixTrees",
    "keywords": "Namespace StringAlgorithms.SuffixTrees Classes SuffixTreeEdge The index key of the collection of children of a SuffixTreeNode , which identifies a non-empty substring in text used as a selector to navigate the SuffixTreeNode in text pattern matching. SuffixTreeNode An immutable node of an immutable Suffix Tree, recursively pointing to its children nodes via SuffixTreeEdge instances, associated with selector strings. SuffixTreeNode.Intermediate Builds an intermediate node, i.e. a node with children and their corresponding incoming edges. SuffixTreeNode.Leaf Builds a leaf, i.e. a node with no children and the start index of the suffix in the text."
  },
  "api/StringAlgorithms.SuffixTrees.SuffixTreeEdge.html": {
    "href": "api/StringAlgorithms.SuffixTrees.SuffixTreeEdge.html",
    "title": "Class SuffixTreeEdge",
    "keywords": "Class SuffixTreeEdge The index key of the collection of children of a SuffixTreeNode , which identifies a non-empty substring in text used as a selector to navigate the SuffixTreeNode in text pattern matching. Inheritance System.Object SuffixTreeEdge SuffixTrieEdge Implements ISuffixStructureEdge < SuffixTreeEdge , SuffixTreeNode > TextWithTerminator.ISelector IRecImmDictIndexedTreeEdge < SuffixTreeEdge , SuffixTreeNode > System.IEquatable < SuffixTreeEdge > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixTrees Assembly : StringAlgorithms.dll Syntax public class SuffixTreeEdge : ISuffixStructureEdge<SuffixTreeEdge, SuffixTreeNode>, TextWithTerminator.ISelector, IRecImmDictIndexedTreeEdge<SuffixTreeEdge, SuffixTreeNode>, IEquatable<SuffixTreeEdge> Constructors | Improve this Doc View Source SuffixTreeEdge(Int32, Int32) The index key of the collection of children of a SuffixTreeNode , which identifies a non-empty substring in text used as a selector to navigate the SuffixTreeNode in text pattern matching. Declaration public SuffixTreeEdge(int Start, int Length) Parameters Type Name Description System.Int32 Start System.Int32 Length Properties | Improve this Doc View Source Length The length of the edge string. Declaration public int Length { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Start The index of the first character of the edge string in the text. Declaration public int Start { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Of(TextWithTerminator) Extract the substring identified by this selector, out of the provided text. Declaration public virtual string Of(TextWithTerminator text) Parameters Type Name Description TextWithTerminator text The text with terminator, to extract a substring of. Returns Type Description System.String A substring, whose length depends on the selector. Implements ISuffixStructureEdge<TEdge, TNode> TextWithTerminator.ISelector IRecImmDictIndexedTreeEdge<TEdge, TNode> System.IEquatable<T> Extension Methods SuffixStructureEdgeExtensions.IsAdjacentTo<TEdge, TNode>(ISuffixStructureEdge<TEdge, TNode>, TEdge, AdjacencyOrders)"
  },
  "api/StringAlgorithms.SuffixTrees.SuffixTreeNode.html": {
    "href": "api/StringAlgorithms.SuffixTrees.SuffixTreeNode.html",
    "title": "Class SuffixTreeNode",
    "keywords": "Class SuffixTreeNode An immutable node of an immutable Suffix Tree, recursively pointing to its children nodes via SuffixTreeEdge instances, associated with selector strings. Inheritance System.Object SuffixTreeNode SuffixTreeNode.Intermediate SuffixTreeNode.Leaf Implements ISuffixStructureNode < SuffixTreeEdge , SuffixTreeNode > IRecImmDictIndexedTreeNode < SuffixTreeEdge , SuffixTreeNode > System.IEquatable < SuffixTreeNode > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : StringAlgorithms.SuffixTrees Assembly : StringAlgorithms.dll Syntax public abstract class SuffixTreeNode : ISuffixStructureNode<SuffixTreeEdge, SuffixTreeNode>, IRecImmDictIndexedTreeNode<SuffixTreeEdge, SuffixTreeNode>, IEquatable<SuffixTreeNode> Remarks Immutability is guaranteed by using ValueReadOnlyCollection<T> . Constructors | Improve this Doc View Source SuffixTreeNode(IDictionary<SuffixTreeEdge, SuffixTreeNode>, Nullable<Int32>) An immutable node of an immutable Suffix Tree, recursively pointing to its children nodes via SuffixTreeEdge instances, associated with selector strings. Declaration protected SuffixTreeNode(IDictionary<SuffixTreeEdge, SuffixTreeNode> Children, int? Start) Parameters Type Name Description IDictionary < SuffixTreeEdge , SuffixTreeNode > Children The collection of children for the node, indexed by string edges. System.Nullable < System.Int32 > Start Remarks Immutability is guaranteed by using ValueReadOnlyCollection<T> . Properties | Improve this Doc View Source Children A readonly view of the children private collection of this node. Empty for leaves. Declaration public IDictionary<SuffixTreeEdge, SuffixTreeNode> Children { get; } Property Value Type Description IDictionary < SuffixTreeEdge , SuffixTreeNode > | Improve this Doc View Source Item[SuffixTreeEdge] Indexes into the children of this node, by edge. Declaration public SuffixTreeNode this[SuffixTreeEdge edge] { get; } Parameters Type Name Description SuffixTreeEdge edge Property Value Type Description SuffixTreeNode | Improve this Doc View Source Start The index of the character, the path from the root leading to this leaf starts with. Non-null for leaves only. Declaration public int? Start { get; } Property Value Type Description System.Nullable < System.Int32 > Methods | Improve this Doc View Source ToString() Uses a IStringifier<TEdge, TNode> to generate the string. Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements ISuffixStructureNode<TEdge, TNode> IRecImmDictIndexedTreeNode<TEdge, TNode> System.IEquatable<T> Extension Methods RecImmDictIndexedTreeNodeExtensions.IsLeaf<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) RecImmDictIndexedTreeNodeExtensions.GetAllNodeToLeafPaths<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) SuffixStructureNodeExtensions.GetAllSuffixesFor<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator) Matcher.Match<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator, String)"
  },
  "api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.html": {
    "href": "api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Intermediate.html",
    "title": "Class SuffixTreeNode.Intermediate",
    "keywords": "Class SuffixTreeNode.Intermediate Builds an intermediate node, i.e. a node with children and their corresponding incoming edges. Inheritance System.Object SuffixTreeNode SuffixTreeNode.Intermediate Implements ISuffixStructureNode < SuffixTreeEdge , SuffixTreeNode > IRecImmDictIndexedTreeNode < SuffixTreeEdge , SuffixTreeNode > System.IEquatable < SuffixTreeNode > System.IEquatable < SuffixTreeNode.Intermediate > Inherited Members SuffixTreeNode.Children SuffixTreeNode.Start SuffixTreeNode.Item[SuffixTreeEdge] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : StringAlgorithms.SuffixTrees Assembly : StringAlgorithms.dll Syntax public class Intermediate : SuffixTreeNode, ISuffixStructureNode<SuffixTreeEdge, SuffixTreeNode>, IRecImmDictIndexedTreeNode<SuffixTreeEdge, SuffixTreeNode>, IEquatable<SuffixTreeNode>, IEquatable<SuffixTreeNode.Intermediate> Constructors | Improve this Doc View Source Intermediate(IDictionary<SuffixTreeEdge, SuffixTreeNode>) Builds an intermediate node, i.e. a node with children and their corresponding incoming edges. Declaration public Intermediate(IDictionary<SuffixTreeEdge, SuffixTreeNode> Children) Parameters Type Name Description IDictionary < SuffixTreeEdge , SuffixTreeNode > Children Methods | Improve this Doc View Source ToString() Uses a IStringifier<TEdge, TNode> to generate the string. Declaration public override string ToString() Returns Type Description System.String Overrides SuffixTreeNode.ToString() Implements ISuffixStructureNode<TEdge, TNode> IRecImmDictIndexedTreeNode<TEdge, TNode> System.IEquatable<T> System.IEquatable<T> Extension Methods RecImmDictIndexedTreeNodeExtensions.IsLeaf<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) RecImmDictIndexedTreeNodeExtensions.GetAllNodeToLeafPaths<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) SuffixStructureNodeExtensions.GetAllSuffixesFor<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator) Matcher.Match<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator, String)"
  },
  "api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.html": {
    "href": "api/StringAlgorithms.SuffixTrees.SuffixTreeNode.Leaf.html",
    "title": "Class SuffixTreeNode.Leaf",
    "keywords": "Class SuffixTreeNode.Leaf Builds a leaf, i.e. a node with no children and the start index of the suffix in the text. Inheritance System.Object SuffixTreeNode SuffixTreeNode.Leaf Implements ISuffixStructureNode < SuffixTreeEdge , SuffixTreeNode > IRecImmDictIndexedTreeNode < SuffixTreeEdge , SuffixTreeNode > System.IEquatable < SuffixTreeNode > System.IEquatable < SuffixTreeNode.Leaf > Inherited Members SuffixTreeNode.Children SuffixTreeNode.Start SuffixTreeNode.Item[SuffixTreeEdge] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : StringAlgorithms.SuffixTrees Assembly : StringAlgorithms.dll Syntax public class Leaf : SuffixTreeNode, ISuffixStructureNode<SuffixTreeEdge, SuffixTreeNode>, IRecImmDictIndexedTreeNode<SuffixTreeEdge, SuffixTreeNode>, IEquatable<SuffixTreeNode>, IEquatable<SuffixTreeNode.Leaf> Constructors | Improve this Doc View Source Leaf(Int32) Builds a leaf, i.e. a node with no children and the start index of the suffix in the text. Declaration public Leaf(int LeafStart) Parameters Type Name Description System.Int32 LeafStart Properties | Improve this Doc View Source LeafStart Declaration public int LeafStart { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source ToString() Uses a IStringifier<TEdge, TNode> to generate the string. Declaration public override string ToString() Returns Type Description System.String Overrides SuffixTreeNode.ToString() Implements ISuffixStructureNode<TEdge, TNode> IRecImmDictIndexedTreeNode<TEdge, TNode> System.IEquatable<T> System.IEquatable<T> Extension Methods RecImmDictIndexedTreeNodeExtensions.IsLeaf<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) RecImmDictIndexedTreeNodeExtensions.GetAllNodeToLeafPaths<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) SuffixStructureNodeExtensions.GetAllSuffixesFor<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator) Matcher.Match<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator, String)"
  },
  "api/StringAlgorithms.SuffixTries.Builders.html": {
    "href": "api/StringAlgorithms.SuffixTries.Builders.html",
    "title": "Namespace StringAlgorithms.SuffixTries.Builders",
    "keywords": "Namespace StringAlgorithms.SuffixTries.Builders Classes SuffixTrieBuilder Builds objects, such as edges and nodes, for SuffixTrieNode structures."
  },
  "api/StringAlgorithms.SuffixTries.Builders.SuffixTrieBuilder.html": {
    "href": "api/StringAlgorithms.SuffixTries.Builders.SuffixTrieBuilder.html",
    "title": "Class SuffixTrieBuilder",
    "keywords": "Class SuffixTrieBuilder Builds objects, such as edges and nodes, for SuffixTrieNode structures. Inheritance System.Object SuffixTrieBuilder Implements IBuilder < SuffixTrieEdge , SuffixTrieNode > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixTries.Builders Assembly : StringAlgorithms.dll Syntax public class SuffixTrieBuilder : IBuilder<SuffixTrieEdge, SuffixTrieNode> Methods | Improve this Doc View Source BuildTree(TextWithTerminator) Build a ISuffixStructureEdge<TEdge, TNode> of the provided text, which is a n-ary search tree in which edges coming out of a node are substrings of text which identify edges shared by all paths to leaves, starting from the node. Declaration public SuffixTrieNode BuildTree(TextWithTerminator text) Parameters Type Name Description TextWithTerminator text The text to build the Suffix Structure of, with its terminator (required for traversal). Returns Type Description SuffixTrieNode The root node of the Suffix Structure. Remarks Substrings of text are identified by their start position in text and their length. Implements IBuilder<TEdge, TNode> Extension Methods BuilderExtensions.BuildTree<TEdge, TNode>(IBuilder<TEdge, TNode>, String)"
  },
  "api/StringAlgorithms.SuffixTries.html": {
    "href": "api/StringAlgorithms.SuffixTries.html",
    "title": "Namespace StringAlgorithms.SuffixTries",
    "keywords": "Namespace StringAlgorithms.SuffixTries Classes SuffixTrieEdge The index key of the collection of children of a SuffixTrieNode , which identifies a single char in text, used as a selector to navigate the SuffixTrieNode in text pattern matching. SuffixTrieNode An immutable node of an immutable Suffix Trie, recursively pointing to its children nodes via SuffixTrieEdge instances, associated with selector characters. SuffixTrieNode.Intermediate Builds an intermediate node, i.e. a node with children and their corresponding incoming edges. SuffixTrieNode.Leaf Builds a leaf, i.e. a node with no children and the start index of the suffix in the text."
  },
  "api/StringAlgorithms.SuffixTries.SuffixTrieEdge.html": {
    "href": "api/StringAlgorithms.SuffixTries.SuffixTrieEdge.html",
    "title": "Class SuffixTrieEdge",
    "keywords": "Class SuffixTrieEdge The index key of the collection of children of a SuffixTrieNode , which identifies a single char in text, used as a selector to navigate the SuffixTrieNode in text pattern matching. Inheritance System.Object SuffixTreeEdge SuffixTrieEdge Implements ISuffixStructureEdge < SuffixTreeEdge , SuffixTreeNode > IRecImmDictIndexedTreeEdge < SuffixTreeEdge , SuffixTreeNode > System.IEquatable < SuffixTreeEdge > ISuffixStructureEdge < SuffixTrieEdge , SuffixTrieNode > TextWithTerminator.ISelector IRecImmDictIndexedTreeEdge < SuffixTrieEdge , SuffixTrieNode > System.IEquatable < SuffixTrieEdge > Inherited Members SuffixTreeEdge.Start SuffixTreeEdge.Length SuffixTreeEdge.Of(TextWithTerminator) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.SuffixTries Assembly : StringAlgorithms.dll Syntax public class SuffixTrieEdge : SuffixTreeEdge, ISuffixStructureEdge<SuffixTreeEdge, SuffixTreeNode>, IRecImmDictIndexedTreeEdge<SuffixTreeEdge, SuffixTreeNode>, IEquatable<SuffixTreeEdge>, ISuffixStructureEdge<SuffixTrieEdge, SuffixTrieNode>, TextWithTerminator.ISelector, IRecImmDictIndexedTreeEdge<SuffixTrieEdge, SuffixTrieNode>, IEquatable<SuffixTrieEdge> Constructors | Improve this Doc View Source SuffixTrieEdge(Int32) The index key of the collection of children of a SuffixTrieNode , which identifies a single char in text, used as a selector to navigate the SuffixTrieNode in text pattern matching. Declaration public SuffixTrieEdge(int Index) Parameters Type Name Description System.Int32 Index The index of the character in the text. Properties | Improve this Doc View Source Index Declaration public int Index { get; set; } Property Value Type Description System.Int32 Implements ISuffixStructureEdge<TEdge, TNode> IRecImmDictIndexedTreeEdge<TEdge, TNode> System.IEquatable<T> ISuffixStructureEdge<TEdge, TNode> TextWithTerminator.ISelector IRecImmDictIndexedTreeEdge<TEdge, TNode> System.IEquatable<T>"
  },
  "api/StringAlgorithms.SuffixTries.SuffixTrieNode.html": {
    "href": "api/StringAlgorithms.SuffixTries.SuffixTrieNode.html",
    "title": "Class SuffixTrieNode",
    "keywords": "Class SuffixTrieNode An immutable node of an immutable Suffix Trie, recursively pointing to its children nodes via SuffixTrieEdge instances, associated with selector characters. Inheritance System.Object SuffixTrieNode SuffixTrieNode.Intermediate SuffixTrieNode.Leaf Implements ISuffixStructureNode < SuffixTrieEdge , SuffixTrieNode > IRecImmDictIndexedTreeNode < SuffixTrieEdge , SuffixTrieNode > System.IEquatable < SuffixTrieNode > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : StringAlgorithms.SuffixTries Assembly : StringAlgorithms.dll Syntax public abstract class SuffixTrieNode : ISuffixStructureNode<SuffixTrieEdge, SuffixTrieNode>, IRecImmDictIndexedTreeNode<SuffixTrieEdge, SuffixTrieNode>, IEquatable<SuffixTrieNode> Remarks Immutability is guaranteed by using ValueReadOnlyCollection<T> . Constructors | Improve this Doc View Source SuffixTrieNode(IDictionary<SuffixTrieEdge, SuffixTrieNode>, Nullable<Int32>) An immutable node of an immutable Suffix Trie, recursively pointing to its children nodes via SuffixTrieEdge instances, associated with selector characters. Declaration protected SuffixTrieNode(IDictionary<SuffixTrieEdge, SuffixTrieNode> Children, int? Start) Parameters Type Name Description IDictionary < SuffixTrieEdge , SuffixTrieNode > Children The collection of children for the node, indexed by single char edges. System.Nullable < System.Int32 > Start Remarks Immutability is guaranteed by using ValueReadOnlyCollection<T> . Properties | Improve this Doc View Source Children A readonly view of the children private collection of this node. Empty for leaves. Declaration public IDictionary<SuffixTrieEdge, SuffixTrieNode> Children { get; } Property Value Type Description IDictionary < SuffixTrieEdge , SuffixTrieNode > | Improve this Doc View Source Item[SuffixTrieEdge] Indexes into the children of this node, by edge, which is a single char selector. Declaration public SuffixTrieNode this[SuffixTrieEdge edge] { get; } Parameters Type Name Description SuffixTrieEdge edge Property Value Type Description SuffixTrieNode | Improve this Doc View Source Start The index of the character, the path from the root leading to this leaf starts with. Non-null for leaves only. Declaration public int? Start { get; } Property Value Type Description System.Nullable < System.Int32 > Methods | Improve this Doc View Source ToString() Uses a IStringifier<TEdge, TNode> to generate the string. Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements ISuffixStructureNode<TEdge, TNode> IRecImmDictIndexedTreeNode<TEdge, TNode> System.IEquatable<T> Extension Methods RecImmDictIndexedTreeNodeExtensions.IsLeaf<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) RecImmDictIndexedTreeNodeExtensions.GetAllNodeToLeafPaths<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) SuffixStructureNodeExtensions.GetAllSuffixesFor<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator) Matcher.Match<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator, String)"
  },
  "api/StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.html": {
    "href": "api/StringAlgorithms.SuffixTries.SuffixTrieNode.Intermediate.html",
    "title": "Class SuffixTrieNode.Intermediate",
    "keywords": "Class SuffixTrieNode.Intermediate Builds an intermediate node, i.e. a node with children and their corresponding incoming edges. Inheritance System.Object SuffixTrieNode SuffixTrieNode.Intermediate Implements ISuffixStructureNode < SuffixTrieEdge , SuffixTrieNode > IRecImmDictIndexedTreeNode < SuffixTrieEdge , SuffixTrieNode > System.IEquatable < SuffixTrieNode > System.IEquatable < SuffixTrieNode.Intermediate > Inherited Members SuffixTrieNode.Children SuffixTrieNode.Start SuffixTrieNode.Item[SuffixTrieEdge] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : StringAlgorithms.SuffixTries Assembly : StringAlgorithms.dll Syntax public class Intermediate : SuffixTrieNode, ISuffixStructureNode<SuffixTrieEdge, SuffixTrieNode>, IRecImmDictIndexedTreeNode<SuffixTrieEdge, SuffixTrieNode>, IEquatable<SuffixTrieNode>, IEquatable<SuffixTrieNode.Intermediate> Constructors | Improve this Doc View Source Intermediate(IDictionary<SuffixTrieEdge, SuffixTrieNode>) Builds an intermediate node, i.e. a node with children and their corresponding incoming edges. Declaration public Intermediate(IDictionary<SuffixTrieEdge, SuffixTrieNode> Children) Parameters Type Name Description IDictionary < SuffixTrieEdge , SuffixTrieNode > Children Methods | Improve this Doc View Source ToString() Uses a IStringifier<TEdge, TNode> to generate the string. Declaration public override string ToString() Returns Type Description System.String Overrides SuffixTrieNode.ToString() Implements ISuffixStructureNode<TEdge, TNode> IRecImmDictIndexedTreeNode<TEdge, TNode> System.IEquatable<T> System.IEquatable<T> Extension Methods RecImmDictIndexedTreeNodeExtensions.IsLeaf<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) RecImmDictIndexedTreeNodeExtensions.GetAllNodeToLeafPaths<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) SuffixStructureNodeExtensions.GetAllSuffixesFor<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator) Matcher.Match<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator, String)"
  },
  "api/StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.html": {
    "href": "api/StringAlgorithms.SuffixTries.SuffixTrieNode.Leaf.html",
    "title": "Class SuffixTrieNode.Leaf",
    "keywords": "Class SuffixTrieNode.Leaf Builds a leaf, i.e. a node with no children and the start index of the suffix in the text. Inheritance System.Object SuffixTrieNode SuffixTrieNode.Leaf Implements ISuffixStructureNode < SuffixTrieEdge , SuffixTrieNode > IRecImmDictIndexedTreeNode < SuffixTrieEdge , SuffixTrieNode > System.IEquatable < SuffixTrieNode > System.IEquatable < SuffixTrieNode.Leaf > Inherited Members SuffixTrieNode.Children SuffixTrieNode.Start SuffixTrieNode.Item[SuffixTrieEdge] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : StringAlgorithms.SuffixTries Assembly : StringAlgorithms.dll Syntax public class Leaf : SuffixTrieNode, ISuffixStructureNode<SuffixTrieEdge, SuffixTrieNode>, IRecImmDictIndexedTreeNode<SuffixTrieEdge, SuffixTrieNode>, IEquatable<SuffixTrieNode>, IEquatable<SuffixTrieNode.Leaf> Constructors | Improve this Doc View Source Leaf(Int32) Builds a leaf, i.e. a node with no children and the start index of the suffix in the text. Declaration public Leaf(int LeafStart) Parameters Type Name Description System.Int32 LeafStart Properties | Improve this Doc View Source LeafStart Declaration public int LeafStart { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source ToString() Uses a IStringifier<TEdge, TNode> to generate the string. Declaration public override string ToString() Returns Type Description System.String Overrides SuffixTrieNode.ToString() Implements ISuffixStructureNode<TEdge, TNode> IRecImmDictIndexedTreeNode<TEdge, TNode> System.IEquatable<T> System.IEquatable<T> Extension Methods RecImmDictIndexedTreeNodeExtensions.IsLeaf<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) RecImmDictIndexedTreeNodeExtensions.GetAllNodeToLeafPaths<TEdge, TNode>(IRecImmDictIndexedTreeNode<TEdge, TNode>) SuffixStructureNodeExtensions.GetAllSuffixesFor<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator) Matcher.Match<TEdge, TNode>(ISuffixStructureNode<TEdge, TNode>, TextWithTerminator, String)"
  },
  "api/StringAlgorithms.Tests.CountTrees.CountTreeEdgeTests.html": {
    "href": "api/StringAlgorithms.Tests.CountTrees.CountTreeEdgeTests.html",
    "title": "Class CountTreeEdgeTests",
    "keywords": "Class CountTreeEdgeTests Inheritance System.Object CountTreeEdgeTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.CountTrees Assembly : StringAlgorithms.Tests.dll Syntax public class CountTreeEdgeTests Methods | Improve this Doc View Source Equals_BasedOnWrappedEdge() Declaration public void Equals_BasedOnWrappedEdge() | Improve this Doc View Source WrappedEdge_IsPreserved() Declaration public void WrappedEdge_IsPreserved()"
  },
  "api/StringAlgorithms.Tests.CountTrees.CountTreeNodeTests.html": {
    "href": "api/StringAlgorithms.Tests.CountTrees.CountTreeNodeTests.html",
    "title": "Class CountTreeNodeTests",
    "keywords": "Class CountTreeNodeTests Inheritance System.Object CountTreeNodeTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.CountTrees Assembly : StringAlgorithms.Tests.dll Syntax public class CountTreeNodeTests Methods | Improve this Doc View Source Children_PreservedWrappedStructure() Declaration public void Children_PreservedWrappedStructure() | Improve this Doc View Source DescendantsCount_DoesntStackOverflowWithDeepStructures() Declaration public void DescendantsCount_DoesntStackOverflowWithDeepStructures() | Improve this Doc View Source DescendantsCount_GivesConsistentResults() Declaration public void DescendantsCount_GivesConsistentResults() | Improve this Doc View Source DescendantsCount_OfLeafIsZero() Declaration public void DescendantsCount_OfLeafIsZero() | Improve this Doc View Source DescendantsCount_OfSingletonIsOne() Declaration public void DescendantsCount_OfSingletonIsOne() | Improve this Doc View Source DescendantsCount_OfThreeWithNNodesIsN() Declaration public void DescendantsCount_OfThreeWithNNodesIsN() | Improve this Doc View Source Equals_BasedOnWrappedNode() Declaration public void Equals_BasedOnWrappedNode() | Improve this Doc View Source WrappedNode_IsPreserved() Declaration public void WrappedNode_IsPreserved()"
  },
  "api/StringAlgorithms.Tests.CountTrees.html": {
    "href": "api/StringAlgorithms.Tests.CountTrees.html",
    "title": "Namespace StringAlgorithms.Tests.CountTrees",
    "keywords": "Namespace StringAlgorithms.Tests.CountTrees Classes CountTreeEdgeTests CountTreeNodeTests"
  },
  "api/StringAlgorithms.Tests.html": {
    "href": "api/StringAlgorithms.Tests.html",
    "title": "Namespace StringAlgorithms.Tests",
    "keywords": "Namespace StringAlgorithms.Tests Classes TextWithTerminatorTests"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.Conversions.FullyIterativeStringifierTests.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.Conversions.FullyIterativeStringifierTests.html",
    "title": "Class FullyIterativeStringifierTests",
    "keywords": "Class FullyIterativeStringifierTests Inheritance System.Object StringifierTests FullyIterativeStringifierTests Inherited Members StringifierTests.Stringifier StringifierTests.NL StringifierTests.I StringifierTests.DefaultNewLine StringifierTests.DefaultIndent StringifierTests.DefaultRootStringifier StringifierTests.DefaultEdgeAndNodeStringifier StringifierTests.Stringify_OfLeaf() StringifierTests.Stringify_OfTwoLevelsTree() StringifierTests.Stringify_OfThreeLevelsTree() StringifierTests.Stringify_OfFourLevelsTree() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.RecImmTrees.Conversions Assembly : StringAlgorithms.Tests.dll Syntax public class FullyIterativeStringifierTests : StringifierTests Constructors | Improve this Doc View Source FullyIterativeStringifierTests() Declaration public FullyIterativeStringifierTests() Methods | Improve this Doc View Source PrependLevelAfterStopIndenting_RendersLevelWhenStopIndentingLevelIsReached() Declaration public void PrependLevelAfterStopIndenting_RendersLevelWhenStopIndentingLevelIsReached() | Improve this Doc View Source StopIndentingLevel_StopsIndentingWhenReached_WithOne() Declaration public void StopIndentingLevel_StopsIndentingWhenReached_WithOne() | Improve this Doc View Source StopIndentingLevel_StopsIndentingWhenReached_WithTwo() Declaration public void StopIndentingLevel_StopsIndentingWhenReached_WithTwo() | Improve this Doc View Source StopIndentingLevel_StopsIndentingWhenReached_WithZero() Declaration public void StopIndentingLevel_StopsIndentingWhenReached_WithZero() | Improve this Doc View Source Stringify_DoesntStackOverflowWithDeepStructures() Declaration public void Stringify_DoesntStackOverflowWithDeepStructures()"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.Conversions.FullyRecursiveStringifierTests.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.Conversions.FullyRecursiveStringifierTests.html",
    "title": "Class FullyRecursiveStringifierTests",
    "keywords": "Class FullyRecursiveStringifierTests Inheritance System.Object StringifierTests StringifierBaseTests FullyRecursiveStringifierTests Inherited Members StringifierBaseTests.CustomNewLine_IsReflectedIntoOutput() StringifierBaseTests.CustomIndent_IsReflectedIntoOutput() StringifierTests.Stringifier StringifierTests.NL StringifierTests.I StringifierTests.DefaultNewLine StringifierTests.DefaultIndent StringifierTests.DefaultRootStringifier StringifierTests.DefaultEdgeAndNodeStringifier StringifierTests.Stringify_OfLeaf() StringifierTests.Stringify_OfTwoLevelsTree() StringifierTests.Stringify_OfThreeLevelsTree() StringifierTests.Stringify_OfFourLevelsTree() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.RecImmTrees.Conversions Assembly : StringAlgorithms.Tests.dll Syntax public class FullyRecursiveStringifierTests : StringifierBaseTests Constructors | Improve this Doc View Source FullyRecursiveStringifierTests() Declaration public FullyRecursiveStringifierTests() Methods | Improve this Doc View Source Stringify_DoesntStackOverflowWithNotSoDeepStructures() Declaration public void Stringify_DoesntStackOverflowWithNotSoDeepStructures()"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.Conversions.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.Conversions.html",
    "title": "Namespace StringAlgorithms.Tests.RecImmTrees.Conversions",
    "keywords": "Namespace StringAlgorithms.Tests.RecImmTrees.Conversions Classes FullyIterativeStringifierTests FullyRecursiveStringifierTests StringifierBaseTests StringifierTests TreeMock TreeMock.Edge TreeMock.Node"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.Conversions.StringifierBaseTests.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.Conversions.StringifierBaseTests.html",
    "title": "Class StringifierBaseTests",
    "keywords": "Class StringifierBaseTests Inheritance System.Object StringifierTests StringifierBaseTests FullyRecursiveStringifierTests Inherited Members StringifierTests.Stringifier StringifierTests.NL StringifierTests.I StringifierTests.DefaultNewLine StringifierTests.DefaultIndent StringifierTests.DefaultRootStringifier StringifierTests.DefaultEdgeAndNodeStringifier StringifierTests.Stringify_OfLeaf() StringifierTests.Stringify_OfTwoLevelsTree() StringifierTests.Stringify_OfThreeLevelsTree() StringifierTests.Stringify_OfFourLevelsTree() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.RecImmTrees.Conversions Assembly : StringAlgorithms.Tests.dll Syntax public abstract class StringifierBaseTests : StringifierTests Constructors | Improve this Doc View Source StringifierBaseTests(IStringifier<TreeMock.Edge, TreeMock.Node>) Declaration public StringifierBaseTests(IStringifier<TreeMock.Edge, TreeMock.Node> stringifier) Parameters Type Name Description IStringifier < TreeMock.Edge , TreeMock.Node > stringifier Methods | Improve this Doc View Source CustomIndent_IsReflectedIntoOutput() Declaration public void CustomIndent_IsReflectedIntoOutput() | Improve this Doc View Source CustomNewLine_IsReflectedIntoOutput() Declaration public void CustomNewLine_IsReflectedIntoOutput()"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.Conversions.StringifierTests.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.Conversions.StringifierTests.html",
    "title": "Class StringifierTests",
    "keywords": "Class StringifierTests Inheritance System.Object StringifierTests FullyIterativeStringifierTests StringifierBaseTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.RecImmTrees.Conversions Assembly : StringAlgorithms.Tests.dll Syntax public abstract class StringifierTests Constructors | Improve this Doc View Source StringifierTests(IStringifier<TreeMock.Edge, TreeMock.Node>) Declaration public StringifierTests(IStringifier<TreeMock.Edge, TreeMock.Node> stringifier) Parameters Type Name Description IStringifier < TreeMock.Edge , TreeMock.Node > stringifier Fields | Improve this Doc View Source DefaultEdgeAndNodeStringifier Declaration protected static readonly Func<TreeMock.Edge, TreeMock.Node, string> DefaultEdgeAndNodeStringifier Field Value Type Description System.Func < TreeMock.Edge , TreeMock.Node , System.String > | Improve this Doc View Source DefaultIndent Declaration protected static readonly string DefaultIndent Field Value Type Description System.String | Improve this Doc View Source DefaultNewLine Declaration protected static readonly string DefaultNewLine Field Value Type Description System.String | Improve this Doc View Source DefaultRootStringifier Declaration protected static readonly Func<TreeMock.Node, string> DefaultRootStringifier Field Value Type Description System.Func < TreeMock.Node , System.String > Properties | Improve this Doc View Source I Declaration protected string I { get; } Property Value Type Description System.String | Improve this Doc View Source NL Declaration protected string NL { get; } Property Value Type Description System.String | Improve this Doc View Source Stringifier Declaration protected IStringifier<TreeMock.Edge, TreeMock.Node> Stringifier { get; set; } Property Value Type Description IStringifier < TreeMock.Edge , TreeMock.Node > Methods | Improve this Doc View Source Stringify_OfFourLevelsTree() Declaration public void Stringify_OfFourLevelsTree() | Improve this Doc View Source Stringify_OfLeaf() Declaration public void Stringify_OfLeaf() | Improve this Doc View Source Stringify_OfThreeLevelsTree() Declaration public void Stringify_OfThreeLevelsTree() | Improve this Doc View Source Stringify_OfTwoLevelsTree() Declaration public void Stringify_OfTwoLevelsTree()"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.Conversions.TreeMock.Edge.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.Conversions.TreeMock.Edge.html",
    "title": "Class TreeMock.Edge",
    "keywords": "Class TreeMock.Edge Inheritance System.Object TreeMock.Edge Implements IRecImmDictIndexedTreeEdge < TreeMock.Edge , TreeMock.Node > System.IEquatable < TreeMock.Edge > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.RecImmTrees.Conversions Assembly : StringAlgorithms.Tests.dll Syntax public class Edge : IRecImmDictIndexedTreeEdge<TreeMock.Edge, TreeMock.Node>, IEquatable<TreeMock.Edge> Constructors | Improve this Doc View Source Edge(Int32) Declaration public Edge(int Id) Parameters Type Name Description System.Int32 Id Properties | Improve this Doc View Source Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Implements IRecImmDictIndexedTreeEdge<TEdge, TNode> System.IEquatable<T>"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.Conversions.TreeMock.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.Conversions.TreeMock.html",
    "title": "Class TreeMock",
    "keywords": "Class TreeMock Inheritance System.Object TreeMock Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.RecImmTrees.Conversions Assembly : StringAlgorithms.Tests.dll Syntax public static class TreeMock Methods | Improve this Doc View Source BuildMostUnbalancedTree(Int32) Declaration public static TreeMock.Node BuildMostUnbalancedTree(int numberOfIntermediateNodes) Parameters Type Name Description System.Int32 numberOfIntermediateNodes Returns Type Description TreeMock.Node"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.Conversions.TreeMock.Node.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.Conversions.TreeMock.Node.html",
    "title": "Class TreeMock.Node",
    "keywords": "Class TreeMock.Node Inheritance System.Object TreeMock.Node Implements IRecImmDictIndexedTreeNode < TreeMock.Edge , TreeMock.Node > System.IEquatable < TreeMock.Node > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.RecImmTrees.Conversions Assembly : StringAlgorithms.Tests.dll Syntax public class Node : IRecImmDictIndexedTreeNode<TreeMock.Edge, TreeMock.Node>, IEquatable<TreeMock.Node> Constructors | Improve this Doc View Source Node(Int32) Declaration public Node(int id) Parameters Type Name Description System.Int32 id | Improve this Doc View Source Node(Int32, IDictionary<TreeMock.Edge, TreeMock.Node>) Declaration public Node(int Id, IDictionary<TreeMock.Edge, TreeMock.Node> Children) Parameters Type Name Description System.Int32 Id System.Collections.Generic.IDictionary < TreeMock.Edge , TreeMock.Node > Children Properties | Improve this Doc View Source Children Declaration public IDictionary<TreeMock.Edge, TreeMock.Node> Children { get; set; } Property Value Type Description System.Collections.Generic.IDictionary < TreeMock.Edge , TreeMock.Node > | Improve this Doc View Source Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Implements IRecImmDictIndexedTreeNode<TEdge, TNode> System.IEquatable<T>"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.html",
    "title": "Namespace StringAlgorithms.Tests.RecImmTrees",
    "keywords": "Namespace StringAlgorithms.Tests.RecImmTrees Classes RecImmDictIndexedTreeNodeExtensionsTests TreePathExtensionsTests TreePathTests"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.RecImmDictIndexedTreeNodeExtensionsTests.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.RecImmDictIndexedTreeNodeExtensionsTests.html",
    "title": "Class RecImmDictIndexedTreeNodeExtensionsTests",
    "keywords": "Class RecImmDictIndexedTreeNodeExtensionsTests Inheritance System.Object RecImmDictIndexedTreeNodeExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.RecImmTrees Assembly : StringAlgorithms.Tests.dll Syntax public class RecImmDictIndexedTreeNodeExtensionsTests Methods | Improve this Doc View Source GetAllNodeToLeafPaths_IsCorrect() Declaration public void GetAllNodeToLeafPaths_IsCorrect() | Improve this Doc View Source GetAllNodeToLeafPaths_IsCorrect2() Declaration public void GetAllNodeToLeafPaths_IsCorrect2() | Improve this Doc View Source IsLeaf_IsCorrectForSuffixTree() Declaration public void IsLeaf_IsCorrectForSuffixTree() | Improve this Doc View Source IsLeaf_IsCorrectForSuffixTrie() Declaration public void IsLeaf_IsCorrectForSuffixTrie()"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.TreePathExtensionsTests.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.TreePathExtensionsTests.html",
    "title": "Class TreePathExtensionsTests",
    "keywords": "Class TreePathExtensionsTests Inheritance System.Object TreePathExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.RecImmTrees Assembly : StringAlgorithms.Tests.dll Syntax public class TreePathExtensionsTests Methods | Improve this Doc View Source Append_IsCorrect() Declaration public void Append_IsCorrect() | Improve this Doc View Source Concat_IsCorrectAppendingEmptyPath() Declaration public void Concat_IsCorrectAppendingEmptyPath() | Improve this Doc View Source Concat_IsCorrectPrependingEmptyPath() Declaration public void Concat_IsCorrectPrependingEmptyPath() | Improve this Doc View Source Concat_IsCorrectWithTwoNonEmptyPaths() Declaration public void Concat_IsCorrectWithTwoNonEmptyPaths()"
  },
  "api/StringAlgorithms.Tests.RecImmTrees.TreePathTests.html": {
    "href": "api/StringAlgorithms.Tests.RecImmTrees.TreePathTests.html",
    "title": "Class TreePathTests",
    "keywords": "Class TreePathTests Inheritance System.Object TreePathTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.RecImmTrees Assembly : StringAlgorithms.Tests.dll Syntax public class TreePathTests Methods | Improve this Doc View Source Ctor_OfSuffixTree_EmptyPath_IsCorrect() Declaration public void Ctor_OfSuffixTree_EmptyPath_IsCorrect() | Improve this Doc View Source Ctor_OfSuffixTree_MultistepPath_IsCorrectWithEnumerable() Declaration public void Ctor_OfSuffixTree_MultistepPath_IsCorrectWithEnumerable() | Improve this Doc View Source Ctor_OfSuffixTree_MultistepPath_IsCorrectWithParams() Declaration public void Ctor_OfSuffixTree_MultistepPath_IsCorrectWithParams() | Improve this Doc View Source Ctor_OfSuffixTree_SingletonPath_IsCorrect() Declaration public void Ctor_OfSuffixTree_SingletonPath_IsCorrect() | Improve this Doc View Source Ctor_OfSuffixTrie_EmptyPath_IsCorrect() Declaration public void Ctor_OfSuffixTrie_EmptyPath_IsCorrect() | Improve this Doc View Source Ctor_OfSuffixTrie_MultistepPath_IsCorrectWithEnumerable() Declaration public void Ctor_OfSuffixTrie_MultistepPath_IsCorrectWithEnumerable() | Improve this Doc View Source Ctor_OfSuffixTrie_MultistepPath_IsCorrectWithParams() Declaration public void Ctor_OfSuffixTrie_MultistepPath_IsCorrectWithParams() | Improve this Doc View Source Ctor_OfSuffixTrie_SingletonPath_IsCorrect() Declaration public void Ctor_OfSuffixTrie_SingletonPath_IsCorrect() | Improve this Doc View Source PathNodes_OfSuffixTree_ImmutabilityOnCtorParam() Declaration public void PathNodes_OfSuffixTree_ImmutabilityOnCtorParam() | Improve this Doc View Source PathNodes_OfSuffixTree_ImmutabilityOnGet() Declaration public void PathNodes_OfSuffixTree_ImmutabilityOnGet() | Improve this Doc View Source PathNodes_OfSuffixTrie_ImmutabilityOnCtorParam() Declaration public void PathNodes_OfSuffixTrie_ImmutabilityOnCtorParam() | Improve this Doc View Source PathNodes_OfSuffixTrie_ImmutabilityOnGet() Declaration public void PathNodes_OfSuffixTrie_ImmutabilityOnGet()"
  },
  "api/StringAlgorithms.Tests.SuffixStructures.AdjacencyOrdersTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixStructures.AdjacencyOrdersTests.html",
    "title": "Class AdjacencyOrdersTests",
    "keywords": "Class AdjacencyOrdersTests Inheritance System.Object AdjacencyOrdersTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixStructures Assembly : StringAlgorithms.Tests.dll Syntax public class AdjacencyOrdersTests Methods | Improve this Doc View Source FlagsConsistency() Declaration public void FlagsConsistency()"
  },
  "api/StringAlgorithms.Tests.SuffixStructures.BuilderExtensionsTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixStructures.BuilderExtensionsTests.html",
    "title": "Class BuilderExtensionsTests",
    "keywords": "Class BuilderExtensionsTests Inheritance System.Object BuilderExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixStructures Assembly : StringAlgorithms.Tests.dll Syntax public class BuilderExtensionsTests Methods | Improve this Doc View Source BuildTree_CallsTheBuilderWithAnEquivalentTextWithTerminator() Declaration public void BuildTree_CallsTheBuilderWithAnEquivalentTextWithTerminator()"
  },
  "api/StringAlgorithms.Tests.SuffixStructures.Conversions.ConverterTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixStructures.Conversions.ConverterTests.html",
    "title": "Class ConverterTests",
    "keywords": "Class ConverterTests Inheritance System.Object ConverterTests FullyIterativeConverterTests FullyRecursiveConverterTests PartiallyIterativeConverterTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixStructures.Conversions Assembly : StringAlgorithms.Tests.dll Syntax public abstract class ConverterTests Constructors | Improve this Doc View Source ConverterTests(IConverter) Declaration public ConverterTests(IConverter suffixStructuresConverter) Parameters Type Name Description IConverter suffixStructuresConverter Properties | Improve this Doc View Source Converter Declaration protected IConverter Converter { get; set; } Property Value Type Description IConverter Methods | Improve this Doc View Source TrieToTree_Builds1LevelIntermediateFrom2LevelsCoalesceableIntermediate() Declaration public void TrieToTree_Builds1LevelIntermediateFrom2LevelsCoalesceableIntermediate() | Improve this Doc View Source TrieToTree_Builds1LevelIntermediateFrom2LevelsNonCoalesceableIntermediate() Declaration public void TrieToTree_Builds1LevelIntermediateFrom2LevelsNonCoalesceableIntermediate() | Improve this Doc View Source TrieToTree_Builds1LevelIntermediateFrom3LevelsCoalesceableIntermediate() Declaration public void TrieToTree_Builds1LevelIntermediateFrom3LevelsCoalesceableIntermediate() | Improve this Doc View Source TrieToTree_BuildsCorrectTree() Declaration public void TrieToTree_BuildsCorrectTree() | Improve this Doc View Source TrieToTree_BuildsLeafTreeFromLeafTrie() Declaration public void TrieToTree_BuildsLeafTreeFromLeafTrie() | Improve this Doc View Source TrieToTree_GoesDownNLevels_EndingOnLeaf() Declaration public void TrieToTree_GoesDownNLevels_EndingOnLeaf() | Improve this Doc View Source TrieToTree_GoesDownOneLevel_EndingOnIntermediateWithMultipleChildren() Declaration public void TrieToTree_GoesDownOneLevel_EndingOnIntermediateWithMultipleChildren() | Improve this Doc View Source TrieToTree_GoesDownOneLevel_EndingOnLeaf() Declaration public void TrieToTree_GoesDownOneLevel_EndingOnLeaf() | Improve this Doc View Source TrieToTree_GoesDownTwoLevels_EndingOnIntermediateWithMultipleChildren() Declaration public void TrieToTree_GoesDownTwoLevels_EndingOnIntermediateWithMultipleChildren() | Improve this Doc View Source TrieToTree_GoesDownTwoLevels_EndingOnLeaf() Declaration public void TrieToTree_GoesDownTwoLevels_EndingOnLeaf() | Improve this Doc View Source TrieToTree_OnlySupportsLeafAndIntermediateNodes_AsArgument() Declaration public void TrieToTree_OnlySupportsLeafAndIntermediateNodes_AsArgument() | Improve this Doc View Source TrieToTree_OnlySupportsLeafAndIntermediateNodes_DeepInTheStructure() Declaration public void TrieToTree_OnlySupportsLeafAndIntermediateNodes_DeepInTheStructure() | Improve this Doc View Source TrieToTree_RecurseOnChildren() Declaration public void TrieToTree_RecurseOnChildren() | Improve this Doc View Source TrieToTree_ReproducesALeafAsIs() Declaration public void TrieToTree_ReproducesALeafAsIs()"
  },
  "api/StringAlgorithms.Tests.SuffixStructures.Conversions.FullyIterativeConverterTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixStructures.Conversions.FullyIterativeConverterTests.html",
    "title": "Class FullyIterativeConverterTests",
    "keywords": "Class FullyIterativeConverterTests Runs tests defined in ConverterTests for FullyIterativeConverter . Inheritance System.Object ConverterTests FullyIterativeConverterTests Inherited Members ConverterTests.Converter ConverterTests.TrieToTree_BuildsCorrectTree() ConverterTests.TrieToTree_OnlySupportsLeafAndIntermediateNodes_AsArgument() ConverterTests.TrieToTree_OnlySupportsLeafAndIntermediateNodes_DeepInTheStructure() ConverterTests.TrieToTree_BuildsLeafTreeFromLeafTrie() ConverterTests.TrieToTree_Builds1LevelIntermediateFrom2LevelsCoalesceableIntermediate() ConverterTests.TrieToTree_Builds1LevelIntermediateFrom3LevelsCoalesceableIntermediate() ConverterTests.TrieToTree_RecurseOnChildren() ConverterTests.TrieToTree_Builds1LevelIntermediateFrom2LevelsNonCoalesceableIntermediate() ConverterTests.TrieToTree_ReproducesALeafAsIs() ConverterTests.TrieToTree_GoesDownOneLevel_EndingOnLeaf() ConverterTests.TrieToTree_GoesDownOneLevel_EndingOnIntermediateWithMultipleChildren() ConverterTests.TrieToTree_GoesDownTwoLevels_EndingOnLeaf() ConverterTests.TrieToTree_GoesDownTwoLevels_EndingOnIntermediateWithMultipleChildren() ConverterTests.TrieToTree_GoesDownNLevels_EndingOnLeaf() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixStructures.Conversions Assembly : StringAlgorithms.Tests.dll Syntax public class FullyIterativeConverterTests : ConverterTests Constructors | Improve this Doc View Source FullyIterativeConverterTests() Declaration public FullyIterativeConverterTests() Methods | Improve this Doc View Source TrieToTree_DoesntStackOverflowWithDeepStructures() Declaration public void TrieToTree_DoesntStackOverflowWithDeepStructures()"
  },
  "api/StringAlgorithms.Tests.SuffixStructures.Conversions.FullyRecursiveConverterTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixStructures.Conversions.FullyRecursiveConverterTests.html",
    "title": "Class FullyRecursiveConverterTests",
    "keywords": "Class FullyRecursiveConverterTests Runs tests defined in ConverterTests for FullyRecursiveConverter . Inheritance System.Object ConverterTests FullyRecursiveConverterTests Inherited Members ConverterTests.Converter ConverterTests.TrieToTree_BuildsCorrectTree() ConverterTests.TrieToTree_OnlySupportsLeafAndIntermediateNodes_AsArgument() ConverterTests.TrieToTree_OnlySupportsLeafAndIntermediateNodes_DeepInTheStructure() ConverterTests.TrieToTree_BuildsLeafTreeFromLeafTrie() ConverterTests.TrieToTree_Builds1LevelIntermediateFrom2LevelsCoalesceableIntermediate() ConverterTests.TrieToTree_Builds1LevelIntermediateFrom3LevelsCoalesceableIntermediate() ConverterTests.TrieToTree_RecurseOnChildren() ConverterTests.TrieToTree_Builds1LevelIntermediateFrom2LevelsNonCoalesceableIntermediate() ConverterTests.TrieToTree_ReproducesALeafAsIs() ConverterTests.TrieToTree_GoesDownOneLevel_EndingOnLeaf() ConverterTests.TrieToTree_GoesDownOneLevel_EndingOnIntermediateWithMultipleChildren() ConverterTests.TrieToTree_GoesDownTwoLevels_EndingOnLeaf() ConverterTests.TrieToTree_GoesDownTwoLevels_EndingOnIntermediateWithMultipleChildren() ConverterTests.TrieToTree_GoesDownNLevels_EndingOnLeaf() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixStructures.Conversions Assembly : StringAlgorithms.Tests.dll Syntax public class FullyRecursiveConverterTests : ConverterTests Constructors | Improve this Doc View Source FullyRecursiveConverterTests() Declaration public FullyRecursiveConverterTests()"
  },
  "api/StringAlgorithms.Tests.SuffixStructures.Conversions.html": {
    "href": "api/StringAlgorithms.Tests.SuffixStructures.Conversions.html",
    "title": "Namespace StringAlgorithms.Tests.SuffixStructures.Conversions",
    "keywords": "Namespace StringAlgorithms.Tests.SuffixStructures.Conversions Classes ConverterTests FullyIterativeConverterTests Runs tests defined in ConverterTests for FullyIterativeConverter . FullyRecursiveConverterTests Runs tests defined in ConverterTests for FullyRecursiveConverter . PartiallyIterativeConverterTests Runs tests defined in ConverterTests for PartiallyIterativeConverter ."
  },
  "api/StringAlgorithms.Tests.SuffixStructures.Conversions.PartiallyIterativeConverterTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixStructures.Conversions.PartiallyIterativeConverterTests.html",
    "title": "Class PartiallyIterativeConverterTests",
    "keywords": "Class PartiallyIterativeConverterTests Runs tests defined in ConverterTests for PartiallyIterativeConverter . Inheritance System.Object ConverterTests PartiallyIterativeConverterTests Inherited Members ConverterTests.Converter ConverterTests.TrieToTree_BuildsCorrectTree() ConverterTests.TrieToTree_OnlySupportsLeafAndIntermediateNodes_AsArgument() ConverterTests.TrieToTree_OnlySupportsLeafAndIntermediateNodes_DeepInTheStructure() ConverterTests.TrieToTree_BuildsLeafTreeFromLeafTrie() ConverterTests.TrieToTree_Builds1LevelIntermediateFrom2LevelsCoalesceableIntermediate() ConverterTests.TrieToTree_Builds1LevelIntermediateFrom3LevelsCoalesceableIntermediate() ConverterTests.TrieToTree_RecurseOnChildren() ConverterTests.TrieToTree_Builds1LevelIntermediateFrom2LevelsNonCoalesceableIntermediate() ConverterTests.TrieToTree_ReproducesALeafAsIs() ConverterTests.TrieToTree_GoesDownOneLevel_EndingOnLeaf() ConverterTests.TrieToTree_GoesDownOneLevel_EndingOnIntermediateWithMultipleChildren() ConverterTests.TrieToTree_GoesDownTwoLevels_EndingOnLeaf() ConverterTests.TrieToTree_GoesDownTwoLevels_EndingOnIntermediateWithMultipleChildren() ConverterTests.TrieToTree_GoesDownNLevels_EndingOnLeaf() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixStructures.Conversions Assembly : StringAlgorithms.Tests.dll Syntax public class PartiallyIterativeConverterTests : ConverterTests Constructors | Improve this Doc View Source PartiallyIterativeConverterTests() Declaration public PartiallyIterativeConverterTests()"
  },
  "api/StringAlgorithms.Tests.SuffixStructures.html": {
    "href": "api/StringAlgorithms.Tests.SuffixStructures.html",
    "title": "Namespace StringAlgorithms.Tests.SuffixStructures",
    "keywords": "Namespace StringAlgorithms.Tests.SuffixStructures Classes AdjacencyOrdersTests BuilderExtensionsTests SuffixStructuresEdgeExtensionsTests SuffixStructuresNodeExtensionsTests SuffixStructuresTreePathExtensionsTests"
  },
  "api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresEdgeExtensionsTests.html",
    "title": "Class SuffixStructuresEdgeExtensionsTests",
    "keywords": "Class SuffixStructuresEdgeExtensionsTests Inheritance System.Object SuffixStructuresEdgeExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixStructures Assembly : StringAlgorithms.Tests.dll Syntax public class SuffixStructuresEdgeExtensionsTests Methods | Improve this Doc View Source IsAdjacentTo_IsCorrect() Declaration public void IsAdjacentTo_IsCorrect()"
  },
  "api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresNodeExtensionsTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresNodeExtensionsTests.html",
    "title": "Class SuffixStructuresNodeExtensionsTests",
    "keywords": "Class SuffixStructuresNodeExtensionsTests Inheritance System.Object SuffixStructuresNodeExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixStructures Assembly : StringAlgorithms.Tests.dll Syntax public class SuffixStructuresNodeExtensionsTests Methods | Improve this Doc View Source GetAllSuffixesFor_IsCorrect() Declaration public void GetAllSuffixesFor_IsCorrect() | Improve this Doc View Source GetAllSuffixesFor_IsCorrect2() Declaration public void GetAllSuffixesFor_IsCorrect2()"
  },
  "api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresTreePathExtensionsTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixStructures.SuffixStructuresTreePathExtensionsTests.html",
    "title": "Class SuffixStructuresTreePathExtensionsTests",
    "keywords": "Class SuffixStructuresTreePathExtensionsTests Inheritance System.Object SuffixStructuresTreePathExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixStructures Assembly : StringAlgorithms.Tests.dll Syntax public class SuffixStructuresTreePathExtensionsTests Methods | Improve this Doc View Source IsSuffixOf_IsCorrectForNonEmtpyPath() Declaration public void IsSuffixOf_IsCorrectForNonEmtpyPath() | Improve this Doc View Source IsSuffixOf_IsTrueForEmtpyPath() Declaration public void IsSuffixOf_IsTrueForEmtpyPath() | Improve this Doc View Source SuffixFor_IsCorrectForEmptyPath() Declaration public void SuffixFor_IsCorrectForEmptyPath() | Improve this Doc View Source SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree() Declaration public void SuffixFor_IsCorrectForNonEmptyPathOnSuffixTree() | Improve this Doc View Source SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie() Declaration public void SuffixFor_IsCorrectForNonEmptyPathOnSuffixTrie()"
  },
  "api/StringAlgorithms.Tests.SuffixTrees.Builders.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTrees.Builders.html",
    "title": "Namespace StringAlgorithms.Tests.SuffixTrees.Builders",
    "keywords": "Namespace StringAlgorithms.Tests.SuffixTrees.Builders Classes SuffixTreeBuilderTests"
  },
  "api/StringAlgorithms.Tests.SuffixTrees.Builders.SuffixTreeBuilderTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTrees.Builders.SuffixTreeBuilderTests.html",
    "title": "Class SuffixTreeBuilderTests",
    "keywords": "Class SuffixTreeBuilderTests Inheritance System.Object SuffixTreeBuilderTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixTrees.Builders Assembly : StringAlgorithms.Tests.dll Syntax public class SuffixTreeBuilderTests Methods | Improve this Doc View Source BuildTree_BuildsExampleTreeFromExampleText() Declaration public void BuildTree_BuildsExampleTreeFromExampleText() | Improve this Doc View Source BuildTree_EmptyString() Declaration public void BuildTree_EmptyString() | Improve this Doc View Source BuildTree_ReturnsAllSuffixes() Declaration public void BuildTree_ReturnsAllSuffixes() | Improve this Doc View Source BuildTree_ReturnsOnlySuffixes() Declaration public void BuildTree_ReturnsOnlySuffixes() | Improve this Doc View Source BuildTree_SingleCharString() Declaration public void BuildTree_SingleCharString() | Improve this Doc View Source BuildTree_StartCorrectlySetAtLeafNodes() Declaration public void BuildTree_StartCorrectlySetAtLeafNodes() | Improve this Doc View Source BuildTree_StartLeftNullAtNonLeafNodes() Declaration public void BuildTree_StartLeftNullAtNonLeafNodes() | Improve this Doc View Source BuildTree_StringIncludingTerminator() Declaration public void BuildTree_StringIncludingTerminator() | Improve this Doc View Source BuildTree_ThreeCharsString_DifferentPrefixes() Declaration public void BuildTree_ThreeCharsString_DifferentPrefixes() | Improve this Doc View Source BuildTree_ThreeCharsString_ExtendingPrefixes() Declaration public void BuildTree_ThreeCharsString_ExtendingPrefixes() | Improve this Doc View Source BuildTree_ThreeCharsString_PartiallySamePrefixes() Declaration public void BuildTree_ThreeCharsString_PartiallySamePrefixes() | Improve this Doc View Source BuildTree_ThreeCharsString_SamePrefixes() Declaration public void BuildTree_ThreeCharsString_SamePrefixes() | Improve this Doc View Source BuildTree_TwoCharsString_DifferentPrefixes() Declaration public void BuildTree_TwoCharsString_DifferentPrefixes() | Improve this Doc View Source BuildTree_TwoCharsString_SamePrefixes() Declaration public void BuildTree_TwoCharsString_SamePrefixes() | Improve this Doc View Source BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring() Declaration public void BuildTree_UsesTerminatorForMatchToDistinguishSuffixesFromAnySubstring()"
  },
  "api/StringAlgorithms.Tests.SuffixTrees.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTrees.html",
    "title": "Namespace StringAlgorithms.Tests.SuffixTrees",
    "keywords": "Namespace StringAlgorithms.Tests.SuffixTrees Classes SuffixTreeEdgeTests SuffixTreeNodeTests"
  },
  "api/StringAlgorithms.Tests.SuffixTrees.Matching.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTrees.Matching.html",
    "title": "Namespace StringAlgorithms.Tests.SuffixTrees.Matching",
    "keywords": "Namespace StringAlgorithms.Tests.SuffixTrees.Matching Classes MatcherTests"
  },
  "api/StringAlgorithms.Tests.SuffixTrees.Matching.MatcherTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTrees.Matching.MatcherTests.html",
    "title": "Class MatcherTests",
    "keywords": "Class MatcherTests Inheritance System.Object MatcherTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixTrees.Matching Assembly : StringAlgorithms.Tests.dll Syntax public class MatcherTests Methods | Improve this Doc View Source Match_Preconditions() Declaration public void Match_Preconditions() | Improve this Doc View Source Match_SuccessAndMatchedCharsIsCorrect() Declaration public void Match_SuccessAndMatchedCharsIsCorrect() | Improve this Doc View Source Match_SuccessBeginAndPathIsCorrect() Declaration public void Match_SuccessBeginAndPathIsCorrect() | Improve this Doc View Source Match_UnsuccessAndMatchedCharsIsCorrect() Declaration public void Match_UnsuccessAndMatchedCharsIsCorrect()"
  },
  "api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeEdgeTests.html",
    "title": "Class SuffixTreeEdgeTests",
    "keywords": "Class SuffixTreeEdgeTests Inheritance System.Object SuffixTreeEdgeTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixTrees Assembly : StringAlgorithms.Tests.dll Syntax public class SuffixTreeEdgeTests Methods | Improve this Doc View Source Ctor_ValidIndex() Declaration public void Ctor_ValidIndex() | Improve this Doc View Source Ctor_ZeroLengthIsValid() Declaration public void Ctor_ZeroLengthIsValid() | Improve this Doc View Source Of_InboundIndexes() Declaration public void Of_InboundIndexes() | Improve this Doc View Source Of_OutOfBoundsIndexes() Declaration public void Of_OutOfBoundsIndexes()"
  },
  "api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTrees.SuffixTreeNodeTests.html",
    "title": "Class SuffixTreeNodeTests",
    "keywords": "Class SuffixTreeNodeTests Inheritance System.Object SuffixTreeNodeTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixTrees Assembly : StringAlgorithms.Tests.dll Syntax public class SuffixTreeNodeTests Methods | Improve this Doc View Source Children_Immutability_FromCtorParam() Declaration public void Children_Immutability_FromCtorParam() | Improve this Doc View Source Children_Immutability_OnGet() Declaration public void Children_Immutability_OnGet() | Improve this Doc View Source Ctor_InvalidArguments() Declaration public void Ctor_InvalidArguments() | Improve this Doc View Source Equality_IsAlwaysByValue() Declaration public void Equality_IsAlwaysByValue() | Improve this Doc View Source Indexer_RetrievesChild() Declaration public void Indexer_RetrievesChild() | Improve this Doc View Source ToString_IsTheSameOnEquivalentTrees() Declaration public void ToString_IsTheSameOnEquivalentTrees() | Improve this Doc View Source ToString_OnLeafIncludesStart() Declaration public void ToString_OnLeafIncludesStart()"
  },
  "api/StringAlgorithms.Tests.SuffixTries.Builders.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTries.Builders.html",
    "title": "Namespace StringAlgorithms.Tests.SuffixTries.Builders",
    "keywords": "Namespace StringAlgorithms.Tests.SuffixTries.Builders Classes SuffixTrieBuilderTests"
  },
  "api/StringAlgorithms.Tests.SuffixTries.Builders.SuffixTrieBuilderTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTries.Builders.SuffixTrieBuilderTests.html",
    "title": "Class SuffixTrieBuilderTests",
    "keywords": "Class SuffixTrieBuilderTests Inheritance System.Object SuffixTrieBuilderTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixTries.Builders Assembly : StringAlgorithms.Tests.dll Syntax public class SuffixTrieBuilderTests Methods | Improve this Doc View Source BuildTree_BuildsExampleTrieFromExampleText() Declaration public void BuildTree_BuildsExampleTrieFromExampleText() | Improve this Doc View Source BuildTree_EmptyString() Declaration public void BuildTree_EmptyString() | Improve this Doc View Source BuildTree_ReturnsAllSuffixes() Declaration public void BuildTree_ReturnsAllSuffixes() | Improve this Doc View Source BuildTree_ReturnsOnlySuffixes() Declaration public void BuildTree_ReturnsOnlySuffixes() | Improve this Doc View Source BuildTree_SingleCharString() Declaration public void BuildTree_SingleCharString() | Improve this Doc View Source BuildTree_StartCorrectlySetAtLeafNodes() Declaration public void BuildTree_StartCorrectlySetAtLeafNodes() | Improve this Doc View Source BuildTree_StartLeftNullAtNonLeafNodes() Declaration public void BuildTree_StartLeftNullAtNonLeafNodes() | Improve this Doc View Source BuildTree_StringIncludingTerminator() Declaration public void BuildTree_StringIncludingTerminator() | Improve this Doc View Source BuildTree_ThreeCharsString_DifferentPrefixes() Declaration public void BuildTree_ThreeCharsString_DifferentPrefixes() | Improve this Doc View Source BuildTree_ThreeCharsString_PartiallySamePrefixes() Declaration public void BuildTree_ThreeCharsString_PartiallySamePrefixes() | Improve this Doc View Source BuildTree_ThreeCharsString_SamePrefixes() Declaration public void BuildTree_ThreeCharsString_SamePrefixes() | Improve this Doc View Source BuildTree_TwoCharsString_DifferentPrefixes() Declaration public void BuildTree_TwoCharsString_DifferentPrefixes() | Improve this Doc View Source BuildTree_TwoCharsString_SamePrefixes() Declaration public void BuildTree_TwoCharsString_SamePrefixes() | Improve this Doc View Source BuildTree_WithTextWithTerminatorInput() Declaration public void BuildTree_WithTextWithTerminatorInput()"
  },
  "api/StringAlgorithms.Tests.SuffixTries.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTries.html",
    "title": "Namespace StringAlgorithms.Tests.SuffixTries",
    "keywords": "Namespace StringAlgorithms.Tests.SuffixTries Classes SuffixTrieEdgeTests SuffixTrieNodeTests"
  },
  "api/StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTries.SuffixTrieEdgeTests.html",
    "title": "Class SuffixTrieEdgeTests",
    "keywords": "Class SuffixTrieEdgeTests Inheritance System.Object SuffixTrieEdgeTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixTries Assembly : StringAlgorithms.Tests.dll Syntax public class SuffixTrieEdgeTests Methods | Improve this Doc View Source Ctor_ValidIndex() Declaration public void Ctor_ValidIndex() | Improve this Doc View Source Of_InboundIndexes() Declaration public void Of_InboundIndexes() | Improve this Doc View Source Of_OutOfBoundsIndexes() Declaration public void Of_OutOfBoundsIndexes()"
  },
  "api/StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.html": {
    "href": "api/StringAlgorithms.Tests.SuffixTries.SuffixTrieNodeTests.html",
    "title": "Class SuffixTrieNodeTests",
    "keywords": "Class SuffixTrieNodeTests Inheritance System.Object SuffixTrieNodeTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.SuffixTries Assembly : StringAlgorithms.Tests.dll Syntax public class SuffixTrieNodeTests Methods | Improve this Doc View Source Children_Immutability_FromCtorParam() Declaration public void Children_Immutability_FromCtorParam() | Improve this Doc View Source Children_ImmutabilityOnGet() Declaration public void Children_ImmutabilityOnGet() | Improve this Doc View Source Ctor_InvalidArguments() Declaration public void Ctor_InvalidArguments() | Improve this Doc View Source Equality_IsAlwaysByValue() Declaration public void Equality_IsAlwaysByValue() | Improve this Doc View Source Indexer_RetrievesChild() Declaration public void Indexer_RetrievesChild() | Improve this Doc View Source ToString_IsTheSameOnEquivalentTrees() Declaration public void ToString_IsTheSameOnEquivalentTrees() | Improve this Doc View Source ToString_OnLeafIncludesStart() Declaration public void ToString_OnLeafIncludesStart()"
  },
  "api/StringAlgorithms.Tests.TextWithTerminatorTests.html": {
    "href": "api/StringAlgorithms.Tests.TextWithTerminatorTests.html",
    "title": "Class TextWithTerminatorTests",
    "keywords": "Class TextWithTerminatorTests Inheritance System.Object TextWithTerminatorTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests Assembly : StringAlgorithms.Tests.dll Syntax public class TextWithTerminatorTests Methods | Improve this Doc View Source Ctor_Preconditions() Declaration public void Ctor_Preconditions() | Improve this Doc View Source EndsWith_IsCorrect() Declaration public void EndsWith_IsCorrect() | Improve this Doc View Source Indexer_WithIndex() Declaration public void Indexer_WithIndex() | Improve this Doc View Source Indexer_WithRange() Declaration public void Indexer_WithRange() | Improve this Doc View Source Indexer_WithSelector() Declaration public void Indexer_WithSelector() | Improve this Doc View Source Length_IsCorrect() Declaration public void Length_IsCorrect() | Improve this Doc View Source StartsWith_IsCorrect() Declaration public void StartsWith_IsCorrect()"
  },
  "api/StringAlgorithms.Tests.Utilities.html": {
    "href": "api/StringAlgorithms.Tests.Utilities.html",
    "title": "Namespace StringAlgorithms.Tests.Utilities",
    "keywords": "Namespace StringAlgorithms.Tests.Utilities Classes StringUtilitiesTests ValueReadOnlyCollectionsExtensionsTests ValueReadOnlyCollectionTests ValueReadOnlyDictionaryTests"
  },
  "api/StringAlgorithms.Tests.Utilities.StringUtilitiesTests.html": {
    "href": "api/StringAlgorithms.Tests.Utilities.StringUtilitiesTests.html",
    "title": "Class StringUtilitiesTests",
    "keywords": "Class StringUtilitiesTests Inheritance System.Object StringUtilitiesTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.Utilities Assembly : StringAlgorithms.Tests.dll Syntax public class StringUtilitiesTests Methods | Improve this Doc View Source LongestPrefixInCommon_IsCorrect() Declaration public void LongestPrefixInCommon_IsCorrect()"
  },
  "api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionsExtensionsTests.html": {
    "href": "api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionsExtensionsTests.html",
    "title": "Class ValueReadOnlyCollectionsExtensionsTests",
    "keywords": "Class ValueReadOnlyCollectionsExtensionsTests Inheritance System.Object ValueReadOnlyCollectionsExtensionsTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.Utilities Assembly : StringAlgorithms.Tests.dll Syntax public class ValueReadOnlyCollectionsExtensionsTests Methods | Improve this Doc View Source ToValueReadOnlyCollection_IsCorrect() Declaration public void ToValueReadOnlyCollection_IsCorrect() | Improve this Doc View Source ToValueReadOnlyDictionary_IsCorrectWithDictionary() Declaration public void ToValueReadOnlyDictionary_IsCorrectWithDictionary() | Improve this Doc View Source ToValueReadOnlyDictionary_IsCorrectWithEnumerable() Declaration public void ToValueReadOnlyDictionary_IsCorrectWithEnumerable()"
  },
  "api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html": {
    "href": "api/StringAlgorithms.Tests.Utilities.ValueReadOnlyCollectionTests.html",
    "title": "Class ValueReadOnlyCollectionTests",
    "keywords": "Class ValueReadOnlyCollectionTests Inheritance System.Object ValueReadOnlyCollectionTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.Utilities Assembly : StringAlgorithms.Tests.dll Syntax public class ValueReadOnlyCollectionTests Methods | Improve this Doc View Source Ctor_EmbedInputEnumerable() Declaration public void Ctor_EmbedInputEnumerable() | Improve this Doc View Source Ctor_IndependenceFromInputEnumerable() Declaration public void Ctor_IndependenceFromInputEnumerable() | Improve this Doc View Source DifferentOperator_IsByValue() Declaration public void DifferentOperator_IsByValue() | Improve this Doc View Source Equals_CheckType() Declaration public void Equals_CheckType() | Improve this Doc View Source Equals_IsByValue() Declaration public void Equals_IsByValue() | Improve this Doc View Source Equals_IsSensitiveToTheOrderOfAddition() Declaration public void Equals_IsSensitiveToTheOrderOfAddition() | Improve this Doc View Source EqualsOperator_IsByValue() Declaration public void EqualsOperator_IsByValue() | Improve this Doc View Source GetHashCode_IsByValue_WithPrimitiveType() Declaration public void GetHashCode_IsByValue_WithPrimitiveType() | Improve this Doc View Source GetHashCode_IsByValue_WithRecordType() Declaration public void GetHashCode_IsByValue_WithRecordType() | Improve this Doc View Source ToString_IncludesToStringOfItems() Declaration public void ToString_IncludesToStringOfItems()"
  },
  "api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html": {
    "href": "api/StringAlgorithms.Tests.Utilities.ValueReadOnlyDictionaryTests.html",
    "title": "Class ValueReadOnlyDictionaryTests",
    "keywords": "Class ValueReadOnlyDictionaryTests Inheritance System.Object ValueReadOnlyDictionaryTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Tests.Utilities Assembly : StringAlgorithms.Tests.dll Syntax public class ValueReadOnlyDictionaryTests Methods | Improve this Doc View Source Ctor_EmbedInputEnumerable() Declaration public void Ctor_EmbedInputEnumerable() | Improve this Doc View Source Ctor_IndependenceFromInputEnumerable() Declaration public void Ctor_IndependenceFromInputEnumerable() | Improve this Doc View Source Ctor_WithEnumerableOfEntries() Declaration public void Ctor_WithEnumerableOfEntries() | Improve this Doc View Source DifferentOperator_IsByValue() Declaration public void DifferentOperator_IsByValue() | Improve this Doc View Source Equals_CheckType() Declaration public void Equals_CheckType() | Improve this Doc View Source Equals_IsByValue() Declaration public void Equals_IsByValue() | Improve this Doc View Source Equals_IsInsensitiveToTheOrderOfAddition() Declaration public void Equals_IsInsensitiveToTheOrderOfAddition() | Improve this Doc View Source EqualsOperator_IsByValue() Declaration public void EqualsOperator_IsByValue() | Improve this Doc View Source GetHashCode_IsByValue_WithPrimitiveType() Declaration public void GetHashCode_IsByValue_WithPrimitiveType() | Improve this Doc View Source GetHashCode_IsByValue_WithRecordType() Declaration public void GetHashCode_IsByValue_WithRecordType() | Improve this Doc View Source ToString_IncludesToStringOfKeysAndValues() Declaration public void ToString_IncludesToStringOfKeysAndValues()"
  },
  "api/StringAlgorithms.TextWithTerminator.html": {
    "href": "api/StringAlgorithms.TextWithTerminator.html",
    "title": "Class TextWithTerminator",
    "keywords": "Class TextWithTerminator A text string with a terminator character, not present in the text. Inheritance System.Object TextWithTerminator Implements System.IEquatable < TextWithTerminator > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms Assembly : StringAlgorithms.dll Syntax public class TextWithTerminator : IEquatable<TextWithTerminator> Remarks A terminator-terminated text is required by data structures like Suffix Trees. This object provides type safety, as it allows to tell apart terminator-terminated strings from generic ones. Constructors | Improve this Doc View Source TextWithTerminator(String, Char) A text string with a terminator character, not present in the text. Declaration public TextWithTerminator(string Text, char Terminator = '$') Parameters Type Name Description System.String Text A text string. System.Char Terminator A terminator character, not present in the text. If not specified DefaultTerminator is used. Remarks A terminator-terminated text is required by data structures like Suffix Trees. This object provides type safety, as it allows to tell apart terminator-terminated strings from generic ones. Fields | Improve this Doc View Source DefaultTerminator The special character used as a default terminator for the text to build the Suffix Tree of, when no custom terminator is specified. Should not be present in the text. Declaration public const char DefaultTerminator = '$' Field Value Type Description System.Char Properties | Improve this Doc View Source Item[Index] Select a part of this text by the provided index. Declaration public char this[Index index] { get; } Parameters Type Name Description Index index The index applied to the underlying string. Property Value Type Description System.Char A char containing the selected part. | Improve this Doc View Source Item[Range] Select a part of this text by the provided range. Declaration public string this[Range range] { get; } Parameters Type Name Description Range range The range applied to the underlying string. Property Value Type Description System.String A string containing the selected part. | Improve this Doc View Source Item[TextWithTerminator.ISelector] Select a part of this text by the provided selector. Declaration public string this[TextWithTerminator.ISelector selector] { get; } Parameters Type Name Description TextWithTerminator.ISelector selector Any selector acting on a TextWithTerminator . Property Value Type Description System.String A string containing the selected part. | Improve this Doc View Source Length The total length of this text, including the terminator. Declaration public int Length { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Terminator A terminator character, not present in the text. Declaration public char Terminator { get; set; } Property Value Type Description System.Char | Improve this Doc View Source Text A text string. Declaration public string Text { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source EndsWith(String) Whether this text ends with the provided suffix. Declaration public bool EndsWith(string suffix) Parameters Type Name Description System.String suffix A terminator-included string. Returns Type Description System.Boolean True if this text ends by the suffix. | Improve this Doc View Source StartsWith(String) Whether this text starts with the provided suffix. Declaration public bool StartsWith(string prefix) Parameters Type Name Description System.String prefix A terminator-included string. Returns Type Description System.Boolean True if this text starts by the prefix. Implements System.IEquatable<T>"
  },
  "api/StringAlgorithms.TextWithTerminator.ISelector.html": {
    "href": "api/StringAlgorithms.TextWithTerminator.ISelector.html",
    "title": "Interface TextWithTerminator.ISelector",
    "keywords": "Interface TextWithTerminator.ISelector A selector of a part of a text with terminator. Namespace : StringAlgorithms Assembly : StringAlgorithms.dll Syntax public interface ISelector Methods | Improve this Doc View Source Of(TextWithTerminator) Extract the substring identified by this selector, out of the provided text. Declaration string Of(TextWithTerminator text) Parameters Type Name Description TextWithTerminator text The text with terminator, to extract a substring of. Returns Type Description System.String A substring, whose length depends on the selector."
  },
  "api/StringAlgorithms.Utilities.html": {
    "href": "api/StringAlgorithms.Utilities.html",
    "title": "Namespace StringAlgorithms.Utilities",
    "keywords": "Namespace StringAlgorithms.Utilities Classes LockValueObject An empty object with value equality (always true), to be used as lock object in records and other value structures. StringUtilities Generic utilities and extensions for strings. ValueReadOnlyCollection<T> A readonly immutable generic collection of non-null items which performs equality by value. ValueReadOnlyCollectionsExtensions Extension methods for value readonly collections defined in StringAlgorithms.Utilities . ValueReadOnlyDictionary<TKey, TValue> A readonly immutable generic dictionary of non-null keys and values which performs equality by value."
  },
  "api/StringAlgorithms.Utilities.LockValueObject.html": {
    "href": "api/StringAlgorithms.Utilities.LockValueObject.html",
    "title": "Class LockValueObject",
    "keywords": "Class LockValueObject An empty object with value equality (always true), to be used as lock object in records and other value structures. Inheritance System.Object LockValueObject Implements System.IEquatable < LockValueObject > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Utilities Assembly : StringAlgorithms.dll Syntax public class LockValueObject : IEquatable<LockValueObject> Remarks Since all instances are empty, and equality is done by value, always returns true , when the provided object is of type , and always returns the same value (0). Implements System.IEquatable<T>"
  },
  "api/StringAlgorithms.Utilities.StringUtilities.html": {
    "href": "api/StringAlgorithms.Utilities.StringUtilities.html",
    "title": "Class StringUtilities",
    "keywords": "Class StringUtilities Generic utilities and extensions for strings. Inheritance System.Object StringUtilities Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Utilities Assembly : StringAlgorithms.dll Syntax public static class StringUtilities Methods | Improve this Doc View Source LongestPrefixInCommon(String, String) Returns the length of the longest prefix in common between the provided strings. Declaration public static int LongestPrefixInCommon(string s1, string s2) Parameters Type Name Description System.String s1 System.String s2 Returns Type Description System.Int32 An integer betwen 0 and the length of the shortest of the strings provided."
  },
  "api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html": {
    "href": "api/StringAlgorithms.Utilities.ValueReadOnlyCollection-1.html",
    "title": "Class ValueReadOnlyCollection<T>",
    "keywords": "Class ValueReadOnlyCollection<T> A readonly immutable generic collection of non-null items which performs equality by value. Inheritance System.Object System.Collections.ObjectModel.ReadOnlyCollection <T> ValueReadOnlyCollection<T> Implements System.Collections.Generic.IList <T> System.Collections.Generic.ICollection <T> System.Collections.Generic.IReadOnlyList <T> System.Collections.Generic.IReadOnlyCollection <T> System.Collections.Generic.IEnumerable <T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Inherited Members System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.get_Item(System.Int32) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.set_Item(System.Int32, T) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T) System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo(T[], System.Int32) System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator() System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf(T) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add(T) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear() System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove(T) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert(System.Int32, T) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt(System.Int32) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear() System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt(System.Int32) System.Collections.ObjectModel.ReadOnlyCollection<T>.Count System.Collections.ObjectModel.ReadOnlyCollection<T>.Item[System.Int32] System.Collections.ObjectModel.ReadOnlyCollection<T>.Items System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item[System.Int32] System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : StringAlgorithms.Utilities Assembly : StringAlgorithms.dll Syntax public class ValueReadOnlyCollection<T> : ReadOnlyCollection<T>, IList<T>, ICollection<T>, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IList, ICollection, IEnumerable Type Parameters Name Description T The type of elements in the collection. Remarks Immutability can be guaranteed by cloning the provided enumerable and exposing a readonly view of it, but only if immutability of underlying T is provided, for example, by using immutable records. Constructors | Improve this Doc View Source ValueReadOnlyCollection(IEnumerable<T>) Creates value readonly collection out of the provided enumerable, and independent from it. Declaration public ValueReadOnlyCollection(IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable <T> enumerable The enumerable to be used to build the readonly collection. Methods | Improve this Doc View Source Equals(Object) Equality is calculated by value, i.e. on the collections items directly. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean True if the specified object is equal to the current collection by value; otherwise, false. Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() The hash code is calculated by value, as an aggregate of the hash codes of its items. Declaration public override int GetHashCode() Returns Type Description System.Int32 A 32-bit signed integer hash code. Overrides System.Object.GetHashCode() | Improve this Doc View Source ToString() Format: \"[v1, v2, ...]\". Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Operators | Improve this Doc View Source Equality(ValueReadOnlyCollection<T>, ValueReadOnlyCollection<T>) Compare the two provided value read-only collections for equality by value. Declaration public static bool operator ==(ValueReadOnlyCollection<T> left, ValueReadOnlyCollection<T> right) Parameters Type Name Description ValueReadOnlyCollection <T> left The first term of comparison. ValueReadOnlyCollection <T> right The second term of comparison. Returns Type Description System.Boolean True if the two collections are equal by their items, false otherwise. | Improve this Doc View Source Inequality(ValueReadOnlyCollection<T>, ValueReadOnlyCollection<T>) Compare the two provided value read-only collections for inequality by value. Declaration public static bool operator !=(ValueReadOnlyCollection<T> left, ValueReadOnlyCollection<T> right) Parameters Type Name Description ValueReadOnlyCollection <T> left The first term of comparison. ValueReadOnlyCollection <T> right The second term of comparison. Returns Type Description System.Boolean True if the two collections are different by their items, false otherwise. Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable"
  },
  "api/StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.html": {
    "href": "api/StringAlgorithms.Utilities.ValueReadOnlyCollectionsExtensions.html",
    "title": "Class ValueReadOnlyCollectionsExtensions",
    "keywords": "Class ValueReadOnlyCollectionsExtensions Extension methods for value readonly collections defined in StringAlgorithms.Utilities . Inheritance System.Object ValueReadOnlyCollectionsExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StringAlgorithms.Utilities Assembly : StringAlgorithms.dll Syntax public static class ValueReadOnlyCollectionsExtensions Methods | Improve this Doc View Source ToValueReadOnlyCollection<T>(IEnumerable<T>) Builds a ValueReadOnlyCollection<T> out of the provided dictionary. Declaration public static ValueReadOnlyCollection<T> ToValueReadOnlyCollection<T>(this IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable <T> enumerable Returns Type Description ValueReadOnlyCollection <T> An instance of ValueReadOnlyCollection<T> , independent from the provided enumerable. Type Parameters Name Description T | Improve this Doc View Source ToValueReadOnlyDictionary<TKey, TValue>(IDictionary<TKey, TValue>) Builds a ValueReadOnlyDictionary<TKey, TValue> out of the provided dictionary. Declaration public static ValueReadOnlyDictionary<TKey, TValue> ToValueReadOnlyDictionary<TKey, TValue>(this IDictionary<TKey, TValue> dictionary) Parameters Type Name Description IDictionary <TKey, TValue> dictionary Returns Type Description ValueReadOnlyDictionary <TKey, TValue> An instance of ValueReadOnlyDictionary<TKey, TValue> , independent from the provided dictionary. Type Parameters Name Description TKey TValue | Improve this Doc View Source ToValueReadOnlyDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>) Builds a ValueReadOnlyDictionary<TKey, TValue> out of the provided enumerable of entries. Declaration public static ValueReadOnlyDictionary<TKey, TValue> ToValueReadOnlyDictionary<TKey, TValue>(this IEnumerable<KeyValuePair<TKey, TValue>> entries) Parameters Type Name Description IEnumerable < KeyValuePair <TKey, TValue>> entries Returns Type Description ValueReadOnlyDictionary <TKey, TValue> An instance of ValueReadOnlyDictionary<TKey, TValue> , independent from the provided enumerable of entries. Type Parameters Name Description TKey TValue"
  },
  "api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html": {
    "href": "api/StringAlgorithms.Utilities.ValueReadOnlyDictionary-2.html",
    "title": "Class ValueReadOnlyDictionary<TKey, TValue>",
    "keywords": "Class ValueReadOnlyDictionary<TKey, TValue> A readonly immutable generic dictionary of non-null keys and values which performs equality by value. Inheritance System.Object System.Collections.ObjectModel.ReadOnlyDictionary <TKey, TValue> ValueReadOnlyDictionary<TKey, TValue> Implements System.Collections.Generic.IDictionary <TKey, TValue> System.Collections.Generic.ICollection < System.Collections.Generic.KeyValuePair <TKey, TValue>> System.Collections.Generic.IReadOnlyDictionary <TKey, TValue> System.Collections.Generic.IReadOnlyCollection < System.Collections.Generic.KeyValuePair <TKey, TValue>> System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair <TKey, TValue>> System.Collections.IDictionary System.Collections.ICollection System.Collections.IEnumerable Inherited Members System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.get_Item(TKey) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.set_Item(TKey, TValue) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.set_Item(System.Object, System.Object) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.GetEnumerator() System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear() System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Clear() System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator() System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue) System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Count System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Dictionary System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Item[TKey] System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Keys System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey] System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Item[System.Object] System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Keys System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Values System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Values System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : StringAlgorithms.Utilities Assembly : StringAlgorithms.dll Syntax public class ValueReadOnlyDictionary<TKey, TValue> : ReadOnlyDictionary<TKey, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable Type Parameters Name Description TKey The type of keys in the dictionary. TValue The type of values in the dictionary. Remarks Immutability can be guaranteed by cloning the provided dictionary and exposing a readonly view of it, but only if immutability of underlying TKey and TValue is provided, for example, by using immutable records. Constructors | Improve this Doc View Source ValueReadOnlyDictionary(IDictionary<TKey, TValue>) Creates value readonly dictionary out of the provided dictionary, and independent from it. Declaration public ValueReadOnlyDictionary(IDictionary<TKey, TValue> dictionary) Parameters Type Name Description IDictionary <TKey, TValue> dictionary The dictionary to be used to build the readonly dictionary. | Improve this Doc View Source ValueReadOnlyDictionary(IEnumerable<KeyValuePair<TKey, TValue>>) Creates value readonly dictionary out of the provided entries, and independent from the provided enumerable of them. Declaration public ValueReadOnlyDictionary(IEnumerable<KeyValuePair<TKey, TValue>> entries) Parameters Type Name Description IEnumerable < KeyValuePair <TKey, TValue>> entries The enumerable of entries to be used to build the readonly dictionary. Methods | Improve this Doc View Source Equals(Object) Equality is calculated by value, i.e. on the dictionary key-value pairs directly. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean True if the specified object is equal to the current dictionary by value; otherwise, false. Two dictionaries are considered equal by value if they have the same set of keys and the value associated with each of the key by the two dictionaries are equal with each other. Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() The hash code is calculated by value, as an aggregate of the hash codes of its key value pairs. Declaration public override int GetHashCode() Returns Type Description System.Int32 A 32-bit signed integer hash code. Overrides System.Object.GetHashCode() | Improve this Doc View Source ToString() Format: \"{[k1] = v1, [k2] = v2, ...}\". Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Operators | Improve this Doc View Source Equality(ValueReadOnlyDictionary<TKey, TValue>, ValueReadOnlyDictionary<TKey, TValue>) Compare the two provided value read-only dictionaries for equality by value. Declaration public static bool operator ==(ValueReadOnlyDictionary<TKey, TValue> left, ValueReadOnlyDictionary<TKey, TValue> right) Parameters Type Name Description ValueReadOnlyDictionary <TKey, TValue> left The first term of comparison. ValueReadOnlyDictionary <TKey, TValue> right The second term of comparison. Returns Type Description System.Boolean True if the two dictionaries are equal by their items, false otherwise. | Improve this Doc View Source Inequality(ValueReadOnlyDictionary<TKey, TValue>, ValueReadOnlyDictionary<TKey, TValue>) Compare the two provided value read-only dictionaries for inequality by value. Declaration public static bool operator !=(ValueReadOnlyDictionary<TKey, TValue> left, ValueReadOnlyDictionary<TKey, TValue> right) Parameters Type Name Description ValueReadOnlyDictionary <TKey, TValue> left The first term of comparison. ValueReadOnlyDictionary <TKey, TValue> right The second term of comparison. Returns Type Description System.Boolean True if the two dictionaries are different by their items, false otherwise. Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyDictionary<TKey, TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.IEnumerable"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE.",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}